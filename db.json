{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/LiveForCode/source/404.html","path":"404.html","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/CNAME","path":"CNAME","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/image/cyc2018.png","path":"image/cyc2018.png","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/image/bndong.gif","path":"image/bndong.gif","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/image/iissnan.jpg","path":"image/iissnan.jpg","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/image/hexo.png","path":"image/hexo.png","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/image/screenshots.png","path":"image/screenshots.png","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/image/volantis.png","path":"image/volantis.png","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/cover/Endless Tears.jpg","path":"music/cover/Endless Tears.jpg","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/cover/Miracle.jpg","path":"music/cover/Miracle.jpg","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/cover/Roll The Dice.jpg","path":"music/cover/Roll The Dice.jpg","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/cover/See You Again.jpg","path":"music/cover/See You Again.jpg","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/cover/Traveling Light.jpg","path":"music/cover/Traveling Light.jpg","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/cover/aLIEz.jpg","path":"music/cover/aLIEz.jpg","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/cover/好想大声说爱你.jpg","path":"music/cover/好想大声说爱你.jpg","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/cover/生命树.jpg","path":"music/cover/生命树.jpg","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/cover/痴心绝对.jpg","path":"music/cover/痴心绝对.jpg","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/lrc/Endless Tears.lrc","path":"music/lrc/Endless Tears.lrc","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/lrc/Miracle.lrc","path":"music/lrc/Miracle.lrc","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/lrc/Roll The Dice.lrc","path":"music/lrc/Roll The Dice.lrc","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/lrc/See You Again.lrc","path":"music/lrc/See You Again.lrc","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/lrc/Traveling Light.lrc","path":"music/lrc/Traveling Light.lrc","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/lrc/aLIEz.lrc","path":"music/lrc/aLIEz.lrc","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/lrc/回过头.lrc","path":"music/lrc/回过头.lrc","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/lrc/好想大声说爱你.lrc","path":"music/lrc/好想大声说爱你.lrc","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/lrc/生命树.lrc","path":"music/lrc/生命树.lrc","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/lrc/痴心绝对.lrc","path":"music/lrc/痴心绝对.lrc","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/song/Baby.mp3","path":"music/song/Baby.mp3","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/song/See You Again.mp3","path":"music/song/See You Again.mp3","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/song/回过头.mp3","path":"music/song/回过头.mp3","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/song/大风吹.mp3","path":"music/song/大风吹.mp3","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/song/好想大声说爱你.mp3","path":"music/song/好想大声说爱你.mp3","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/song/热爱105°C的你.mp3","path":"music/song/热爱105°C的你.mp3","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/song/生命树.mp3","path":"music/song/生命树.mp3","modified":0,"renderable":1},{"_id":"themes/LiveForCode/source/music/song/痴心绝对.mp3","path":"music/song/痴心绝对.mp3","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/ADB无线调试真机.md","hash":"90275155c9038253b430fc7bd45f639e9e1d8435","modified":1628386314899},{"_id":"source/_posts/CMD 常用命令.md","hash":"5df67b818c9739ba26b32c8976f6460e44513ded","modified":1623148875252},{"_id":"source/_posts/Git 常用命令.md","hash":"b0f47491ceac16e245ed3dc63adbcde49a9a93ec","modified":1623149083986},{"_id":"source/_posts/Git配置同时存在Gitee、Github多个账户.md","hash":"811062edf6c4cd8f5736c027589f9d67b58bfa31","modified":1628729993593},{"_id":"source/_posts/Java高级开发之JNI.md","hash":"69e59f7f73cec286a95dd82ad335dad53f711c7b","modified":1627896785557},{"_id":"source/_posts/Linux使用MySQL5-7-过程出现的问题.md","hash":"76a7bfe99f054e83e17b781b2e8cd4eedad54898","modified":1622509754073},{"_id":"source/_posts/Python 解压缩文件【只能压缩文件夹】.md","hash":"4992bc8b4414f6dce00496e1ce84028a92e4df11","modified":1622509754074},{"_id":"source/_posts/Python操作Excel.md","hash":"a223ed4dbec678079f0641e818ae6ec7c4f76466","modified":1622509754074},{"_id":"source/_posts/Windows常用技巧.md","hash":"716b320d2e2e8e2209f40eb3328ae83f5fa99b18","modified":1622509754075},{"_id":"source/_posts/hello-world.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1622510024166},{"_id":"source/_posts/【Android 控件的基本属性】.md","hash":"2e388466593d85a73f848684d6d90304859979d7","modified":1622683280428},{"_id":"source/_posts/从Gitee仓库拉取原有的 blog.md","hash":"5b675437d4966bd670eceedf339acc70ab4b0319","modified":1622511478055},{"_id":"source/_posts/清除BIOS界面密码.md","hash":"b7bb01caaacfcc3cdf5496ac759dd3fa3d4a6acf","modified":1627003084726},{"_id":"source/about/index.md","hash":"48b94a9e0b60c57657c9b33d8e7fe0454f13bb2e","modified":1622509754075},{"_id":"source/category/index.md","hash":"ff67929bf135a57256323dc495a7a1fc50612571","modified":1622509754076},{"_id":"source/comment/index.md","hash":"07fba5e087abf08e19a1ea11b318652f35c1163b","modified":1622509754077},{"_id":"source/donate/index.md","hash":"b3712e17895bcdb49769a37711453fad8b160c13","modified":1622509754078},{"_id":"source/friend/index.md","hash":"5209c8893622a746b9b09174bc43781d499b5ade","modified":1622509754079},{"_id":"source/tag/index.md","hash":"805566d47c237999f27557e08a56274f0c68b2e9","modified":1622509754079},{"_id":"themes/LiveForCode/languages/en-us.yml","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1622509754081},{"_id":"themes/LiveForCode/_config.yml","hash":"f83d00864c6c86c5043ddf6a80bd7cf2988414ac","modified":1628729184559},{"_id":"themes/LiveForCode/layout/archive.ejs","hash":"aa7d36e38bd581d6d16c625609fe2544ce1b5e20","modified":1622509754098},{"_id":"themes/LiveForCode/layout/index.ejs","hash":"dd85982fcfd527b30d9864e742bd9683b2bdfdb7","modified":1628692655018},{"_id":"themes/LiveForCode/layout/category.ejs","hash":"746cbf1dc324b9097cedde3e4b2ad681263f9db7","modified":1622509754099},{"_id":"themes/LiveForCode/layout/layout.ejs","hash":"f2cf2bcc90d0a0cff833ceacde3b1afb0c012402","modified":1622509754100},{"_id":"themes/LiveForCode/layout/page.ejs","hash":"5a7eae6ce34ddc6c76b4e167068672b36e7ba584","modified":1622509754100},{"_id":"themes/LiveForCode/layout/post.ejs","hash":"ad21e7dd1664b49d36027cb314906f8fd3c3a262","modified":1622509754101},{"_id":"themes/LiveForCode/layout/tag.ejs","hash":"fdbe5a9ffece185f64b5b2664947633d7afaae21","modified":1622509754101},{"_id":"themes/LiveForCode/languages/zh-cn.yml","hash":"7934d4155d66a1ee21272799a0fbb2cf14676e52","modified":1622509754082},{"_id":"themes/LiveForCode/source/404.html","hash":"6d3dd6ace87dad02a1872defc9411e6ce6ba1185","modified":1628692655019},{"_id":"themes/LiveForCode/source/CNAME","hash":"c2e4180589eec4cc0f0178c49c4d80a723ee25f0","modified":1622509754104},{"_id":"themes/LiveForCode/layout/_partial/category.ejs","hash":"cbd7f86f2d5f09dbe865230a2627e0d63a2643a9","modified":1622509754085},{"_id":"themes/LiveForCode/layout/_partial/article.ejs","hash":"249bd32eea2ae0809141ddf505a78a8ee81950cb","modified":1622509754084},{"_id":"themes/LiveForCode/layout/_partial/comment.ejs","hash":"baeb95bd97fbf274a98aadc810bdba5c80a5200a","modified":1622509754085},{"_id":"themes/LiveForCode/layout/_partial/config.ejs","hash":"ba456e0b513c0945ea5c527b7e3ecc544dcd0ace","modified":1622509754085},{"_id":"themes/LiveForCode/layout/_partial/cover.ejs","hash":"bf9af7d7c1d3a087d2470d481c3e2d2d63e0e27a","modified":1622509754086},{"_id":"themes/LiveForCode/layout/_partial/footer.ejs","hash":"4050e6f32f1f064af68bfc0f7ce898b04b5a7123","modified":1622509754087},{"_id":"themes/LiveForCode/layout/_partial/donate.ejs","hash":"16ccb8d2bcedae087d42c1079b393088c71240b4","modified":1622509754087},{"_id":"themes/LiveForCode/layout/_partial/friend.ejs","hash":"923ee7406dc9afac3b0a0ff3e7c9a152f080a775","modified":1622509754088},{"_id":"themes/LiveForCode/layout/_partial/sidebar.ejs","hash":"c30063642a1b452e104da5c7e99987c4b56d4fa3","modified":1622509754097},{"_id":"themes/LiveForCode/layout/_partial/search.ejs","hash":"2a55e9a71d5df2507f9e67626193220e02733d07","modified":1622509754096},{"_id":"themes/LiveForCode/layout/_partial/tag.ejs","hash":"4f953aa902943b004bcdf757fa3473805258d75d","modified":1622509754097},{"_id":"themes/LiveForCode/layout/_partial/toc.ejs","hash":"c855548a23f012848376a1f25b57bc00eda3f454","modified":1622509754097},{"_id":"themes/LiveForCode/layout/_partial/tools.ejs","hash":"821f4afc8022ae9a46650cfe6ca722b8c63592b9","modified":1622509754098},{"_id":"themes/LiveForCode/source/image/cyc2018.png","hash":"194322df7212018fcbc2be4b2a58d708b2ca5e19","modified":1622509754107},{"_id":"themes/LiveForCode/source/image/bndong.gif","hash":"1271503cfdc22caa8b0feead849bb144415fdd4f","modified":1622509754106},{"_id":"themes/LiveForCode/source/image/iissnan.jpg","hash":"e8e13f89c9e5070f56a57e103616bb7b42209a45","modified":1622509754108},{"_id":"themes/LiveForCode/source/image/hexo.png","hash":"2ef879a76d8233295767e48c2bdc1a68c6d701ea","modified":1622509754107},{"_id":"themes/LiveForCode/source/image/volantis.png","hash":"322953e1ffae6c36a75be3bffc368227b8b4aef9","modified":1622509754112},{"_id":"themes/LiveForCode/layout/_partial/archive/articles.ejs","hash":"21cab51a2a85968b5f541c8d54d2fea9b9c0915b","modified":1622509754083},{"_id":"themes/LiveForCode/layout/_partial/archive/container.ejs","hash":"ce46e2a1e13ec43ffa88ff9a39180cac988236c5","modified":1622509754084},{"_id":"themes/LiveForCode/layout/_partial/index/articles.ejs","hash":"4a68b6aeba128aa737d6b0d921ca78a992c7f99c","modified":1622509754089},{"_id":"themes/LiveForCode/layout/_partial/index/container.ejs","hash":"20f464b03c63747a325653b9db35c1668d252c94","modified":1622509754089},{"_id":"themes/LiveForCode/layout/_partial/index/header.ejs","hash":"2a0eb50b418f7d4db5fd9f699e4ec8e3ed9a95c5","modified":1622509754089},{"_id":"themes/LiveForCode/layout/_partial/page/header.ejs","hash":"038f3e0fd3864bcc4041b6906c32d57079fe7403","modified":1622509754094},{"_id":"themes/LiveForCode/layout/_partial/post/container.ejs","hash":"8233728d2f5e39c4a4298c6ff7cac928ff00ad42","modified":1622509754095},{"_id":"themes/LiveForCode/layout/_partial/post/header.ejs","hash":"0413a009011805d902c5ecca1a566c7ec7376226","modified":1622509754096},{"_id":"themes/LiveForCode/source/music/cover/Miracle.jpg","hash":"6e4555a52b24c7fb79feff9b2223e3e02eaf31b3","modified":1622509754115},{"_id":"themes/LiveForCode/source/music/cover/Roll The Dice.jpg","hash":"00f6bb332e43dc691dcbb4b6eea561788e70f8df","modified":1622509754116},{"_id":"themes/LiveForCode/source/music/cover/See You Again.jpg","hash":"8e3ade43d389540c71b0972ae8e35f4cfc947c3a","modified":1622509754117},{"_id":"themes/LiveForCode/source/music/cover/Traveling Light.jpg","hash":"82e6271848adb8acf3c31c02ca3c575f241f4621","modified":1622509754118},{"_id":"themes/LiveForCode/source/music/cover/aLIEz.jpg","hash":"87056b77c2d6d5cdf89ed29446dac798407e9c24","modified":1622509754119},{"_id":"themes/LiveForCode/source/music/cover/好想大声说爱你.jpg","hash":"d1aaa08292f944eea45b920148c54f38561c2740","modified":1622509754120},{"_id":"themes/LiveForCode/source/music/cover/生命树.jpg","hash":"92c074351a133b28689e3e5be4f1346ec391b643","modified":1622529486584},{"_id":"themes/LiveForCode/source/music/cover/痴心绝对.jpg","hash":"616d004d6ba5d7e8a265c4110921ddcaf5e22a64","modified":1622509754120},{"_id":"themes/LiveForCode/source/music/lrc/Endless Tears.lrc","hash":"124742c9fb1858f8c3e948679439c5f69d4145a7","modified":1622509754121},{"_id":"themes/LiveForCode/source/music/lrc/Miracle.lrc","hash":"2a440997ac1a3f3b5e8a9abc0d0890cf6bd84e42","modified":1622509754121},{"_id":"themes/LiveForCode/source/music/lrc/Roll The Dice.lrc","hash":"48cd51eb647c909976ff6803e52f456ff91fdf6c","modified":1622509754122},{"_id":"themes/LiveForCode/source/music/lrc/See You Again.lrc","hash":"8dd836e503af8529cf13f063e9be2776c90878f3","modified":1622509754123},{"_id":"themes/LiveForCode/source/music/lrc/Traveling Light.lrc","hash":"78186f20d3622aed120c50b167041180b738297b","modified":1622509754123},{"_id":"themes/LiveForCode/source/music/lrc/aLIEz.lrc","hash":"2bf9c5737cb0510b3f18c6680199aa8910dddc76","modified":1622509754123},{"_id":"themes/LiveForCode/source/music/lrc/回过头.lrc","hash":"93033ae1e7437be7f6d40eaca1a187f1fa570f32","modified":1622532109385},{"_id":"themes/LiveForCode/source/music/lrc/好想大声说爱你.lrc","hash":"18caf9c42bf18bafc61f8dc839d84e94f3200430","modified":1622509754124},{"_id":"themes/LiveForCode/source/music/lrc/生命树.lrc","hash":"c075e41018dca2a7e8bc8c2b25ab6f3f627460ff","modified":1622529298416},{"_id":"themes/LiveForCode/source/music/lrc/痴心绝对.lrc","hash":"13ff143ed442d766eb5727075d59501758a7d8a2","modified":1622509754125},{"_id":"themes/LiveForCode/layout/_partial/page/about/container.ejs","hash":"f12cbac5090433cfea5c58025496bb71db40240c","modified":1622509754091},{"_id":"themes/LiveForCode/layout/_partial/page/category/container.ejs","hash":"bd317285efbf3a0d50615ac1a00d192b75e06d3d","modified":1622509754091},{"_id":"themes/LiveForCode/layout/_partial/page/donate/container.ejs","hash":"5589c382bdf736af234adf954070b42ff65e4af3","modified":1622509754093},{"_id":"themes/LiveForCode/layout/_partial/page/comment/container.ejs","hash":"44a97f352011ac3af00a394e624c9bedfe2224ac","modified":1622509754092},{"_id":"themes/LiveForCode/layout/_partial/page/friend/container.ejs","hash":"c4fd6fb7dd4d6ad53da71637ebfde5af24a272cd","modified":1622509754093},{"_id":"themes/LiveForCode/layout/_partial/page/tag/container.ejs","hash":"4dfbd02409700db40e3415e2afafaec433b4a940","modified":1622509754095},{"_id":"themes/LiveForCode/source/music/cover/Endless Tears.jpg","hash":"dedaf8d7a87c0d4f81fc1b118d405cfe4a8af7f4","modified":1622509754115},{"_id":"themes/LiveForCode/source/image/screenshots.png","hash":"22c7d1a219f3a0e94bb9668b25d7ec903f906c08","modified":1622509754112},{"_id":"themes/LiveForCode/source/music/song/大风吹.mp3","hash":"748cf03d2d0a042e11f20f07b0b9f1a94dbfa60f","modified":1622445016755},{"_id":"themes/LiveForCode/source/music/song/热爱105°C的你.mp3","hash":"4c4b7de2b567525e89878d404e369da88b6280bf","modified":1622444503335},{"_id":"themes/LiveForCode/source/music/song/回过头.mp3","hash":"719e5fb3c6e7ca0155699b903a6c4f6302c1247d","modified":1622531916771},{"_id":"themes/LiveForCode/source/music/song/Baby.mp3","hash":"6452a2782c3117498d340a5c02a8e928aecd27b1","modified":1622444690657},{"_id":"themes/LiveForCode/source/music/song/See You Again.mp3","hash":"539dab970be5e3203df376f8a794bf85c336afd3","modified":1622509754412},{"_id":"themes/LiveForCode/source/music/song/好想大声说爱你.mp3","hash":"cb95da92ffed60e085290bfb66344d391b011cf0","modified":1622509754670},{"_id":"themes/LiveForCode/source/music/song/痴心绝对.mp3","hash":"90e1066e715bc961a37e97e45b3f4d7de7a98bb4","modified":1622509754759},{"_id":"themes/LiveForCode/source/music/song/生命树.mp3","hash":"82202c3f11b8c375a8d86ec75bf568857c808af4","modified":1622525224591},{"_id":"source/_posts/Android Studio 配置问题 _The_specified_Gradle_distribution.md","hash":"da2eec02893f21427af91a41fd8f3b4208a81db4","modified":1628769984327},{"_id":"public/search.xml","hash":"1324dc682f28bd4c0d26623f22f7c8b9bb20ab43","modified":1628770614515},{"_id":"public/about/index.html","hash":"c33fcd92f150717b7657d0908a99139c6d991010","modified":1628770614515},{"_id":"public/comment/index.html","hash":"2ffd574099ef255c22aab34a2fc2c61dfd618585","modified":1628770614515},{"_id":"public/category/index.html","hash":"448432b5104acb5aee47b8fbaaa3c4f352e129b5","modified":1628770614515},{"_id":"public/donate/index.html","hash":"5434fccc645da2a7178c351569e228292c6727a4","modified":1628770614515},{"_id":"public/tag/index.html","hash":"2b494e677324e694b849cc33d922564c1c3ec2e1","modified":1628770614515},{"_id":"public/friend/index.html","hash":"b9b77a4c115b72cc1e49a20f72c07f1fddbf9c64","modified":1628770614515},{"_id":"public/2021/08/12/Android Studio 配置问题 _The_specified_Gradle_distribution/index.html","hash":"087947c86fbf1171cd06a5bd8abfb057530a8876","modified":1628770614515},{"_id":"public/2021/08/11/hello-world/index.html","hash":"861bd319f16d458d035a707cbe6334e740a616bd","modified":1628770614515},{"_id":"public/2021/08/11/Git配置同时存在Gitee、Github多个账户/index.html","hash":"bc5c322657e76baa61d0d5dd2fbee008b2dfa7a4","modified":1628770614515},{"_id":"public/2021/08/02/Java高级开发之JNI/index.html","hash":"f1f3a684750be398521803e5452b2ed912655023","modified":1628770614515},{"_id":"public/2021/07/23/清除BIOS界面密码/index.html","hash":"9a53057d9a1f0b1c69a7a312776439209c839537","modified":1628770614515},{"_id":"public/2021/06/27/ADB无线调试真机/index.html","hash":"947b48d7734440d74f84a87bd81b979ee5420099","modified":1628770614515},{"_id":"public/2021/06/08/Git 常用命令/index.html","hash":"82f4a035556d63818c8ffa322c204b9b690055db","modified":1628770614515},{"_id":"public/2021/06/02/【Android 控件的基本属性】/index.html","hash":"365150682ed9edc1b35fa09ba31729574b8a4972","modified":1628770614515},{"_id":"public/2021/06/01/从Gitee仓库拉取原有的 blog/index.html","hash":"f16b5d7a8046a4e6554fef681445245510ce50b5","modified":1628770614515},{"_id":"public/2021/05/29/Windows常用技巧/index.html","hash":"2d7873f1f363012c8df022b5b4132273a423fbb6","modified":1628770614515},{"_id":"public/2021/05/29/CMD 常用命令/index.html","hash":"a163f23b09cb5a77a75e934f1b021acea1a1bdae","modified":1628770614515},{"_id":"public/2021/05/29/Python 解压缩文件【只能压缩文件夹】/index.html","hash":"4117235ba9a5b4aea73bc6ebfc62a451f2477c3e","modified":1628770614515},{"_id":"public/2021/05/29/Python操作Excel/index.html","hash":"3aa2d4157d1d0ab7985d1d5aae49a5ef506614e2","modified":1628770614515},{"_id":"public/2021/02/16/Linux使用MySQL5-7-过程出现的问题/index.html","hash":"2a263fca21994172ce2ff55397ab13857ce1ce48","modified":1628770614515},{"_id":"public/archives/index.html","hash":"e172764f48a5c77a855831099c2910b3c8301107","modified":1628770614515},{"_id":"public/archives/page/2/index.html","hash":"ce1aa0bddf9b41cb15dfb261cee01426914de6a3","modified":1628770614515},{"_id":"public/archives/2021/index.html","hash":"31641b1d0ad053706bdb2cb731df8e8f9ba43187","modified":1628770614515},{"_id":"public/archives/2021/page/2/index.html","hash":"d74bd5ce38dc0f17f692ee9c0ae3c6d89b93a4eb","modified":1628770614515},{"_id":"public/archives/2021/02/index.html","hash":"08548967531ebf3de094b0b2ae58db0949cbd16d","modified":1628770614515},{"_id":"public/archives/2021/05/index.html","hash":"af04323c4edf54a1c4680cb6d123ba8294c2137c","modified":1628770614515},{"_id":"public/archives/2021/06/index.html","hash":"f17646cf8efe9d44fe069f7679c907bd04b75a2c","modified":1628770614515},{"_id":"public/archives/2021/07/index.html","hash":"7c514d5aab031a305edd5bcae649e8311efd2fbe","modified":1628770614515},{"_id":"public/archives/2021/08/index.html","hash":"d2e2cada230f9847fbac3dc3df744091a95f4462","modified":1628770614515},{"_id":"public/categories/CMD-常用命令/index.html","hash":"0e74d1e88b839fb1ca6b5fcf98c26b9f3fa29676","modified":1628770614515},{"_id":"public/categories/ADB-无线调试安卓真机/index.html","hash":"e9524410887d2514297f1f511e4916892224da26","modified":1628770614515},{"_id":"public/categories/Git-命令/index.html","hash":"1b74bade52bf3235d1b16c21f121fbff40eed37d","modified":1628770614515},{"_id":"public/categories/Git/index.html","hash":"ad542db8850b4323c8b2ba854a5cbfc3faff5bfa","modified":1628770614515},{"_id":"public/categories/Java/index.html","hash":"38c8f9f5332c6f524c979ccb099f2fa8fb490eb2","modified":1628770614515},{"_id":"public/categories/数据库/index.html","hash":"b5e2e572cb20a44f064fd474c45e9ad9aa5e42b4","modified":1628770614515},{"_id":"public/categories/Python/index.html","hash":"679d728bba00643d124916c3d9e315219b6d396d","modified":1628770614515},{"_id":"public/categories/Windows常用技巧/index.html","hash":"4fa6cb75fc08453b9035218893b4e459a41cfca4","modified":1628770614515},{"_id":"public/categories/Android/index.html","hash":"783bcba5ff680deb296b4703fc4df355c94e4beb","modified":1628770614515},{"_id":"public/categories/AS/index.html","hash":"0b9cb9abad8b08a2d3efce6253800b8b9eecd971","modified":1628770614515},{"_id":"public/index.html","hash":"4afd2f73e52068bf0baeadb6d54271b4c546d4f4","modified":1628770614515},{"_id":"public/page/2/index.html","hash":"d05e61c1c32ca5e68ce0f7031d07abc7da0481a3","modified":1628770614515},{"_id":"public/tags/CMD/index.html","hash":"6e4631fc46f9e205869996caa04dc4dd1369bdbc","modified":1628770614515},{"_id":"public/tags/android/index.html","hash":"d8849ce2a09b9b96d876ff7aae788926b14fface","modified":1628770614515},{"_id":"public/tags/Git/index.html","hash":"73c9a9d930c48ca3b88ad00803a4cf802cf4c474","modified":1628770614515},{"_id":"public/tags/java-JNI/index.html","hash":"879cd30227928f0cf9249b3dcb2b48feec4e1bf4","modified":1628770614515},{"_id":"public/tags/MySQL/index.html","hash":"7265bb1757a89e629091d434245e81c5173cacfa","modified":1628770614515},{"_id":"public/tags/Python/index.html","hash":"691a6a4944109ca3237db0e03aa6f6dfce912756","modified":1628770614515},{"_id":"public/tags/Windows/index.html","hash":"9b752ddde089d62b4600f45a4b0a204d63e352bc","modified":1628770614515},{"_id":"public/tags/Git-hexo/index.html","hash":"812f257a8fc465155151d2f645be976ab236d398","modified":1628770614515},{"_id":"public/tags/Android-Studio/index.html","hash":"e6e63a3b4fd6421def745adb193b1a3f50d67642","modified":1628770614515},{"_id":"public/CNAME","hash":"c2e4180589eec4cc0f0178c49c4d80a723ee25f0","modified":1628770614515},{"_id":"public/image/cyc2018.png","hash":"194322df7212018fcbc2be4b2a58d708b2ca5e19","modified":1628770614515},{"_id":"public/image/bndong.gif","hash":"1271503cfdc22caa8b0feead849bb144415fdd4f","modified":1628770614515},{"_id":"public/image/iissnan.jpg","hash":"e8e13f89c9e5070f56a57e103616bb7b42209a45","modified":1628770614515},{"_id":"public/image/hexo.png","hash":"2ef879a76d8233295767e48c2bdc1a68c6d701ea","modified":1628770614515},{"_id":"public/image/volantis.png","hash":"322953e1ffae6c36a75be3bffc368227b8b4aef9","modified":1628770614515},{"_id":"public/music/cover/Miracle.jpg","hash":"6e4555a52b24c7fb79feff9b2223e3e02eaf31b3","modified":1628770614515},{"_id":"public/music/cover/Roll The Dice.jpg","hash":"00f6bb332e43dc691dcbb4b6eea561788e70f8df","modified":1628770614515},{"_id":"public/music/cover/See You Again.jpg","hash":"8e3ade43d389540c71b0972ae8e35f4cfc947c3a","modified":1628770614515},{"_id":"public/music/cover/Traveling Light.jpg","hash":"82e6271848adb8acf3c31c02ca3c575f241f4621","modified":1628770614515},{"_id":"public/music/cover/aLIEz.jpg","hash":"87056b77c2d6d5cdf89ed29446dac798407e9c24","modified":1628770614515},{"_id":"public/music/cover/好想大声说爱你.jpg","hash":"d1aaa08292f944eea45b920148c54f38561c2740","modified":1628770614515},{"_id":"public/music/cover/生命树.jpg","hash":"92c074351a133b28689e3e5be4f1346ec391b643","modified":1628770614515},{"_id":"public/music/cover/痴心绝对.jpg","hash":"616d004d6ba5d7e8a265c4110921ddcaf5e22a64","modified":1628770614515},{"_id":"public/music/lrc/Endless Tears.lrc","hash":"124742c9fb1858f8c3e948679439c5f69d4145a7","modified":1628770614515},{"_id":"public/music/lrc/Miracle.lrc","hash":"2a440997ac1a3f3b5e8a9abc0d0890cf6bd84e42","modified":1628770614515},{"_id":"public/music/lrc/Roll The Dice.lrc","hash":"48cd51eb647c909976ff6803e52f456ff91fdf6c","modified":1628770614515},{"_id":"public/music/lrc/See You Again.lrc","hash":"8dd836e503af8529cf13f063e9be2776c90878f3","modified":1628770614515},{"_id":"public/music/lrc/Traveling Light.lrc","hash":"78186f20d3622aed120c50b167041180b738297b","modified":1628770614515},{"_id":"public/music/lrc/aLIEz.lrc","hash":"2bf9c5737cb0510b3f18c6680199aa8910dddc76","modified":1628770614515},{"_id":"public/music/lrc/回过头.lrc","hash":"93033ae1e7437be7f6d40eaca1a187f1fa570f32","modified":1628770614515},{"_id":"public/music/lrc/好想大声说爱你.lrc","hash":"18caf9c42bf18bafc61f8dc839d84e94f3200430","modified":1628770614515},{"_id":"public/music/lrc/生命树.lrc","hash":"c075e41018dca2a7e8bc8c2b25ab6f3f627460ff","modified":1628770614515},{"_id":"public/music/lrc/痴心绝对.lrc","hash":"13ff143ed442d766eb5727075d59501758a7d8a2","modified":1628770614515},{"_id":"public/assets/algolia/algoliasearchLite.min.js","hash":"284416885e4e80e27fa4eae6fc305f4de15b914c","modified":1628770614515},{"_id":"public/assets/algolia/algoliasearchLite.js","hash":"e56ad6b82caf69066de545201014291fc961635e","modified":1628770614515},{"_id":"public/assets/algolia/algoliasearch.min.js","hash":"a3b131a9a47ccc16f4dd8988fabb6d306548db2f","modified":1628770614515},{"_id":"public/music/cover/Endless Tears.jpg","hash":"dedaf8d7a87c0d4f81fc1b118d405cfe4a8af7f4","modified":1628770614515},{"_id":"public/404.html","hash":"cb2262c9fc0025b8dcc3570758798e8b3287b7fe","modified":1628770614515},{"_id":"public/assets/algolia/algoliasearch.js","hash":"6948fcdf071e4983e784e8c458cf201536f77792","modified":1628770614515},{"_id":"public/image/screenshots.png","hash":"22c7d1a219f3a0e94bb9668b25d7ec903f906c08","modified":1628770614515},{"_id":"public/music/song/大风吹.mp3","hash":"748cf03d2d0a042e11f20f07b0b9f1a94dbfa60f","modified":1628770614515},{"_id":"public/music/song/热爱105°C的你.mp3","hash":"4c4b7de2b567525e89878d404e369da88b6280bf","modified":1628770614515},{"_id":"public/music/song/回过头.mp3","hash":"719e5fb3c6e7ca0155699b903a6c4f6302c1247d","modified":1628770614515},{"_id":"public/music/song/Baby.mp3","hash":"6452a2782c3117498d340a5c02a8e928aecd27b1","modified":1628770614515},{"_id":"public/music/song/See You Again.mp3","hash":"539dab970be5e3203df376f8a794bf85c336afd3","modified":1628770614515},{"_id":"public/music/song/好想大声说爱你.mp3","hash":"cb95da92ffed60e085290bfb66344d391b011cf0","modified":1628770614515},{"_id":"public/music/song/生命树.mp3","hash":"82202c3f11b8c375a8d86ec75bf568857c808af4","modified":1628770614515},{"_id":"public/music/song/痴心绝对.mp3","hash":"90e1066e715bc961a37e97e45b3f4d7de7a98bb4","modified":1628770614515}],"Category":[{"name":"CMD 常用命令","_id":"cks8acfkc0004ycvm1v3hf3kl"},{"name":"ADB 无线调试安卓真机","_id":"cks8acfkj000cycvm4fei9h28"},{"name":"Git 命令","_id":"cks8acfkp000jycvm36qtgsm2"},{"name":"Git","_id":"cks8acfkt000pycvm7op01mbc"},{"name":"Java","_id":"cks8acfky000wycvmdniq6hrs"},{"name":"数据库","_id":"cks8acfl10011ycvm446mabyz"},{"name":"Python","_id":"cks8acfl50016ycvma7zpa7i3"},{"name":"Windows常用技巧","_id":"cks8acfl8001dycvmg8ghgnkm"},{"name":"Android","_id":"cks8acflk001qycvm6z5533q6"},{"name":"AS","_id":"cks8vyy0d0001o0vm0ezra7yw"}],"Data":[],"Page":[{"title":"关于","date":"2019-12-31T16:00:00.000Z","type":"about","_content":"## 关于我\n我是一个在命运长河里挣扎的小鱼，90后，目前是小白一枚。\n虽然心中不甘，但是目前确实是 __Worst One__ 。\n目标是成为全栈工程师、系统架构师。虽然前路迷茫，但是我会一步一步往前走。\n## 关于主题\n[Hexo - LiveForCode](https://github.com/first19326/Hexo-LiveForCode/) 主题是根据 [BNDong](https://dbnuo.com/) 的博客样式复制过来的，其中也借鉴了 [Hexo - NexT](http://theme-next.iissnan.com/) 主题的样式。可能这个主题还有很多不尽人意的地方，在后续的阶段我会不断地完善，如果有关于主题的相关问题，欢迎联系我。\n","source":"about/index.md","raw":"---\ntitle : 关于\ndate  : 2020-01-01 00:00:00\ntype  : about\n---\n## 关于我\n我是一个在命运长河里挣扎的小鱼，90后，目前是小白一枚。\n虽然心中不甘，但是目前确实是 __Worst One__ 。\n目标是成为全栈工程师、系统架构师。虽然前路迷茫，但是我会一步一步往前走。\n## 关于主题\n[Hexo - LiveForCode](https://github.com/first19326/Hexo-LiveForCode/) 主题是根据 [BNDong](https://dbnuo.com/) 的博客样式复制过来的，其中也借鉴了 [Hexo - NexT](http://theme-next.iissnan.com/) 主题的样式。可能这个主题还有很多不尽人意的地方，在后续的阶段我会不断地完善，如果有关于主题的相关问题，欢迎联系我。\n","updated":"2021-06-01T01:09:14.075Z","path":"about/index.html","comments":1,"layout":"page","_id":"cks8acfk10000ycvm3n027nnj","content":"<h2 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h2><p>我是一个在命运长河里挣扎的小鱼，90后，目前是小白一枚。<br>虽然心中不甘，但是目前确实是 <strong>Worst One</strong> 。<br>目标是成为全栈工程师、系统架构师。虽然前路迷茫，但是我会一步一步往前走。</p>\n<h2 id=\"关于主题\"><a href=\"#关于主题\" class=\"headerlink\" title=\"关于主题\"></a>关于主题</h2><p><a href=\"https://github.com/first19326/Hexo-LiveForCode/\">Hexo - LiveForCode</a> 主题是根据 <a href=\"https://dbnuo.com/\">BNDong</a> 的博客样式复制过来的，其中也借鉴了 <a href=\"http://theme-next.iissnan.com/\">Hexo - NexT</a> 主题的样式。可能这个主题还有很多不尽人意的地方，在后续的阶段我会不断地完善，如果有关于主题的相关问题，欢迎联系我。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"关于我\"><a href=\"#关于我\" class=\"headerlink\" title=\"关于我\"></a>关于我</h2><p>我是一个在命运长河里挣扎的小鱼，90后，目前是小白一枚。<br>虽然心中不甘，但是目前确实是 <strong>Worst One</strong> 。<br>目标是成为全栈工程师、系统架构师。虽然前路迷茫，但是我会一步一步往前走。</p>\n<h2 id=\"关于主题\"><a href=\"#关于主题\" class=\"headerlink\" title=\"关于主题\"></a>关于主题</h2><p><a href=\"https://github.com/first19326/Hexo-LiveForCode/\">Hexo - LiveForCode</a> 主题是根据 <a href=\"https://dbnuo.com/\">BNDong</a> 的博客样式复制过来的，其中也借鉴了 <a href=\"http://theme-next.iissnan.com/\">Hexo - NexT</a> 主题的样式。可能这个主题还有很多不尽人意的地方，在后续的阶段我会不断地完善，如果有关于主题的相关问题，欢迎联系我。</p>\n"},{"title":"留言板","date":"2019-12-31T16:00:00.000Z","type":"comment","_content":"","source":"comment/index.md","raw":"---\ntitle : 留言板\ndate  : 2020-01-01 00:00:00\ntype  : comment \n---\n","updated":"2021-06-01T01:09:14.077Z","path":"comment/index.html","comments":1,"layout":"page","_id":"cks8acfk90002ycvmednah624","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"分类","date":"2019-12-31T16:00:00.000Z","type":"category","_content":"","source":"category/index.md","raw":"---\ntitle : 分类\ndate  : 2020-01-01 00:00:00\ntype  : category\n---\n","updated":"2021-06-01T01:09:14.076Z","path":"category/index.html","comments":1,"layout":"page","_id":"cks8acfke0006ycvm1f6q1k7b","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"赞赏","date":"2019-12-31T16:00:00.000Z","type":"donate","_content":"> 如果喜欢我的博客，或者喜欢我的博客主题，可以考虑赞赏一下哦，非常感激！<br> 网站所需的服务器和 CDN 都是不小的开支，日常维护也需要大量精力。 <br> 你们的支持是我前进的最大动力！\n","source":"donate/index.md","raw":"---\ntitle       : 赞赏\ndate        : 2020-01-01 00:00:00\ntype        : donate\n---\n> 如果喜欢我的博客，或者喜欢我的博客主题，可以考虑赞赏一下哦，非常感激！<br> 网站所需的服务器和 CDN 都是不小的开支，日常维护也需要大量精力。 <br> 你们的支持是我前进的最大动力！\n","updated":"2021-06-01T01:09:14.078Z","path":"donate/index.html","comments":1,"layout":"page","_id":"cks8acfkg0008ycvm9lxidwzs","content":"<blockquote>\n<p>如果喜欢我的博客，或者喜欢我的博客主题，可以考虑赞赏一下哦，非常感激！<br> 网站所需的服务器和 CDN 都是不小的开支，日常维护也需要大量精力。 <br> 你们的支持是我前进的最大动力！</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>如果喜欢我的博客，或者喜欢我的博客主题，可以考虑赞赏一下哦，非常感激！<br> 网站所需的服务器和 CDN 都是不小的开支，日常维护也需要大量精力。 <br> 你们的支持是我前进的最大动力！</p>\n</blockquote>\n"},{"title":"标签","date":"2019-12-31T16:00:00.000Z","type":"tag","_content":"","source":"tag/index.md","raw":"---\ntitle : 标签\ndate  : 2020-01-01 00:00:00\ntype  : tag\n---\n","updated":"2021-06-01T01:09:14.079Z","path":"tag/index.html","comments":1,"layout":"page","_id":"cks8acfki000aycvm412h2ouq","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"友情链接","date":"2019-12-31T16:00:00.000Z","type":"friend","comments":0,"style":"rotate","friends":[{"head":"特别鸣谢","description":null,"friend":[{"name":"Hexo","avatar":"/image/hexo.png","url":"https://hexo.io/zh-cn/","about":"简洁、高效的博客框架"},{"name":"BNDong","avatar":"/image/bndong.gif","url":"https://blog.dbnuo.com/","about":"SimpleMemory 作者"},{"name":"IIssNan","avatar":"/image/iissnan.jpg","url":"https://notes.iissnan.com/","about":"Hexo-NexT 作者"},{"name":"Volantis","avatar":"/image/volantis.png","url":"https://volantis.js.org/","about":"Hexo-Volantis 主题"}]},{"head":"友情链接","description":null,"friend":[{"name":"WorstOne","avatar":"https://cdn.jsdelivr.net/gh/first19326/hexo-liveforcode@master/static/image/sidebar/avatar.jpg","url":"https://notes.worstone.cn","about":"Live For Code 作者"}]}],"_content":"> 欢迎各位朋友前来交换友链，本站友链接受以下类型的网站：\n> - 个人博客\n> - 公益组织等非盈利性网站\n> - 不接受广告、商业性网站，特殊情况除外\n> \n> 如果你的网站 __一个月以上无法正常访问__ 将会被移除。\n","source":"friend/index.md","raw":"---\ntitle    : 友情链接\ndate     : 2020-01-01 00:00:00\ntype     : friend\ncomments : false\n# 样式 rotate translate  \n# 默认 rotate\nstyle    : rotate\nfriends  : \n  - \n    head        : 特别鸣谢\n    description : \n    friend      :\n      - \n        name    : Hexo\n        avatar  : /image/hexo.png\n        url     : https://hexo.io/zh-cn/\n        about   : 简洁、高效的博客框架\n      - \n        name    : BNDong\n        avatar  : /image/bndong.gif\n        url     : https://blog.dbnuo.com/\n        about   : SimpleMemory 作者\n      - \n        name    : IIssNan\n        avatar  : /image/iissnan.jpg\n        url     : https://notes.iissnan.com/\n        about   : Hexo-NexT 作者\n      - \n        name    : Volantis\n        avatar  : /image/volantis.png\n        url     : https://volantis.js.org/\n        about   : Hexo-Volantis 主题\n  - \n    head        : 友情链接\n    description : \n    friend      :\n      - \n        name    : WorstOne\n        avatar  : https://cdn.jsdelivr.net/gh/first19326/hexo-liveforcode@master/static/image/sidebar/avatar.jpg\n        url     : https://notes.worstone.cn\n        about   : Live For Code 作者\n---\n> 欢迎各位朋友前来交换友链，本站友链接受以下类型的网站：\n> - 个人博客\n> - 公益组织等非盈利性网站\n> - 不接受广告、商业性网站，特殊情况除外\n> \n> 如果你的网站 __一个月以上无法正常访问__ 将会被移除。\n","updated":"2021-06-01T01:09:14.079Z","path":"friend/index.html","layout":"page","_id":"cks8acfkl000fycvm3a4lb2cw","content":"<blockquote>\n<p>欢迎各位朋友前来交换友链，本站友链接受以下类型的网站：</p>\n<ul>\n<li>个人博客</li>\n<li>公益组织等非盈利性网站</li>\n<li>不接受广告、商业性网站，特殊情况除外</li>\n</ul>\n<p>如果你的网站 <strong>一个月以上无法正常访问</strong> 将会被移除。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>欢迎各位朋友前来交换友链，本站友链接受以下类型的网站：</p>\n<ul>\n<li>个人博客</li>\n<li>公益组织等非盈利性网站</li>\n<li>不接受广告、商业性网站，特殊情况除外</li>\n</ul>\n<p>如果你的网站 <strong>一个月以上无法正常访问</strong> 将会被移除。</p>\n</blockquote>\n"}],"Post":[{"title":"CMD 常用命令","date":"2021-05-29T11:07:10.000Z","from":"原创","url":null,"author":"p0ny","about":"一穷二白","avatar":null,"comments":1,"description":"CMD 命令","sticky":1,"_content":"## CMD 命令\n- 打开控制面板\n\n   `control`\n   \n- 打开 注册表编辑器\n\n  `regedit`\n  \n- 打开 远程桌面连接\n\n  `mstsc`\n  \n- 打开网络连接\n\n   `ncpa.cpl`\n   \n- 打开 Internet属性\n\n  `inetcpl.cpl`\n  \n- 打开 添加删除程序\n\n  `appwiz.cpl`\n  \n- 打开 系统属性\n\n  `sysdm.cpl`\n  \n- 打开 防火墙\n\n  `firewall.cpl`\n  \n- 打开 鼠标属性\n\n  `main.cpl`\n  \n- 打开 计算机管理\n\n  `compmgmt.msc`\n  \n- 打开 设备管理器 对话框\n\n  `devmgmt.msc` 或者 `hdwwiz.cpl`\n  \n- 打开证书管理器\n  \n  `certmgr.msc`\n\n- 打开 windows服务\n\n  `services.msc`\n  \n- 打开本地安全策略\n  \n  `secpol.msc`\n  \n- 打开 本地用户和组 对话框\n\n  `lusrmgr.msc`\n  \n- 打开 本地组策略编辑器\n\n  `gpedit.msc`\n\n- 打开 高级安全 Windows Defender 防火墙【出站入站规则】\n\n  `wf.msc`\n\n- 打开 磁盘管理【分盘工具】\n\n  `diskmgmt.msc`\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  ","source":"_posts/CMD 常用命令.md","raw":"---\ntitle: CMD 常用命令\ndate: 2021-05-29 19:07:10\n# 文章出处名称 #\nfrom: 原创\n# 文章出处链接 #\nurl:\n# 文章作者名称 #\nauthor: p0ny\n# 文章作者签名 #\nabout: 一穷二白\n# 文章作者头像 #\navatar: \n# 是否开启评论 #\ncomments: true\n# 文章标签 #\ntags: CMD\n# 文章分类 #\ncategories: CMD 常用命令\n# 文章摘要 #\ndescription: CMD 命令\n# 文章置顶 #\nsticky: 1\n---\n## CMD 命令\n- 打开控制面板\n\n   `control`\n   \n- 打开 注册表编辑器\n\n  `regedit`\n  \n- 打开 远程桌面连接\n\n  `mstsc`\n  \n- 打开网络连接\n\n   `ncpa.cpl`\n   \n- 打开 Internet属性\n\n  `inetcpl.cpl`\n  \n- 打开 添加删除程序\n\n  `appwiz.cpl`\n  \n- 打开 系统属性\n\n  `sysdm.cpl`\n  \n- 打开 防火墙\n\n  `firewall.cpl`\n  \n- 打开 鼠标属性\n\n  `main.cpl`\n  \n- 打开 计算机管理\n\n  `compmgmt.msc`\n  \n- 打开 设备管理器 对话框\n\n  `devmgmt.msc` 或者 `hdwwiz.cpl`\n  \n- 打开证书管理器\n  \n  `certmgr.msc`\n\n- 打开 windows服务\n\n  `services.msc`\n  \n- 打开本地安全策略\n  \n  `secpol.msc`\n  \n- 打开 本地用户和组 对话框\n\n  `lusrmgr.msc`\n  \n- 打开 本地组策略编辑器\n\n  `gpedit.msc`\n\n- 打开 高级安全 Windows Defender 防火墙【出站入站规则】\n\n  `wf.msc`\n\n- 打开 磁盘管理【分盘工具】\n\n  `diskmgmt.msc`\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  ","slug":"CMD 常用命令","published":1,"updated":"2021-06-08T10:41:15.252Z","layout":"post","photos":[],"link":"","_id":"cks8acfk50001ycvm5lp44pan","content":"<h2 id=\"CMD-命令\"><a href=\"#CMD-命令\" class=\"headerlink\" title=\"CMD 命令\"></a>CMD 命令</h2><ul>\n<li><p>打开控制面板</p>\n<p> <code>control</code></p>\n</li>\n<li><p>打开 注册表编辑器</p>\n<p><code>regedit</code></p>\n</li>\n<li><p>打开 远程桌面连接</p>\n<p><code>mstsc</code></p>\n</li>\n<li><p>打开网络连接</p>\n<p> <code>ncpa.cpl</code></p>\n</li>\n<li><p>打开 Internet属性</p>\n<p><code>inetcpl.cpl</code></p>\n</li>\n<li><p>打开 添加删除程序</p>\n<p><code>appwiz.cpl</code></p>\n</li>\n<li><p>打开 系统属性</p>\n<p><code>sysdm.cpl</code></p>\n</li>\n<li><p>打开 防火墙</p>\n<p><code>firewall.cpl</code></p>\n</li>\n<li><p>打开 鼠标属性</p>\n<p><code>main.cpl</code></p>\n</li>\n<li><p>打开 计算机管理</p>\n<p><code>compmgmt.msc</code></p>\n</li>\n<li><p>打开 设备管理器 对话框</p>\n<p><code>devmgmt.msc</code> 或者 <code>hdwwiz.cpl</code></p>\n</li>\n<li><p>打开证书管理器</p>\n<p><code>certmgr.msc</code></p>\n</li>\n<li><p>打开 windows服务</p>\n<p><code>services.msc</code></p>\n</li>\n<li><p>打开本地安全策略</p>\n<p><code>secpol.msc</code></p>\n</li>\n<li><p>打开 本地用户和组 对话框</p>\n<p><code>lusrmgr.msc</code></p>\n</li>\n<li><p>打开 本地组策略编辑器</p>\n<p><code>gpedit.msc</code></p>\n</li>\n<li><p>打开 高级安全 Windows Defender 防火墙【出站入站规则】</p>\n<p><code>wf.msc</code></p>\n</li>\n<li><p>打开 磁盘管理【分盘工具】</p>\n<p><code>diskmgmt.msc</code></p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"CMD-命令\"><a href=\"#CMD-命令\" class=\"headerlink\" title=\"CMD 命令\"></a>CMD 命令</h2><ul>\n<li><p>打开控制面板</p>\n<p> <code>control</code></p>\n</li>\n<li><p>打开 注册表编辑器</p>\n<p><code>regedit</code></p>\n</li>\n<li><p>打开 远程桌面连接</p>\n<p><code>mstsc</code></p>\n</li>\n<li><p>打开网络连接</p>\n<p> <code>ncpa.cpl</code></p>\n</li>\n<li><p>打开 Internet属性</p>\n<p><code>inetcpl.cpl</code></p>\n</li>\n<li><p>打开 添加删除程序</p>\n<p><code>appwiz.cpl</code></p>\n</li>\n<li><p>打开 系统属性</p>\n<p><code>sysdm.cpl</code></p>\n</li>\n<li><p>打开 防火墙</p>\n<p><code>firewall.cpl</code></p>\n</li>\n<li><p>打开 鼠标属性</p>\n<p><code>main.cpl</code></p>\n</li>\n<li><p>打开 计算机管理</p>\n<p><code>compmgmt.msc</code></p>\n</li>\n<li><p>打开 设备管理器 对话框</p>\n<p><code>devmgmt.msc</code> 或者 <code>hdwwiz.cpl</code></p>\n</li>\n<li><p>打开证书管理器</p>\n<p><code>certmgr.msc</code></p>\n</li>\n<li><p>打开 windows服务</p>\n<p><code>services.msc</code></p>\n</li>\n<li><p>打开本地安全策略</p>\n<p><code>secpol.msc</code></p>\n</li>\n<li><p>打开 本地用户和组 对话框</p>\n<p><code>lusrmgr.msc</code></p>\n</li>\n<li><p>打开 本地组策略编辑器</p>\n<p><code>gpedit.msc</code></p>\n</li>\n<li><p>打开 高级安全 Windows Defender 防火墙【出站入站规则】</p>\n<p><code>wf.msc</code></p>\n</li>\n<li><p>打开 磁盘管理【分盘工具】</p>\n<p><code>diskmgmt.msc</code></p>\n</li>\n</ul>\n"},{"title":"ADB无线调试真机","date":"2021-06-26T17:22:57.000Z","from":"原创","url":null,"author":"p0ny","about":"一穷二白","avatar":null,"comments":1,"description":"android adb","sticky":1,"_content":"# ADB 无线调试安卓真机\n\n### 准备条件\n   1. 一部需要被调试的手机【**小米max2 为例**】【**手机已经root**】\n   2. 下载终端模拟器APP `https://p0ny.lanzoui.com/iLcz7qpr7rc` \n   \n### 步骤：\n0. 准备好 以上条件\n\n1. 打开 手机自带的 `手机管家` \n\n    ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624703388149-image.png)\n\n\n    \n2. 点击 `应用管理`\n  \n    ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624703432831-image.png)\n\n\n\n3. 点击 `权限`\n    \n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624703469380-image.png)\n\n    \n\n\n\n4. 然后 给 `终端模拟器` 开启 Root权限\n    ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624703501843-image.png)\n    【如果 进去之后**没有终端模拟器**的条目，那么就先运行 终端模拟器app，然后输入命令 `su`回车，然后再返回 `root权限管理`，就会有终端模拟器这个条目了】\n\n\n\n\n5. 然后运行 `终端模拟器APP`\n\n6. 在终端 **分别执行** 以下命令：【一行 代表 一条命令】\n    \n    ```\n    setprop service.adb.tcp.port 5555\n    stop adbd\n    start adbd\n    ```\n    \n    \n7. 然后在终端执行 `ifconfig` 查看手机的IP\n    \n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624708629208-image.png)\n\n\n\n\n8. 在电脑 cmd 中执行命令 ADB远程 `adb connect 手机IP:5555`\n\n\n   ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624702318441-image.png)\n\n\n   \n","source":"_posts/ADB无线调试真机.md","raw":"---\ntitle: ADB无线调试真机\ndate: 2021-06-27 01:22:57\n# 文章出处名称 #\nfrom: 原创\n# 文章出处链接 #\nurl:\n# 文章作者名称 #\nauthor: p0ny\n# 文章作者签名 #\nabout: 一穷二白\n# 文章作者头像 #\navatar: \n# 是否开启评论 #\ncomments: true\n# 文章标签 #\ntags: android\n# 文章分类 #\ncategories: ADB 无线调试安卓真机\n# 文章摘要 #\ndescription: android adb\n# 文章置顶 #\nsticky: 1\n---\n# ADB 无线调试安卓真机\n\n### 准备条件\n   1. 一部需要被调试的手机【**小米max2 为例**】【**手机已经root**】\n   2. 下载终端模拟器APP `https://p0ny.lanzoui.com/iLcz7qpr7rc` \n   \n### 步骤：\n0. 准备好 以上条件\n\n1. 打开 手机自带的 `手机管家` \n\n    ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624703388149-image.png)\n\n\n    \n2. 点击 `应用管理`\n  \n    ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624703432831-image.png)\n\n\n\n3. 点击 `权限`\n    \n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624703469380-image.png)\n\n    \n\n\n\n4. 然后 给 `终端模拟器` 开启 Root权限\n    ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624703501843-image.png)\n    【如果 进去之后**没有终端模拟器**的条目，那么就先运行 终端模拟器app，然后输入命令 `su`回车，然后再返回 `root权限管理`，就会有终端模拟器这个条目了】\n\n\n\n\n5. 然后运行 `终端模拟器APP`\n\n6. 在终端 **分别执行** 以下命令：【一行 代表 一条命令】\n    \n    ```\n    setprop service.adb.tcp.port 5555\n    stop adbd\n    start adbd\n    ```\n    \n    \n7. 然后在终端执行 `ifconfig` 查看手机的IP\n    \n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624708629208-image.png)\n\n\n\n\n8. 在电脑 cmd 中执行命令 ADB远程 `adb connect 手机IP:5555`\n\n\n   ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624702318441-image.png)\n\n\n   \n","slug":"ADB无线调试真机","published":1,"updated":"2021-08-08T01:31:54.899Z","layout":"post","photos":[],"link":"","_id":"cks8acfk90003ycvm28n59wdt","content":"<h1 id=\"ADB-无线调试安卓真机\"><a href=\"#ADB-无线调试安卓真机\" class=\"headerlink\" title=\"ADB 无线调试安卓真机\"></a>ADB 无线调试安卓真机</h1><h3 id=\"准备条件\"><a href=\"#准备条件\" class=\"headerlink\" title=\"准备条件\"></a>准备条件</h3><ol>\n<li>一部需要被调试的手机【<strong>小米max2 为例</strong>】【<strong>手机已经root</strong>】</li>\n<li>下载终端模拟器APP <code>https://p0ny.lanzoui.com/iLcz7qpr7rc</code> </li>\n</ol>\n<h3 id=\"步骤：\"><a href=\"#步骤：\" class=\"headerlink\" title=\"步骤：\"></a>步骤：</h3><ol start=\"0\">\n<li><p>准备好 以上条件</p>\n</li>\n<li><p>打开 手机自带的 <code>手机管家</code> </p>\n<p> <img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624703388149-image.png\"></p>\n</li>\n</ol>\n<ol start=\"2\">\n<li>点击 <code>应用管理</code> <img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624703432831-image.png\"></li>\n</ol>\n<ol start=\"3\">\n<li>点击 <code>权限</code></li>\n</ol>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624703469380-image.png\"></p>\n<ol start=\"4\">\n<li>然后 给 <code>终端模拟器</code> 开启 Root权限<br> <img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624703501843-image.png\"><br> 【如果 进去之后<strong>没有终端模拟器</strong>的条目，那么就先运行 终端模拟器app，然后输入命令 <code>su</code>回车，然后再返回 <code>root权限管理</code>，就会有终端模拟器这个条目了】</li>\n</ol>\n<ol start=\"5\">\n<li><p>然后运行 <code>终端模拟器APP</code></p>\n</li>\n<li><p>在终端 <strong>分别执行</strong> 以下命令：【一行 代表 一条命令】</p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setprop service.adb.tcp.port 5555</span><br><span class=\"line\">stop adbd</span><br><span class=\"line\">start adbd</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>然后在终端执行 <code>ifconfig</code> 查看手机的IP</p>\n</li>\n</ol>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624708629208-image.png\"></p>\n<ol start=\"8\">\n<li>在电脑 cmd 中执行命令 ADB远程 <code>adb connect 手机IP:5555</code></li>\n</ol>\n<p>   <img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624702318441-image.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"ADB-无线调试安卓真机\"><a href=\"#ADB-无线调试安卓真机\" class=\"headerlink\" title=\"ADB 无线调试安卓真机\"></a>ADB 无线调试安卓真机</h1><h3 id=\"准备条件\"><a href=\"#准备条件\" class=\"headerlink\" title=\"准备条件\"></a>准备条件</h3><ol>\n<li>一部需要被调试的手机【<strong>小米max2 为例</strong>】【<strong>手机已经root</strong>】</li>\n<li>下载终端模拟器APP <code>https://p0ny.lanzoui.com/iLcz7qpr7rc</code> </li>\n</ol>\n<h3 id=\"步骤：\"><a href=\"#步骤：\" class=\"headerlink\" title=\"步骤：\"></a>步骤：</h3><ol start=\"0\">\n<li><p>准备好 以上条件</p>\n</li>\n<li><p>打开 手机自带的 <code>手机管家</code> </p>\n<p> <img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624703388149-image.png\"></p>\n</li>\n</ol>\n<ol start=\"2\">\n<li>点击 <code>应用管理</code> <img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624703432831-image.png\"></li>\n</ol>\n<ol start=\"3\">\n<li>点击 <code>权限</code></li>\n</ol>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624703469380-image.png\"></p>\n<ol start=\"4\">\n<li>然后 给 <code>终端模拟器</code> 开启 Root权限<br> <img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624703501843-image.png\"><br> 【如果 进去之后<strong>没有终端模拟器</strong>的条目，那么就先运行 终端模拟器app，然后输入命令 <code>su</code>回车，然后再返回 <code>root权限管理</code>，就会有终端模拟器这个条目了】</li>\n</ol>\n<ol start=\"5\">\n<li><p>然后运行 <code>终端模拟器APP</code></p>\n</li>\n<li><p>在终端 <strong>分别执行</strong> 以下命令：【一行 代表 一条命令】</p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setprop service.adb.tcp.port 5555</span><br><span class=\"line\">stop adbd</span><br><span class=\"line\">start adbd</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>然后在终端执行 <code>ifconfig</code> 查看手机的IP</p>\n</li>\n</ol>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624708629208-image.png\"></p>\n<ol start=\"8\">\n<li>在电脑 cmd 中执行命令 ADB远程 <code>adb connect 手机IP:5555</code></li>\n</ol>\n<p>   <img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-26/1624702318441-image.png\"></p>\n"},{"title":"Git 常用命令","date":"2021-06-08T10:45:01.000Z","from":"原创","url":null,"author":"p0ny","about":"一穷二白","avatar":null,"comments":1,"description":"Git 命令","sticky":1,"_content":"### 1、git常用命令\n|命令名称|作用|\n|---|---|\n|git config --global user.name 用户名|设置用户签名|\n|git config --global user.email 邮箱|设置用户签名|\n|git init|初始化本地库|\n|git status|查看本地库状态|\n|git add 文件名|添加到暂存区|\n|git reset HEAD|将 暂存区 里 所有文件 恢复到 工作区|\n|git reset HEAD 1.txt|将 暂存区 里 指定文件 恢复到 工作区|\n|git commit -m \"日志信息\" 文件名|提交到本地库|\n|git reflog|查看历史记录|\n|git reset --hard 版本号|版本穿梭|\n|git remote add **仓库别名** **仓库地址**|添加别名为 origin的远程仓库地址|\n|git remote -v | 查看添加的远程仓库地址|\n|git push **仓库别名** master| push 到别名为 origin的远程仓库|\n\n### 1.1、配置 Git客户端\n`git config --global user.name p0ny`\n`git config --global user.email p0ny@88.com`\n\n为 Git客户端创建这么一个用户【以上的用户信息是虚拟的，只适用于本地的Git】\n\n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621832433778-image.png)\n\n验证是否成功？：\n在 `C:\\Users\\xxxx\\` 下有这么一个 `.gitconfig` 文件，使用 记事本打开，可以看到如下内容\n\n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621832600633-image.png)\n\n### 1.2、初始化本地库\n\n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621837286704-image.png)\n\n在当前项目的根目录下右键 ，然后点击 `Git Bash Here`\n\n然后执行 `git init` 命令\n\n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621837380100-image.png)\n\n\n可以看到，会在该目录下生成一个隐藏目录 `.git`\n\n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621837421469-image.png)\n\n\n### 1.3、分支的操作\n|命令名称|作用|\n|---|---|\n|git branch 分支名|创建分支|\n|git branch|查看分支|\n|git checkout 分支名|切换分支|\n|git mergge 分支名|把指定的分支合并到当前分支上|\n\n### 1.4、分支合并操作\n- 存在 master分支，然后创建一个分支的时候，该分支下自动存在 master分支下的所有文件。\n\n1. 正常合并\n\n   创建一个分支 `hot-fix` \n   \n   创建分支成功后，执行命令 `git checkout hot-fix` \n   \n   修改 `hot-fix` 下的文件内容，\n\n   然后执行命令 `git add 文件名` 添加到 暂存区\n   \n   最后执行 `git commit -m \"自定义的日志信息\" 文件名` 提交到本地库中\n\n   将 `hot-fix` 分支合并到 `master` 分支，\n   \n   切换至 `master` 分支\n   \n   然后执行 `git merge hot-fix` 。\n   \n   将 `hot-fix` 分支合并到当前分支【master】\n   \n   **综上操作，只是创建一个分支，在该分支下读写文件内容，然后提交到本地库之后，切换至master分支，然后执行命令合并命令**\n   **针对于此，只是修改了 新分支下的文件内容**\n   \n   \n2. 合并冲突【依次修改并且提交相同的文件名】、\n\n   已有两个分支 `hot-fix` , `master` \n   \n   依次在以上的分支修改相同的文件`hello.txt`并提交\n   \n   然后切换至 `master` 分支下，执行合并命令 `git merge hot-fix` \n   此时会 提示一下信息：\n   \n   ```\n   Auto-merging hello.txt\n   CONFLICT (content): Merge conflict in hello.txt\n   Automatic merge failed; fix conflicts and then commit the    result.\n   ```\n   \n   自动 合并失败，这里的解决方式是需要手动编辑保留自己想要的内容\n   \n   \n   ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621847389612-image.png)\n   <br>\n   <br>\n   \n   2.1 编辑【保留自己需要的内容】\n   \n   ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621847777522-image.png)\n\n    <br>\n   <br>\n   \n   2.2 编辑【保留自己需要的内容】\n   \n      执行添加到 暂存区的命令： `git add hello.txt` \n   \n      执行提交本地库命令 ： `git commit -m \"merge test\"`\n   \n   ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621847976777-image.png)\n\n   \n### 1.5、回滚\n1. 【通过版本号回滚】此前已经 往本地库中 提交过，就会有版本号，通过版本号来回滚到文件的某一状态\n\n   命令： `git reset --hard 完整的版本号`\n\n\n   ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621927434654-image.png)\n\n2. 【将文件从工作区的红色区域回滚到初始状态，仅对已经被添加到暂存区的文件有效】\n\n   命令： `git checkout -- 文件`\n   \n   ![初始内容](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621928976304-image.png)\n   \n   \n   ![修改文件内容](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621929186135-image.png)\n   \n   \n   最后执行 `git checkout -- hello.txt` ：将 hello.txt 的内容回滚到 初始内容的状态\n   \n   ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621929550814-image.png)\n   \n   \n   \n 3. 【将文件从工作区的红色区域添加到暂存区，然后将暂存区的文件回滚到工作区的红色区域】\n \n \n    新增 `new.txt` 文件\n\n    ![git 检测新增文件](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621929886477-image.png)\n\n    将文件添加到 暂存区\n    \n    ![将新增的文件添加到暂存区](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621930038596-image.png)\n    \n    \n    将暂存区的文件回滚到工作区中\n    \n    执行 `git reset HEAD new.txt`\n    ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621930227194-image.png)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n   \n   \n\n\n\n\n\n\n\n\n\n","source":"_posts/Git 常用命令.md","raw":"---\ntitle: Git 常用命令\ndate: 2021-06-8 18:45:01\n# 文章出处名称 #\nfrom: 原创\n# 文章出处链接 #\nurl:\n# 文章作者名称 #\nauthor: p0ny\n# 文章作者签名 #\nabout: 一穷二白\n# 文章作者头像 #\navatar: \n# 是否开启评论 #\ncomments: true\n# 文章标签 #\ntags: Git\n# 文章分类 #\ncategories: Git 命令\n# 文章摘要 #\ndescription: Git 命令\n# 文章置顶 #\nsticky: 1\n---\n### 1、git常用命令\n|命令名称|作用|\n|---|---|\n|git config --global user.name 用户名|设置用户签名|\n|git config --global user.email 邮箱|设置用户签名|\n|git init|初始化本地库|\n|git status|查看本地库状态|\n|git add 文件名|添加到暂存区|\n|git reset HEAD|将 暂存区 里 所有文件 恢复到 工作区|\n|git reset HEAD 1.txt|将 暂存区 里 指定文件 恢复到 工作区|\n|git commit -m \"日志信息\" 文件名|提交到本地库|\n|git reflog|查看历史记录|\n|git reset --hard 版本号|版本穿梭|\n|git remote add **仓库别名** **仓库地址**|添加别名为 origin的远程仓库地址|\n|git remote -v | 查看添加的远程仓库地址|\n|git push **仓库别名** master| push 到别名为 origin的远程仓库|\n\n### 1.1、配置 Git客户端\n`git config --global user.name p0ny`\n`git config --global user.email p0ny@88.com`\n\n为 Git客户端创建这么一个用户【以上的用户信息是虚拟的，只适用于本地的Git】\n\n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621832433778-image.png)\n\n验证是否成功？：\n在 `C:\\Users\\xxxx\\` 下有这么一个 `.gitconfig` 文件，使用 记事本打开，可以看到如下内容\n\n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621832600633-image.png)\n\n### 1.2、初始化本地库\n\n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621837286704-image.png)\n\n在当前项目的根目录下右键 ，然后点击 `Git Bash Here`\n\n然后执行 `git init` 命令\n\n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621837380100-image.png)\n\n\n可以看到，会在该目录下生成一个隐藏目录 `.git`\n\n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621837421469-image.png)\n\n\n### 1.3、分支的操作\n|命令名称|作用|\n|---|---|\n|git branch 分支名|创建分支|\n|git branch|查看分支|\n|git checkout 分支名|切换分支|\n|git mergge 分支名|把指定的分支合并到当前分支上|\n\n### 1.4、分支合并操作\n- 存在 master分支，然后创建一个分支的时候，该分支下自动存在 master分支下的所有文件。\n\n1. 正常合并\n\n   创建一个分支 `hot-fix` \n   \n   创建分支成功后，执行命令 `git checkout hot-fix` \n   \n   修改 `hot-fix` 下的文件内容，\n\n   然后执行命令 `git add 文件名` 添加到 暂存区\n   \n   最后执行 `git commit -m \"自定义的日志信息\" 文件名` 提交到本地库中\n\n   将 `hot-fix` 分支合并到 `master` 分支，\n   \n   切换至 `master` 分支\n   \n   然后执行 `git merge hot-fix` 。\n   \n   将 `hot-fix` 分支合并到当前分支【master】\n   \n   **综上操作，只是创建一个分支，在该分支下读写文件内容，然后提交到本地库之后，切换至master分支，然后执行命令合并命令**\n   **针对于此，只是修改了 新分支下的文件内容**\n   \n   \n2. 合并冲突【依次修改并且提交相同的文件名】、\n\n   已有两个分支 `hot-fix` , `master` \n   \n   依次在以上的分支修改相同的文件`hello.txt`并提交\n   \n   然后切换至 `master` 分支下，执行合并命令 `git merge hot-fix` \n   此时会 提示一下信息：\n   \n   ```\n   Auto-merging hello.txt\n   CONFLICT (content): Merge conflict in hello.txt\n   Automatic merge failed; fix conflicts and then commit the    result.\n   ```\n   \n   自动 合并失败，这里的解决方式是需要手动编辑保留自己想要的内容\n   \n   \n   ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621847389612-image.png)\n   <br>\n   <br>\n   \n   2.1 编辑【保留自己需要的内容】\n   \n   ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621847777522-image.png)\n\n    <br>\n   <br>\n   \n   2.2 编辑【保留自己需要的内容】\n   \n      执行添加到 暂存区的命令： `git add hello.txt` \n   \n      执行提交本地库命令 ： `git commit -m \"merge test\"`\n   \n   ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621847976777-image.png)\n\n   \n### 1.5、回滚\n1. 【通过版本号回滚】此前已经 往本地库中 提交过，就会有版本号，通过版本号来回滚到文件的某一状态\n\n   命令： `git reset --hard 完整的版本号`\n\n\n   ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621927434654-image.png)\n\n2. 【将文件从工作区的红色区域回滚到初始状态，仅对已经被添加到暂存区的文件有效】\n\n   命令： `git checkout -- 文件`\n   \n   ![初始内容](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621928976304-image.png)\n   \n   \n   ![修改文件内容](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621929186135-image.png)\n   \n   \n   最后执行 `git checkout -- hello.txt` ：将 hello.txt 的内容回滚到 初始内容的状态\n   \n   ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621929550814-image.png)\n   \n   \n   \n 3. 【将文件从工作区的红色区域添加到暂存区，然后将暂存区的文件回滚到工作区的红色区域】\n \n \n    新增 `new.txt` 文件\n\n    ![git 检测新增文件](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621929886477-image.png)\n\n    将文件添加到 暂存区\n    \n    ![将新增的文件添加到暂存区](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621930038596-image.png)\n    \n    \n    将暂存区的文件回滚到工作区中\n    \n    执行 `git reset HEAD new.txt`\n    ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621930227194-image.png)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n\n   \n   \n\n\n\n\n\n\n\n\n\n","slug":"Git 常用命令","published":1,"updated":"2021-06-08T10:44:43.986Z","layout":"post","photos":[],"link":"","_id":"cks8acfkf0007ycvmf6znc9gu","content":"<h3 id=\"1、git常用命令\"><a href=\"#1、git常用命令\" class=\"headerlink\" title=\"1、git常用命令\"></a>1、git常用命令</h3><table>\n<thead>\n<tr>\n<th>命令名称</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>git config –global user.name 用户名</td>\n<td>设置用户签名</td>\n</tr>\n<tr>\n<td>git config –global user.email 邮箱</td>\n<td>设置用户签名</td>\n</tr>\n<tr>\n<td>git init</td>\n<td>初始化本地库</td>\n</tr>\n<tr>\n<td>git status</td>\n<td>查看本地库状态</td>\n</tr>\n<tr>\n<td>git add 文件名</td>\n<td>添加到暂存区</td>\n</tr>\n<tr>\n<td>git reset HEAD</td>\n<td>将 暂存区 里 所有文件 恢复到 工作区</td>\n</tr>\n<tr>\n<td>git reset HEAD 1.txt</td>\n<td>将 暂存区 里 指定文件 恢复到 工作区</td>\n</tr>\n<tr>\n<td>git commit -m “日志信息” 文件名</td>\n<td>提交到本地库</td>\n</tr>\n<tr>\n<td>git reflog</td>\n<td>查看历史记录</td>\n</tr>\n<tr>\n<td>git reset –hard 版本号</td>\n<td>版本穿梭</td>\n</tr>\n<tr>\n<td>git remote add <strong>仓库别名</strong> <strong>仓库地址</strong></td>\n<td>添加别名为 origin的远程仓库地址</td>\n</tr>\n<tr>\n<td>git remote -v</td>\n<td>查看添加的远程仓库地址</td>\n</tr>\n<tr>\n<td>git push <strong>仓库别名</strong> master</td>\n<td>push 到别名为 origin的远程仓库</td>\n</tr>\n</tbody></table>\n<h3 id=\"1-1、配置-Git客户端\"><a href=\"#1-1、配置-Git客户端\" class=\"headerlink\" title=\"1.1、配置 Git客户端\"></a>1.1、配置 Git客户端</h3><p><code>git config --global user.name p0ny</code><br><code>git config --global user.email p0ny@88.com</code></p>\n<p>为 Git客户端创建这么一个用户【以上的用户信息是虚拟的，只适用于本地的Git】</p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621832433778-image.png\"></p>\n<p>验证是否成功？：<br>在 <code>C:\\Users\\xxxx\\</code> 下有这么一个 <code>.gitconfig</code> 文件，使用 记事本打开，可以看到如下内容</p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621832600633-image.png\"></p>\n<h3 id=\"1-2、初始化本地库\"><a href=\"#1-2、初始化本地库\" class=\"headerlink\" title=\"1.2、初始化本地库\"></a>1.2、初始化本地库</h3><p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621837286704-image.png\"></p>\n<p>在当前项目的根目录下右键 ，然后点击 <code>Git Bash Here</code></p>\n<p>然后执行 <code>git init</code> 命令</p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621837380100-image.png\"></p>\n<p>可以看到，会在该目录下生成一个隐藏目录 <code>.git</code></p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621837421469-image.png\"></p>\n<h3 id=\"1-3、分支的操作\"><a href=\"#1-3、分支的操作\" class=\"headerlink\" title=\"1.3、分支的操作\"></a>1.3、分支的操作</h3><table>\n<thead>\n<tr>\n<th>命令名称</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>git branch 分支名</td>\n<td>创建分支</td>\n</tr>\n<tr>\n<td>git branch</td>\n<td>查看分支</td>\n</tr>\n<tr>\n<td>git checkout 分支名</td>\n<td>切换分支</td>\n</tr>\n<tr>\n<td>git mergge 分支名</td>\n<td>把指定的分支合并到当前分支上</td>\n</tr>\n</tbody></table>\n<h3 id=\"1-4、分支合并操作\"><a href=\"#1-4、分支合并操作\" class=\"headerlink\" title=\"1.4、分支合并操作\"></a>1.4、分支合并操作</h3><ul>\n<li>存在 master分支，然后创建一个分支的时候，该分支下自动存在 master分支下的所有文件。</li>\n</ul>\n<ol>\n<li><p>正常合并</p>\n<p>创建一个分支 <code>hot-fix</code> </p>\n<p>创建分支成功后，执行命令 <code>git checkout hot-fix</code> </p>\n<p>修改 <code>hot-fix</code> 下的文件内容，</p>\n<p>然后执行命令 <code>git add 文件名</code> 添加到 暂存区</p>\n<p>最后执行 <code>git commit -m &quot;自定义的日志信息&quot; 文件名</code> 提交到本地库中</p>\n<p>将 <code>hot-fix</code> 分支合并到 <code>master</code> 分支，</p>\n<p>切换至 <code>master</code> 分支</p>\n<p>然后执行 <code>git merge hot-fix</code> 。</p>\n<p>将 <code>hot-fix</code> 分支合并到当前分支【master】</p>\n<p><strong>综上操作，只是创建一个分支，在该分支下读写文件内容，然后提交到本地库之后，切换至master分支，然后执行命令合并命令</strong><br><strong>针对于此，只是修改了 新分支下的文件内容</strong></p>\n</li>\n<li><p>合并冲突【依次修改并且提交相同的文件名】、</p>\n<p>已有两个分支 <code>hot-fix</code> , <code>master</code> </p>\n<p>依次在以上的分支修改相同的文件<code>hello.txt</code>并提交</p>\n<p>然后切换至 <code>master</code> 分支下，执行合并命令 <code>git merge hot-fix</code><br>此时会 提示一下信息：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Auto-merging hello.txt</span><br><span class=\"line\">CONFLICT (content): Merge conflict in hello.txt</span><br><span class=\"line\">Automatic merge failed; fix conflicts and then commit the    result.</span><br></pre></td></tr></table></figure>\n\n<p>自动 合并失败，这里的解决方式是需要手动编辑保留自己想要的内容</p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621847389612-image.png\"></p>\n<br>\n<br>\n\n<p>2.1 编辑【保留自己需要的内容】</p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621847777522-image.png\"></p>\n <br>\n<br>\n\n<p>2.2 编辑【保留自己需要的内容】</p>\n<p>   执行添加到 暂存区的命令： <code>git add hello.txt</code> </p>\n<p>   执行提交本地库命令 ： <code>git commit -m &quot;merge test&quot;</code></p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621847976777-image.png\"></p>\n</li>\n</ol>\n<h3 id=\"1-5、回滚\"><a href=\"#1-5、回滚\" class=\"headerlink\" title=\"1.5、回滚\"></a>1.5、回滚</h3><ol>\n<li><p>【通过版本号回滚】此前已经 往本地库中 提交过，就会有版本号，通过版本号来回滚到文件的某一状态</p>\n<p>命令： <code>git reset --hard 完整的版本号</code></p>\n</li>\n</ol>\n<p>   <img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621927434654-image.png\"></p>\n<ol start=\"2\">\n<li><p>【将文件从工作区的红色区域回滚到初始状态，仅对已经被添加到暂存区的文件有效】</p>\n<p>命令： <code>git checkout -- 文件</code></p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621928976304-image.png\" alt=\"初始内容\"></p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621929186135-image.png\" alt=\"修改文件内容\"></p>\n<p>最后执行 <code>git checkout -- hello.txt</code> ：将 hello.txt 的内容回滚到 初始内容的状态</p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621929550814-image.png\"></p>\n</li>\n<li><p>【将文件从工作区的红色区域添加到暂存区，然后将暂存区的文件回滚到工作区的红色区域】</p>\n<p>新增 <code>new.txt</code> 文件</p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621929886477-image.png\" alt=\"git 检测新增文件\"></p>\n<p>将文件添加到 暂存区</p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621930038596-image.png\" alt=\"将新增的文件添加到暂存区\"></p>\n<p>将暂存区的文件回滚到工作区中</p>\n<p>执行 <code>git reset HEAD new.txt</code><br><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621930227194-image.png\"></p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1、git常用命令\"><a href=\"#1、git常用命令\" class=\"headerlink\" title=\"1、git常用命令\"></a>1、git常用命令</h3><table>\n<thead>\n<tr>\n<th>命令名称</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>git config –global user.name 用户名</td>\n<td>设置用户签名</td>\n</tr>\n<tr>\n<td>git config –global user.email 邮箱</td>\n<td>设置用户签名</td>\n</tr>\n<tr>\n<td>git init</td>\n<td>初始化本地库</td>\n</tr>\n<tr>\n<td>git status</td>\n<td>查看本地库状态</td>\n</tr>\n<tr>\n<td>git add 文件名</td>\n<td>添加到暂存区</td>\n</tr>\n<tr>\n<td>git reset HEAD</td>\n<td>将 暂存区 里 所有文件 恢复到 工作区</td>\n</tr>\n<tr>\n<td>git reset HEAD 1.txt</td>\n<td>将 暂存区 里 指定文件 恢复到 工作区</td>\n</tr>\n<tr>\n<td>git commit -m “日志信息” 文件名</td>\n<td>提交到本地库</td>\n</tr>\n<tr>\n<td>git reflog</td>\n<td>查看历史记录</td>\n</tr>\n<tr>\n<td>git reset –hard 版本号</td>\n<td>版本穿梭</td>\n</tr>\n<tr>\n<td>git remote add <strong>仓库别名</strong> <strong>仓库地址</strong></td>\n<td>添加别名为 origin的远程仓库地址</td>\n</tr>\n<tr>\n<td>git remote -v</td>\n<td>查看添加的远程仓库地址</td>\n</tr>\n<tr>\n<td>git push <strong>仓库别名</strong> master</td>\n<td>push 到别名为 origin的远程仓库</td>\n</tr>\n</tbody></table>\n<h3 id=\"1-1、配置-Git客户端\"><a href=\"#1-1、配置-Git客户端\" class=\"headerlink\" title=\"1.1、配置 Git客户端\"></a>1.1、配置 Git客户端</h3><p><code>git config --global user.name p0ny</code><br><code>git config --global user.email p0ny@88.com</code></p>\n<p>为 Git客户端创建这么一个用户【以上的用户信息是虚拟的，只适用于本地的Git】</p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621832433778-image.png\"></p>\n<p>验证是否成功？：<br>在 <code>C:\\Users\\xxxx\\</code> 下有这么一个 <code>.gitconfig</code> 文件，使用 记事本打开，可以看到如下内容</p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621832600633-image.png\"></p>\n<h3 id=\"1-2、初始化本地库\"><a href=\"#1-2、初始化本地库\" class=\"headerlink\" title=\"1.2、初始化本地库\"></a>1.2、初始化本地库</h3><p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621837286704-image.png\"></p>\n<p>在当前项目的根目录下右键 ，然后点击 <code>Git Bash Here</code></p>\n<p>然后执行 <code>git init</code> 命令</p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621837380100-image.png\"></p>\n<p>可以看到，会在该目录下生成一个隐藏目录 <code>.git</code></p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621837421469-image.png\"></p>\n<h3 id=\"1-3、分支的操作\"><a href=\"#1-3、分支的操作\" class=\"headerlink\" title=\"1.3、分支的操作\"></a>1.3、分支的操作</h3><table>\n<thead>\n<tr>\n<th>命令名称</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>git branch 分支名</td>\n<td>创建分支</td>\n</tr>\n<tr>\n<td>git branch</td>\n<td>查看分支</td>\n</tr>\n<tr>\n<td>git checkout 分支名</td>\n<td>切换分支</td>\n</tr>\n<tr>\n<td>git mergge 分支名</td>\n<td>把指定的分支合并到当前分支上</td>\n</tr>\n</tbody></table>\n<h3 id=\"1-4、分支合并操作\"><a href=\"#1-4、分支合并操作\" class=\"headerlink\" title=\"1.4、分支合并操作\"></a>1.4、分支合并操作</h3><ul>\n<li>存在 master分支，然后创建一个分支的时候，该分支下自动存在 master分支下的所有文件。</li>\n</ul>\n<ol>\n<li><p>正常合并</p>\n<p>创建一个分支 <code>hot-fix</code> </p>\n<p>创建分支成功后，执行命令 <code>git checkout hot-fix</code> </p>\n<p>修改 <code>hot-fix</code> 下的文件内容，</p>\n<p>然后执行命令 <code>git add 文件名</code> 添加到 暂存区</p>\n<p>最后执行 <code>git commit -m &quot;自定义的日志信息&quot; 文件名</code> 提交到本地库中</p>\n<p>将 <code>hot-fix</code> 分支合并到 <code>master</code> 分支，</p>\n<p>切换至 <code>master</code> 分支</p>\n<p>然后执行 <code>git merge hot-fix</code> 。</p>\n<p>将 <code>hot-fix</code> 分支合并到当前分支【master】</p>\n<p><strong>综上操作，只是创建一个分支，在该分支下读写文件内容，然后提交到本地库之后，切换至master分支，然后执行命令合并命令</strong><br><strong>针对于此，只是修改了 新分支下的文件内容</strong></p>\n</li>\n<li><p>合并冲突【依次修改并且提交相同的文件名】、</p>\n<p>已有两个分支 <code>hot-fix</code> , <code>master</code> </p>\n<p>依次在以上的分支修改相同的文件<code>hello.txt</code>并提交</p>\n<p>然后切换至 <code>master</code> 分支下，执行合并命令 <code>git merge hot-fix</code><br>此时会 提示一下信息：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Auto-merging hello.txt</span><br><span class=\"line\">CONFLICT (content): Merge conflict in hello.txt</span><br><span class=\"line\">Automatic merge failed; fix conflicts and then commit the    result.</span><br></pre></td></tr></table></figure>\n\n<p>自动 合并失败，这里的解决方式是需要手动编辑保留自己想要的内容</p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621847389612-image.png\"></p>\n<br>\n<br>\n\n<p>2.1 编辑【保留自己需要的内容】</p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621847777522-image.png\"></p>\n <br>\n<br>\n\n<p>2.2 编辑【保留自己需要的内容】</p>\n<p>   执行添加到 暂存区的命令： <code>git add hello.txt</code> </p>\n<p>   执行提交本地库命令 ： <code>git commit -m &quot;merge test&quot;</code></p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621847976777-image.png\"></p>\n</li>\n</ol>\n<h3 id=\"1-5、回滚\"><a href=\"#1-5、回滚\" class=\"headerlink\" title=\"1.5、回滚\"></a>1.5、回滚</h3><ol>\n<li><p>【通过版本号回滚】此前已经 往本地库中 提交过，就会有版本号，通过版本号来回滚到文件的某一状态</p>\n<p>命令： <code>git reset --hard 完整的版本号</code></p>\n</li>\n</ol>\n<p>   <img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621927434654-image.png\"></p>\n<ol start=\"2\">\n<li><p>【将文件从工作区的红色区域回滚到初始状态，仅对已经被添加到暂存区的文件有效】</p>\n<p>命令： <code>git checkout -- 文件</code></p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621928976304-image.png\" alt=\"初始内容\"></p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621929186135-image.png\" alt=\"修改文件内容\"></p>\n<p>最后执行 <code>git checkout -- hello.txt</code> ：将 hello.txt 的内容回滚到 初始内容的状态</p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621929550814-image.png\"></p>\n</li>\n<li><p>【将文件从工作区的红色区域添加到暂存区，然后将暂存区的文件回滚到工作区的红色区域】</p>\n<p>新增 <code>new.txt</code> 文件</p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621929886477-image.png\" alt=\"git 检测新增文件\"></p>\n<p>将文件添加到 暂存区</p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621930038596-image.png\" alt=\"将新增的文件添加到暂存区\"></p>\n<p>将暂存区的文件回滚到工作区中</p>\n<p>执行 <code>git reset HEAD new.txt</code><br><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-25/1621930227194-image.png\"></p>\n</li>\n</ol>\n"},{"title":"Git配置同时存在Gitee、Github多个账户","date":"2021-08-11T14:00:12.000Z","from":"原创","url":null,"author":"p0ny","about":"一穷二白","avatar":null,"comments":1,"description":"Git配置同时存在Gitee、Github多个账户","sticky":1,"_content":"# Git配置同时存在Gitee、Github多个账户\n\n### 一、清空 Git 的全局配置文件里面的内容\n\n>1. **清空** Git 的全局配置文件里面的内容\n>\n>    全局配置文件的路径：   \n>    `\"C:\\Users\\用户名\\.gitconfig\"`\n>\n>    该文件下有类似如下内容，则**清空**\n>    ```\n>    [user]\n>    email = p0ny233@88.com\n>    name = p0ny233\n>    ```\n>\n>    **刚安装 `git` 的可以忽略这一步**\n>\n\n### 二、生成新的 SSH keys\n\n>  0. 若在 `C:/Users/用户名/` 目录下没有 `.ssh` 文件夹，不允许创建以 `.` 开头的文件,那么就需要使用命令任意生成\n>     >  1. 打开 `git` 终端\n>     >  1. `ssh-keygen -t rsa -C \"p0ny233@github.com\"`\n>     >\n>     >  2. 该命令执行后，会在`C:/Users/用户名/` 目录下生成 `.ssh` 文件夹\n>     >\n>     >  3. 然后将 `C:/Users/用户名/.ssh/` 目录下的 **所有文件清空** ，继续下面的步骤即可\n>\n>  1. 生成 Github 的钥匙\n>     >  命令格式：`ssh-keygen -t rsa -f C:/Users/用户名/.ssh/id_rsa.github -C \"p0ny233@github.com\"`\n>  2. 生成 Gitlab 的钥匙\n>     >  命令格式：`ssh-keygen -t rsa -f C:/Users/用户名/.ssh/id_rsa.gitlab -C \"fengyucong@gitlab.com\"`\n>  3. 生成 Gitee 的钥匙\n>     >  命令格式：`ssh-keygen -t rsa -f C:/Users/用户名/.ssh/id_rsa.gitee -C \"p0ny233@gitee.com\"`\n\n### 三、多账号必须配置 config 文件(重点)\n\n>1. 创建 `config` 文件\n>    查看 `\"C:/Users/用户名/.ssh/`  目录下是否存在 `config` 文件，没有则创建 \n>    \n>    ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628681315136-image.png)\n>    > `config` 文件的内容\n>    >\n>    > **里面的内容不能含有中文【未自测】**\n>    >```\n>\t\t > #Default gitHub user Self\n>    > Host github.com\n>\t \t >     HostName github.com\n>\t\t >     User git #默认就是git，可以不写\n>\t\t >     IdentityFile  C:/Users/admin/.ssh/id_rsa.github\n>\t\t > \n>\t\t > #Add gitLab user \n>\t\t >     Host 10.11.10.37\n>\t\t >     HostName gitlab.com\n>\t\t >     User git\n>\t\t >     IdentityFile  C:/Users/admin/.ssh/id_rsa.gitlab\n>\t\t > \n>    > # gitee\n>\t \t > Host gitee.com\n>\t \t >     Port 22\n>\t   >     HostName gitee.com\n>\t\t >     User git\n>\t\t >     IdentityFile  C:/Users/admin/.ssh/id_rsa.gitee\n>\t\t > \n>    >```\n>\t\t >对 `config` 文件内容的字段说明：\n>\t\t >  - Host\n>\t\t >\n>\t\t >    涵盖了下面一个段的配置，我们可以通过他来替代将要连接的服务器地址。\n>\t\t >  这里可以使用任意字段或通配符。\n>\t\t >  当ssh的时候如果服务器地址能匹配上这里Host指定的值，则Host下面指定的HostName将被作为最终的服务器地址使用\n>        >\n>\t\t >  - Port \n>\t\t >\n>\t\t >    自定义的端口。默认为22，可不配置\n>\t\t >  - User \n>\t\t >\n>\t\t >    自定义的用户名，默认为git，可不配置\n>\t\t >  - HostName \n>\t\t >\n>\t\t >    真正连接的服务器地址\n>\t\t >  - PreferredAuthentications \n>\t\t >\n>\t\t >    指定优先使用哪种方式验证，支持密码和秘钥验证方式\n>\t\t >  - IdentityFile \n>\t\t > \n>\t\t >    指定本次连接使用的密钥文件\n\n### 四、在 github 、 gitlab 和 gitee 网站添加 ssh\n\n>1. github直达地址：`https://github.com/settings/keys`\n>   \n>    ![github直达添加key地址](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628682745107-image.png)\n>\n>\n>\n>\n>2. 将 `C:\\Users\\admin\\.ssh\\id_rsa.github.pub` 文件的所有内容复制粘贴到 文本框中\n>\n>    ![打开文件](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628683524975-image.png)\n>\n>    ![点击添加](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628683643213-image.png)\n>\n\n### 五、在 git 终端测试是否连接成功\n\n>1. 由于每个托管商的**仓库**都有唯一的后缀，比如 Github 的是 git@github.com:*。\n>所以可以这样测试：\n> `ssh -T git@github.com`\n>\n>    ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628683925777-image.png)\n>\n>\n>2. 然后遇到问题【如果没遇到问题则跳过】：`git@github.com: Permission denied (publickey).`\n> \n>    ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628684125655-image.png)\n>\n>     解决方式：\n>    > 1. 使用命令 `ssh-agent bash`  \n>    > 2. 命令格式 `ssh-add C:/Users/用户名/.ssh/id_rsa.平台名称` 【**注意路径的斜杠**】\n>    >    我这里的命令是 `ssh-add C:/Users/admin/.ssh/id_rsa.github`\n>      ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628685369174-image.png)\n>\n>\n> 3. 继续测试\n> ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628685567778-image.png)\n> 提示 `Hi 用户名! You've successfully authenticated, but GitHub does not provide shell access. ` 说明连接成功\n\n\n### 六、测试内网 gitlab 连接\n\n> 1. 无法使用命令 `ssh -T 10.11.10.37` 进行测试，会遭到**权限的拒绝**\n> 2. 而且 `config` 配置文件中的 Host 字段需要指定成 **IP地址** ，否则也会遭到**权限的拒绝**\n> 3. 只能添加 仓库的地址去 `pull` 下来，才知道是否成功   \n>   3.1 复制仓库地址\n>       ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628689656125-image.png)\n>   3.2 新建一个空文件夹 ，然后打开 git终端使用初始化命令   \n>       `git init`   \n>   3.3 使用命令添加刚复制的远程仓库    \n>`git remote add apk git@gitlab.testplus.cn:chenyang6/apk_checker.git`  \n>   3.4 下载仓库中的代码   \n>`git pull apk master` \n\n\n\n\n\n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628689249564-image.png)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  ","source":"_posts/Git配置同时存在Gitee、Github多个账户.md","raw":"---\ntitle: Git配置同时存在Gitee、Github多个账户\ndate: 2021-08-11 22:00:12\n# 文章出处名称 #\nfrom: 原创\n# 文章出处链接 #\nurl:\n# 文章作者名称 #\nauthor: p0ny\n# 文章作者签名 #\nabout: 一穷二白\n# 文章作者头像 #\navatar: \n# 是否开启评论 #\ncomments: true\n# 文章标签 #\ntags: Git\n# 文章分类 #\ncategories: Git\n# 文章摘要 #\ndescription: Git配置同时存在Gitee、Github多个账户\n# 文章置顶 #\nsticky: 1\n---\n# Git配置同时存在Gitee、Github多个账户\n\n### 一、清空 Git 的全局配置文件里面的内容\n\n>1. **清空** Git 的全局配置文件里面的内容\n>\n>    全局配置文件的路径：   \n>    `\"C:\\Users\\用户名\\.gitconfig\"`\n>\n>    该文件下有类似如下内容，则**清空**\n>    ```\n>    [user]\n>    email = p0ny233@88.com\n>    name = p0ny233\n>    ```\n>\n>    **刚安装 `git` 的可以忽略这一步**\n>\n\n### 二、生成新的 SSH keys\n\n>  0. 若在 `C:/Users/用户名/` 目录下没有 `.ssh` 文件夹，不允许创建以 `.` 开头的文件,那么就需要使用命令任意生成\n>     >  1. 打开 `git` 终端\n>     >  1. `ssh-keygen -t rsa -C \"p0ny233@github.com\"`\n>     >\n>     >  2. 该命令执行后，会在`C:/Users/用户名/` 目录下生成 `.ssh` 文件夹\n>     >\n>     >  3. 然后将 `C:/Users/用户名/.ssh/` 目录下的 **所有文件清空** ，继续下面的步骤即可\n>\n>  1. 生成 Github 的钥匙\n>     >  命令格式：`ssh-keygen -t rsa -f C:/Users/用户名/.ssh/id_rsa.github -C \"p0ny233@github.com\"`\n>  2. 生成 Gitlab 的钥匙\n>     >  命令格式：`ssh-keygen -t rsa -f C:/Users/用户名/.ssh/id_rsa.gitlab -C \"fengyucong@gitlab.com\"`\n>  3. 生成 Gitee 的钥匙\n>     >  命令格式：`ssh-keygen -t rsa -f C:/Users/用户名/.ssh/id_rsa.gitee -C \"p0ny233@gitee.com\"`\n\n### 三、多账号必须配置 config 文件(重点)\n\n>1. 创建 `config` 文件\n>    查看 `\"C:/Users/用户名/.ssh/`  目录下是否存在 `config` 文件，没有则创建 \n>    \n>    ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628681315136-image.png)\n>    > `config` 文件的内容\n>    >\n>    > **里面的内容不能含有中文【未自测】**\n>    >```\n>\t\t > #Default gitHub user Self\n>    > Host github.com\n>\t \t >     HostName github.com\n>\t\t >     User git #默认就是git，可以不写\n>\t\t >     IdentityFile  C:/Users/admin/.ssh/id_rsa.github\n>\t\t > \n>\t\t > #Add gitLab user \n>\t\t >     Host 10.11.10.37\n>\t\t >     HostName gitlab.com\n>\t\t >     User git\n>\t\t >     IdentityFile  C:/Users/admin/.ssh/id_rsa.gitlab\n>\t\t > \n>    > # gitee\n>\t \t > Host gitee.com\n>\t \t >     Port 22\n>\t   >     HostName gitee.com\n>\t\t >     User git\n>\t\t >     IdentityFile  C:/Users/admin/.ssh/id_rsa.gitee\n>\t\t > \n>    >```\n>\t\t >对 `config` 文件内容的字段说明：\n>\t\t >  - Host\n>\t\t >\n>\t\t >    涵盖了下面一个段的配置，我们可以通过他来替代将要连接的服务器地址。\n>\t\t >  这里可以使用任意字段或通配符。\n>\t\t >  当ssh的时候如果服务器地址能匹配上这里Host指定的值，则Host下面指定的HostName将被作为最终的服务器地址使用\n>        >\n>\t\t >  - Port \n>\t\t >\n>\t\t >    自定义的端口。默认为22，可不配置\n>\t\t >  - User \n>\t\t >\n>\t\t >    自定义的用户名，默认为git，可不配置\n>\t\t >  - HostName \n>\t\t >\n>\t\t >    真正连接的服务器地址\n>\t\t >  - PreferredAuthentications \n>\t\t >\n>\t\t >    指定优先使用哪种方式验证，支持密码和秘钥验证方式\n>\t\t >  - IdentityFile \n>\t\t > \n>\t\t >    指定本次连接使用的密钥文件\n\n### 四、在 github 、 gitlab 和 gitee 网站添加 ssh\n\n>1. github直达地址：`https://github.com/settings/keys`\n>   \n>    ![github直达添加key地址](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628682745107-image.png)\n>\n>\n>\n>\n>2. 将 `C:\\Users\\admin\\.ssh\\id_rsa.github.pub` 文件的所有内容复制粘贴到 文本框中\n>\n>    ![打开文件](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628683524975-image.png)\n>\n>    ![点击添加](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628683643213-image.png)\n>\n\n### 五、在 git 终端测试是否连接成功\n\n>1. 由于每个托管商的**仓库**都有唯一的后缀，比如 Github 的是 git@github.com:*。\n>所以可以这样测试：\n> `ssh -T git@github.com`\n>\n>    ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628683925777-image.png)\n>\n>\n>2. 然后遇到问题【如果没遇到问题则跳过】：`git@github.com: Permission denied (publickey).`\n> \n>    ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628684125655-image.png)\n>\n>     解决方式：\n>    > 1. 使用命令 `ssh-agent bash`  \n>    > 2. 命令格式 `ssh-add C:/Users/用户名/.ssh/id_rsa.平台名称` 【**注意路径的斜杠**】\n>    >    我这里的命令是 `ssh-add C:/Users/admin/.ssh/id_rsa.github`\n>      ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628685369174-image.png)\n>\n>\n> 3. 继续测试\n> ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628685567778-image.png)\n> 提示 `Hi 用户名! You've successfully authenticated, but GitHub does not provide shell access. ` 说明连接成功\n\n\n### 六、测试内网 gitlab 连接\n\n> 1. 无法使用命令 `ssh -T 10.11.10.37` 进行测试，会遭到**权限的拒绝**\n> 2. 而且 `config` 配置文件中的 Host 字段需要指定成 **IP地址** ，否则也会遭到**权限的拒绝**\n> 3. 只能添加 仓库的地址去 `pull` 下来，才知道是否成功   \n>   3.1 复制仓库地址\n>       ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628689656125-image.png)\n>   3.2 新建一个空文件夹 ，然后打开 git终端使用初始化命令   \n>       `git init`   \n>   3.3 使用命令添加刚复制的远程仓库    \n>`git remote add apk git@gitlab.testplus.cn:chenyang6/apk_checker.git`  \n>   3.4 下载仓库中的代码   \n>`git pull apk master` \n\n\n\n\n\n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628689249564-image.png)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  ","slug":"Git配置同时存在Gitee、Github多个账户","published":1,"updated":"2021-08-12T00:59:53.593Z","layout":"post","photos":[],"link":"","_id":"cks8acfkh0009ycvmh2e5fovo","content":"<h1 id=\"Git配置同时存在Gitee、Github多个账户\"><a href=\"#Git配置同时存在Gitee、Github多个账户\" class=\"headerlink\" title=\"Git配置同时存在Gitee、Github多个账户\"></a>Git配置同时存在Gitee、Github多个账户</h1><h3 id=\"一、清空-Git-的全局配置文件里面的内容\"><a href=\"#一、清空-Git-的全局配置文件里面的内容\" class=\"headerlink\" title=\"一、清空 Git 的全局配置文件里面的内容\"></a>一、清空 Git 的全局配置文件里面的内容</h3><blockquote>\n<ol>\n<li><p><strong>清空</strong> Git 的全局配置文件里面的内容</p>\n<p>全局配置文件的路径：<br><code>&quot;C:\\Users\\用户名\\.gitconfig&quot;</code></p>\n<p>该文件下有类似如下内容，则<strong>清空</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[user]</span><br><span class=\"line\">email = p0ny233@88.com</span><br><span class=\"line\">name = p0ny233</span><br></pre></td></tr></table></figure>\n\n<p><strong>刚安装 <code>git</code> 的可以忽略这一步</strong></p>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"二、生成新的-SSH-keys\"><a href=\"#二、生成新的-SSH-keys\" class=\"headerlink\" title=\"二、生成新的 SSH keys\"></a>二、生成新的 SSH keys</h3><blockquote>\n<ol start=\"0\">\n<li><p>若在 <code>C:/Users/用户名/</code> 目录下没有 <code>.ssh</code> 文件夹，不允许创建以 <code>.</code> 开头的文件,那么就需要使用命令任意生成</p>\n<blockquote>\n<ol>\n<li><p>打开 <code>git</code> 终端</p>\n</li>\n<li><p><code>ssh-keygen -t rsa -C &quot;p0ny233@github.com&quot;</code></p>\n</li>\n<li><p>该命令执行后，会在<code>C:/Users/用户名/</code> 目录下生成 <code>.ssh</code> 文件夹</p>\n</li>\n<li><p>然后将 <code>C:/Users/用户名/.ssh/</code> 目录下的 <strong>所有文件清空</strong> ，继续下面的步骤即可</p>\n</li>\n</ol>\n</blockquote>\n</li>\n<li><p>生成 Github 的钥匙</p>\n<blockquote>\n<p> 命令格式：<code>ssh-keygen -t rsa -f C:/Users/用户名/.ssh/id_rsa.github -C &quot;p0ny233@github.com&quot;</code></p>\n</blockquote>\n</li>\n<li><p>生成 Gitlab 的钥匙</p>\n<blockquote>\n<p> 命令格式：<code>ssh-keygen -t rsa -f C:/Users/用户名/.ssh/id_rsa.gitlab -C &quot;fengyucong@gitlab.com&quot;</code></p>\n</blockquote>\n</li>\n<li><p>生成 Gitee 的钥匙</p>\n<blockquote>\n<p> 命令格式：<code>ssh-keygen -t rsa -f C:/Users/用户名/.ssh/id_rsa.gitee -C &quot;p0ny233@gitee.com&quot;</code></p>\n</blockquote>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"三、多账号必须配置-config-文件-重点\"><a href=\"#三、多账号必须配置-config-文件-重点\" class=\"headerlink\" title=\"三、多账号必须配置 config 文件(重点)\"></a>三、多账号必须配置 config 文件(重点)</h3><blockquote>\n<ol>\n<li>创建 <code>config</code> 文件<br>查看 <code>&quot;C:/Users/用户名/.ssh/</code>  目录下是否存在 <code>config</code> 文件，没有则创建 <img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628681315136-image.png\"><blockquote>\n<p><code>config</code> 文件的内容</p>\n<p><strong>里面的内容不能含有中文【未自测】</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#Default gitHub user Self</span><br><span class=\"line\">Host github.com</span><br><span class=\"line\">    HostName github.com</span><br><span class=\"line\">    User git #默认就是git，可以不写</span><br><span class=\"line\">    IdentityFile  C:/Users/admin/.ssh/id_rsa.github</span><br><span class=\"line\"></span><br><span class=\"line\">#Add gitLab user </span><br><span class=\"line\">    Host 10.11.10.37</span><br><span class=\"line\">    HostName gitlab.com</span><br><span class=\"line\">    User git</span><br><span class=\"line\">    IdentityFile  C:/Users/admin/.ssh/id_rsa.gitlab</span><br><span class=\"line\"></span><br><span class=\"line\"># gitee</span><br><span class=\"line\">Host gitee.com</span><br><span class=\"line\">    Port 22</span><br><span class=\"line\">    HostName gitee.com</span><br><span class=\"line\">    User git</span><br><span class=\"line\">    IdentityFile  C:/Users/admin/.ssh/id_rsa.gitee</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>对 <code>config</code> 文件内容的字段说明：</p>\n<ul>\n<li><p>Host</p>\n<p>涵盖了下面一个段的配置，我们可以通过他来替代将要连接的服务器地址。<br>这里可以使用任意字段或通配符。<br>当ssh的时候如果服务器地址能匹配上这里Host指定的值，则Host下面指定的HostName将被作为最终的服务器地址使用</p>\n</li>\n<li><p>Port </p>\n<p>自定义的端口。默认为22，可不配置</p>\n</li>\n<li><p>User </p>\n<p>自定义的用户名，默认为git，可不配置</p>\n</li>\n<li><p>HostName </p>\n<p>真正连接的服务器地址</p>\n</li>\n<li><p>PreferredAuthentications </p>\n<p>指定优先使用哪种方式验证，支持密码和秘钥验证方式</p>\n</li>\n<li><p>IdentityFile </p>\n<p>指定本次连接使用的密钥文件</p>\n</li>\n</ul>\n</blockquote>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"四、在-github-、-gitlab-和-gitee-网站添加-ssh\"><a href=\"#四、在-github-、-gitlab-和-gitee-网站添加-ssh\" class=\"headerlink\" title=\"四、在 github 、 gitlab 和 gitee 网站添加 ssh\"></a>四、在 github 、 gitlab 和 gitee 网站添加 ssh</h3><blockquote>\n<ol>\n<li>github直达地址：<code>https://github.com/settings/keys</code><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628682745107-image.png\" alt=\"github直达添加key地址\"></li>\n</ol>\n<ol start=\"2\">\n<li><p>将 <code>C:\\Users\\admin\\.ssh\\id_rsa.github.pub</code> 文件的所有内容复制粘贴到 文本框中</p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628683524975-image.png\" alt=\"打开文件\"></p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628683643213-image.png\" alt=\"点击添加\"></p>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"五、在-git-终端测试是否连接成功\"><a href=\"#五、在-git-终端测试是否连接成功\" class=\"headerlink\" title=\"五、在 git 终端测试是否连接成功\"></a>五、在 git 终端测试是否连接成功</h3><blockquote>\n<ol>\n<li><p>由于每个托管商的<strong>仓库</strong>都有唯一的后缀，比如 Github 的是 <a href=\"mailto:&#x67;&#105;&#116;&#64;&#x67;&#105;&#x74;&#104;&#x75;&#x62;&#46;&#x63;&#111;&#109;\">&#x67;&#105;&#116;&#64;&#x67;&#105;&#x74;&#104;&#x75;&#x62;&#46;&#x63;&#111;&#109;</a>:*。<br>所以可以这样测试：<br><code>ssh -T git@github.com</code></p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628683925777-image.png\"></p>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>然后遇到问题【如果没遇到问题则跳过】：<code>git@github.com: Permission denied (publickey).</code></p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628684125655-image.png\"></p>\n<p> 解决方式：</p>\n<blockquote>\n<ol>\n<li>使用命令 <code>ssh-agent bash</code>  </li>\n<li>命令格式 <code>ssh-add C:/Users/用户名/.ssh/id_rsa.平台名称</code> 【<strong>注意路径的斜杠</strong>】<br>我这里的命令是 <code>ssh-add C:/Users/admin/.ssh/id_rsa.github</code><br><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628685369174-image.png\"></li>\n</ol>\n</blockquote>\n</li>\n</ol>\n<ol start=\"3\">\n<li>继续测试<br><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628685567778-image.png\"><br>提示 <code>Hi 用户名! You&#39;ve successfully authenticated, but GitHub does not provide shell access. </code> 说明连接成功</li>\n</ol>\n</blockquote>\n<h3 id=\"六、测试内网-gitlab-连接\"><a href=\"#六、测试内网-gitlab-连接\" class=\"headerlink\" title=\"六、测试内网 gitlab 连接\"></a>六、测试内网 gitlab 连接</h3><blockquote>\n<ol>\n<li>无法使用命令 <code>ssh -T 10.11.10.37</code> 进行测试，会遭到<strong>权限的拒绝</strong></li>\n<li>而且 <code>config</code> 配置文件中的 Host 字段需要指定成 <strong>IP地址</strong> ，否则也会遭到<strong>权限的拒绝</strong></li>\n<li>只能添加 仓库的地址去 <code>pull</code> 下来，才知道是否成功   </li>\n<li>1 复制仓库地址<br>  <img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628689656125-image.png\"></li>\n<li>2 新建一个空文件夹 ，然后打开 git终端使用初始化命令<br>  <code>git init</code>   </li>\n<li>3 使用命令添加刚复制的远程仓库<br><code>git remote add apk git@gitlab.testplus.cn:chenyang6/apk_checker.git</code>  </li>\n<li>4 下载仓库中的代码<br><code>git pull apk master</code> </li>\n</ol>\n</blockquote>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628689249564-image.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Git配置同时存在Gitee、Github多个账户\"><a href=\"#Git配置同时存在Gitee、Github多个账户\" class=\"headerlink\" title=\"Git配置同时存在Gitee、Github多个账户\"></a>Git配置同时存在Gitee、Github多个账户</h1><h3 id=\"一、清空-Git-的全局配置文件里面的内容\"><a href=\"#一、清空-Git-的全局配置文件里面的内容\" class=\"headerlink\" title=\"一、清空 Git 的全局配置文件里面的内容\"></a>一、清空 Git 的全局配置文件里面的内容</h3><blockquote>\n<ol>\n<li><p><strong>清空</strong> Git 的全局配置文件里面的内容</p>\n<p>全局配置文件的路径：<br><code>&quot;C:\\Users\\用户名\\.gitconfig&quot;</code></p>\n<p>该文件下有类似如下内容，则<strong>清空</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[user]</span><br><span class=\"line\">email = p0ny233@88.com</span><br><span class=\"line\">name = p0ny233</span><br></pre></td></tr></table></figure>\n\n<p><strong>刚安装 <code>git</code> 的可以忽略这一步</strong></p>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"二、生成新的-SSH-keys\"><a href=\"#二、生成新的-SSH-keys\" class=\"headerlink\" title=\"二、生成新的 SSH keys\"></a>二、生成新的 SSH keys</h3><blockquote>\n<ol start=\"0\">\n<li><p>若在 <code>C:/Users/用户名/</code> 目录下没有 <code>.ssh</code> 文件夹，不允许创建以 <code>.</code> 开头的文件,那么就需要使用命令任意生成</p>\n<blockquote>\n<ol>\n<li><p>打开 <code>git</code> 终端</p>\n</li>\n<li><p><code>ssh-keygen -t rsa -C &quot;p0ny233@github.com&quot;</code></p>\n</li>\n<li><p>该命令执行后，会在<code>C:/Users/用户名/</code> 目录下生成 <code>.ssh</code> 文件夹</p>\n</li>\n<li><p>然后将 <code>C:/Users/用户名/.ssh/</code> 目录下的 <strong>所有文件清空</strong> ，继续下面的步骤即可</p>\n</li>\n</ol>\n</blockquote>\n</li>\n<li><p>生成 Github 的钥匙</p>\n<blockquote>\n<p> 命令格式：<code>ssh-keygen -t rsa -f C:/Users/用户名/.ssh/id_rsa.github -C &quot;p0ny233@github.com&quot;</code></p>\n</blockquote>\n</li>\n<li><p>生成 Gitlab 的钥匙</p>\n<blockquote>\n<p> 命令格式：<code>ssh-keygen -t rsa -f C:/Users/用户名/.ssh/id_rsa.gitlab -C &quot;fengyucong@gitlab.com&quot;</code></p>\n</blockquote>\n</li>\n<li><p>生成 Gitee 的钥匙</p>\n<blockquote>\n<p> 命令格式：<code>ssh-keygen -t rsa -f C:/Users/用户名/.ssh/id_rsa.gitee -C &quot;p0ny233@gitee.com&quot;</code></p>\n</blockquote>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"三、多账号必须配置-config-文件-重点\"><a href=\"#三、多账号必须配置-config-文件-重点\" class=\"headerlink\" title=\"三、多账号必须配置 config 文件(重点)\"></a>三、多账号必须配置 config 文件(重点)</h3><blockquote>\n<ol>\n<li>创建 <code>config</code> 文件<br>查看 <code>&quot;C:/Users/用户名/.ssh/</code>  目录下是否存在 <code>config</code> 文件，没有则创建 <img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628681315136-image.png\"><blockquote>\n<p><code>config</code> 文件的内容</p>\n<p><strong>里面的内容不能含有中文【未自测】</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#Default gitHub user Self</span><br><span class=\"line\">Host github.com</span><br><span class=\"line\">    HostName github.com</span><br><span class=\"line\">    User git #默认就是git，可以不写</span><br><span class=\"line\">    IdentityFile  C:/Users/admin/.ssh/id_rsa.github</span><br><span class=\"line\"></span><br><span class=\"line\">#Add gitLab user </span><br><span class=\"line\">    Host 10.11.10.37</span><br><span class=\"line\">    HostName gitlab.com</span><br><span class=\"line\">    User git</span><br><span class=\"line\">    IdentityFile  C:/Users/admin/.ssh/id_rsa.gitlab</span><br><span class=\"line\"></span><br><span class=\"line\"># gitee</span><br><span class=\"line\">Host gitee.com</span><br><span class=\"line\">    Port 22</span><br><span class=\"line\">    HostName gitee.com</span><br><span class=\"line\">    User git</span><br><span class=\"line\">    IdentityFile  C:/Users/admin/.ssh/id_rsa.gitee</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>对 <code>config</code> 文件内容的字段说明：</p>\n<ul>\n<li><p>Host</p>\n<p>涵盖了下面一个段的配置，我们可以通过他来替代将要连接的服务器地址。<br>这里可以使用任意字段或通配符。<br>当ssh的时候如果服务器地址能匹配上这里Host指定的值，则Host下面指定的HostName将被作为最终的服务器地址使用</p>\n</li>\n<li><p>Port </p>\n<p>自定义的端口。默认为22，可不配置</p>\n</li>\n<li><p>User </p>\n<p>自定义的用户名，默认为git，可不配置</p>\n</li>\n<li><p>HostName </p>\n<p>真正连接的服务器地址</p>\n</li>\n<li><p>PreferredAuthentications </p>\n<p>指定优先使用哪种方式验证，支持密码和秘钥验证方式</p>\n</li>\n<li><p>IdentityFile </p>\n<p>指定本次连接使用的密钥文件</p>\n</li>\n</ul>\n</blockquote>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"四、在-github-、-gitlab-和-gitee-网站添加-ssh\"><a href=\"#四、在-github-、-gitlab-和-gitee-网站添加-ssh\" class=\"headerlink\" title=\"四、在 github 、 gitlab 和 gitee 网站添加 ssh\"></a>四、在 github 、 gitlab 和 gitee 网站添加 ssh</h3><blockquote>\n<ol>\n<li>github直达地址：<code>https://github.com/settings/keys</code><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628682745107-image.png\" alt=\"github直达添加key地址\"></li>\n</ol>\n<ol start=\"2\">\n<li><p>将 <code>C:\\Users\\admin\\.ssh\\id_rsa.github.pub</code> 文件的所有内容复制粘贴到 文本框中</p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628683524975-image.png\" alt=\"打开文件\"></p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628683643213-image.png\" alt=\"点击添加\"></p>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"五、在-git-终端测试是否连接成功\"><a href=\"#五、在-git-终端测试是否连接成功\" class=\"headerlink\" title=\"五、在 git 终端测试是否连接成功\"></a>五、在 git 终端测试是否连接成功</h3><blockquote>\n<ol>\n<li><p>由于每个托管商的<strong>仓库</strong>都有唯一的后缀，比如 Github 的是 <a href=\"mailto:&#x67;&#105;&#116;&#64;&#x67;&#105;&#x74;&#104;&#x75;&#x62;&#46;&#x63;&#111;&#109;\">&#x67;&#105;&#116;&#64;&#x67;&#105;&#x74;&#104;&#x75;&#x62;&#46;&#x63;&#111;&#109;</a>:*。<br>所以可以这样测试：<br><code>ssh -T git@github.com</code></p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628683925777-image.png\"></p>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>然后遇到问题【如果没遇到问题则跳过】：<code>git@github.com: Permission denied (publickey).</code></p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628684125655-image.png\"></p>\n<p> 解决方式：</p>\n<blockquote>\n<ol>\n<li>使用命令 <code>ssh-agent bash</code>  </li>\n<li>命令格式 <code>ssh-add C:/Users/用户名/.ssh/id_rsa.平台名称</code> 【<strong>注意路径的斜杠</strong>】<br>我这里的命令是 <code>ssh-add C:/Users/admin/.ssh/id_rsa.github</code><br><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628685369174-image.png\"></li>\n</ol>\n</blockquote>\n</li>\n</ol>\n<ol start=\"3\">\n<li>继续测试<br><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628685567778-image.png\"><br>提示 <code>Hi 用户名! You&#39;ve successfully authenticated, but GitHub does not provide shell access. </code> 说明连接成功</li>\n</ol>\n</blockquote>\n<h3 id=\"六、测试内网-gitlab-连接\"><a href=\"#六、测试内网-gitlab-连接\" class=\"headerlink\" title=\"六、测试内网 gitlab 连接\"></a>六、测试内网 gitlab 连接</h3><blockquote>\n<ol>\n<li>无法使用命令 <code>ssh -T 10.11.10.37</code> 进行测试，会遭到<strong>权限的拒绝</strong></li>\n<li>而且 <code>config</code> 配置文件中的 Host 字段需要指定成 <strong>IP地址</strong> ，否则也会遭到<strong>权限的拒绝</strong></li>\n<li>只能添加 仓库的地址去 <code>pull</code> 下来，才知道是否成功   </li>\n<li>1 复制仓库地址<br>  <img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628689656125-image.png\"></li>\n<li>2 新建一个空文件夹 ，然后打开 git终端使用初始化命令<br>  <code>git init</code>   </li>\n<li>3 使用命令添加刚复制的远程仓库<br><code>git remote add apk git@gitlab.testplus.cn:chenyang6/apk_checker.git</code>  </li>\n<li>4 下载仓库中的代码<br><code>git pull apk master</code> </li>\n</ol>\n</blockquote>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-11/1628689249564-image.png\"></p>\n"},{"title":"Java高级开发之JNI","date":"2021-08-02T09:38:04.000Z","from":null,"url":null,"author":"p0ny","about":null,"avatar":null,"comments":1,"description":"Java高级开发之JNI","sticky":10000,"_content":"### JNI【Java Native Interface】\n>1. 什么是JNI\n>   java本地开发接口，相当于桥梁的作用，一种协议。通过JNI可以让 java 调用 C/C++，或者让C/C++ 来调用 java代码\n\n\n#### JNI 环境配置\n1. 配置 下载 NDK 并且配置其环境\n    \n   ![下载 NDK](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627890447467-image.png)\n   \n   下载完成配置环境变量进 PATH 中\n   ![下载工具](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627890299654-image.png)\n   \n   \n\n\n\n\n1. 创建一个 Helloworld app项目\n2. 在 `com.example.app` 包下创建 JNI类\n   ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627889725728-image.png)\n   \n   `JNI.java`\n   \n   ```java\n   package com.example.app;\n\n    public class JNI {\n    static {\n        System.loadLibrary(\"test_lib\");\n    }\n    /*\n        定义 Navive方法\n     */\n    public static native String sayHello();\n\n   }\n   ```\n   \n   `MainActivity .java`\n   \n   ```java\n   package com.example.app;\n\n    import androidx.appcompat.app.AppCompatActivity;\n\n    import android.os.Bundle;\n\n    public class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        JNI jni = new JNI();\n        System.out.println(jni.sayHello());\n\n        }\n   }\n   ```\n   \n   \n3. 在 `main` 下创建JNI包，在 JNI包下创建 .c 文件，在 app模块根路径下创建 `CMakeLists.txt` 文件\n   \n   ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627890043007-image.png)\n   \n   `Hello.c`\n   ```c\n   /* DO NOT EDIT THIS FILE - it is machine generated */\n    #include <jni.h>\n    #include \"stdio.h\"\n    #include \"stdlib.h\"\n    \n     jstring Java_com_example_app_JNI_sayHello(JNIEnv* env,jobject jobj) {\n         char *text = \"我会简单的 JNI\";\n         return (*env)->NewStringUTF(env, text);\n     }\n   ```\n   \n   `CMakeLists.txt` \n   ```txt\n   # CMake的编译脚本配置文件\n\n    # 1. 标注需要支持的CMake最小版本\n    cmake_minimum_required(VERSION 3.4.1)\n\n    # 2. add_library 定义需要编译的代码库 名称, 类型, 包含的源码\n    add_library(\n                # Sets the name of the library.\n                test_lib\n                # Sets the library as a shared library.\n                SHARED\n            src/main/jni/Hello.c\n    )\n\n    # 3. find_library 定义当前代码库需要依赖的系统或者第三方库文件(可以写多个)\n    find_library(\n            log_lib # 指定要查找的系统库, 给一个名字\n            log     # 真正要查找的liblog.so或者liblog.a\n    )\n\n    # 4. target_link_libraries设置最终编译的目标代码库\n    target_link_libraries(\n            test_lib  # add_library 生成的\n         ${log_lib} # find_library 找到的系统库\n    )\n   ```\n   \n   \n   \n   ![配置](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627890614340-image.png)\n   \n   `build.gradle` 【是app下的根路径，不是项目根路径】\n   ```gradle\n   plugins {\n    id 'com.android.application'\n    }\n\n    android {\n    compileSdkVersion 30\n    buildToolsVersion \"30.0.3\"\n    ndkVersion '22.1.7171670'\n\n    defaultConfig {\n        applicationId \"com.example.app\"\n        minSdkVersion 16\n        targetSdkVersion 30\n        versionCode 1\n        versionName \"1.0\"\n\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n\n        ndk{\n            moduleName \"Hello\" // so文件  lin + moduleName + .so\n            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64' // cpu架构\n        }\n\n\n    }\n\n    externalNativeBuild {\n        cmake {\n            path \"CMakeLists.txt\"\n        }\n    }\n\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n        }\n    }\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n   }\n\n   dependencies {\n\n    implementation 'androidx.appcompat:appcompat:1.3.0'\n    implementation 'com.google.android.material:material:1.4.0'\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\n    testImplementation 'junit:junit:4.+'\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\n   }\n   ```\n   \n   `local.properties`\n   ```properties\n   sdk.dir=D\\:\\\\DevelopKitTools\\\\android_sdk\n    #ndk.dir=D\\:\\\\DevelopKitTools\\\\android_sdk\\\\ndk-bundle\n    ndk.dir=D\\:\\\\DevelopKitTools\\\\android_sdk\\\\ndk\\\\22.1.7171670\n\n   ```\n   \n   `MainActivity.java`\n   \n   ```java\n   package com.example.app;\n\n    import androidx.appcompat.app.AppCompatActivity;\n    import android.os.Bundle;\n    \n    public class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        JNI jni = new JNI();\n        System.out.println(jni.sayHello());\n    }\n   }\n   ```\n   \n   \n   ![效果图](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627890980730-image.png)\n\n\n\n   \n   \n   \n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/Java高级开发之JNI.md","raw":"---\ntitle: Java高级开发之JNI\ndate: 2021-08-02 17:38:04\n# 文章出处名称 #\nfrom:\n# 文章出处链接 #\nurl:\n# 文章作者名称 #\nauthor: p0ny\n# 文章作者签名 #\nabout:\n# 文章作者头像 #\navatar:\n# 是否开启评论 #\ncomments: true\n# 文章标签 #\ntags: java JNI\n# 文章分类 #\ncategories: Java\n# 文章摘要 #\ndescription: Java高级开发之JNI\n# 文章置顶 #\nsticky: 10000\n---\n### JNI【Java Native Interface】\n>1. 什么是JNI\n>   java本地开发接口，相当于桥梁的作用，一种协议。通过JNI可以让 java 调用 C/C++，或者让C/C++ 来调用 java代码\n\n\n#### JNI 环境配置\n1. 配置 下载 NDK 并且配置其环境\n    \n   ![下载 NDK](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627890447467-image.png)\n   \n   下载完成配置环境变量进 PATH 中\n   ![下载工具](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627890299654-image.png)\n   \n   \n\n\n\n\n1. 创建一个 Helloworld app项目\n2. 在 `com.example.app` 包下创建 JNI类\n   ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627889725728-image.png)\n   \n   `JNI.java`\n   \n   ```java\n   package com.example.app;\n\n    public class JNI {\n    static {\n        System.loadLibrary(\"test_lib\");\n    }\n    /*\n        定义 Navive方法\n     */\n    public static native String sayHello();\n\n   }\n   ```\n   \n   `MainActivity .java`\n   \n   ```java\n   package com.example.app;\n\n    import androidx.appcompat.app.AppCompatActivity;\n\n    import android.os.Bundle;\n\n    public class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        JNI jni = new JNI();\n        System.out.println(jni.sayHello());\n\n        }\n   }\n   ```\n   \n   \n3. 在 `main` 下创建JNI包，在 JNI包下创建 .c 文件，在 app模块根路径下创建 `CMakeLists.txt` 文件\n   \n   ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627890043007-image.png)\n   \n   `Hello.c`\n   ```c\n   /* DO NOT EDIT THIS FILE - it is machine generated */\n    #include <jni.h>\n    #include \"stdio.h\"\n    #include \"stdlib.h\"\n    \n     jstring Java_com_example_app_JNI_sayHello(JNIEnv* env,jobject jobj) {\n         char *text = \"我会简单的 JNI\";\n         return (*env)->NewStringUTF(env, text);\n     }\n   ```\n   \n   `CMakeLists.txt` \n   ```txt\n   # CMake的编译脚本配置文件\n\n    # 1. 标注需要支持的CMake最小版本\n    cmake_minimum_required(VERSION 3.4.1)\n\n    # 2. add_library 定义需要编译的代码库 名称, 类型, 包含的源码\n    add_library(\n                # Sets the name of the library.\n                test_lib\n                # Sets the library as a shared library.\n                SHARED\n            src/main/jni/Hello.c\n    )\n\n    # 3. find_library 定义当前代码库需要依赖的系统或者第三方库文件(可以写多个)\n    find_library(\n            log_lib # 指定要查找的系统库, 给一个名字\n            log     # 真正要查找的liblog.so或者liblog.a\n    )\n\n    # 4. target_link_libraries设置最终编译的目标代码库\n    target_link_libraries(\n            test_lib  # add_library 生成的\n         ${log_lib} # find_library 找到的系统库\n    )\n   ```\n   \n   \n   \n   ![配置](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627890614340-image.png)\n   \n   `build.gradle` 【是app下的根路径，不是项目根路径】\n   ```gradle\n   plugins {\n    id 'com.android.application'\n    }\n\n    android {\n    compileSdkVersion 30\n    buildToolsVersion \"30.0.3\"\n    ndkVersion '22.1.7171670'\n\n    defaultConfig {\n        applicationId \"com.example.app\"\n        minSdkVersion 16\n        targetSdkVersion 30\n        versionCode 1\n        versionName \"1.0\"\n\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n\n        ndk{\n            moduleName \"Hello\" // so文件  lin + moduleName + .so\n            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64' // cpu架构\n        }\n\n\n    }\n\n    externalNativeBuild {\n        cmake {\n            path \"CMakeLists.txt\"\n        }\n    }\n\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n        }\n    }\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n   }\n\n   dependencies {\n\n    implementation 'androidx.appcompat:appcompat:1.3.0'\n    implementation 'com.google.android.material:material:1.4.0'\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\n    testImplementation 'junit:junit:4.+'\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\n   }\n   ```\n   \n   `local.properties`\n   ```properties\n   sdk.dir=D\\:\\\\DevelopKitTools\\\\android_sdk\n    #ndk.dir=D\\:\\\\DevelopKitTools\\\\android_sdk\\\\ndk-bundle\n    ndk.dir=D\\:\\\\DevelopKitTools\\\\android_sdk\\\\ndk\\\\22.1.7171670\n\n   ```\n   \n   `MainActivity.java`\n   \n   ```java\n   package com.example.app;\n\n    import androidx.appcompat.app.AppCompatActivity;\n    import android.os.Bundle;\n    \n    public class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        JNI jni = new JNI();\n        System.out.println(jni.sayHello());\n    }\n   }\n   ```\n   \n   \n   ![效果图](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627890980730-image.png)\n\n\n\n   \n   \n   \n   \n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"Java高级开发之JNI","published":1,"updated":"2021-08-02T09:33:05.557Z","layout":"post","photos":[],"link":"","_id":"cks8acfkj000bycvm5bgph6u5","content":"<h3 id=\"JNI【Java-Native-Interface】\"><a href=\"#JNI【Java-Native-Interface】\" class=\"headerlink\" title=\"JNI【Java Native Interface】\"></a>JNI【Java Native Interface】</h3><blockquote>\n<ol>\n<li>什么是JNI<br>java本地开发接口，相当于桥梁的作用，一种协议。通过JNI可以让 java 调用 C/C++，或者让C/C++ 来调用 java代码</li>\n</ol>\n</blockquote>\n<h4 id=\"JNI-环境配置\"><a href=\"#JNI-环境配置\" class=\"headerlink\" title=\"JNI 环境配置\"></a>JNI 环境配置</h4><ol>\n<li>配置 下载 NDK 并且配置其环境<img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627890447467-image.png\" alt=\"下载 NDK\">下载完成配置环境变量进 PATH 中<br><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627890299654-image.png\" alt=\"下载工具\"></li>\n</ol>\n<ol>\n<li>创建一个 Helloworld app项目</li>\n<li>在 <code>com.example.app</code> 包下创建 JNI类<br><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627889725728-image.png\"><code>JNI.java</code><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.example.app;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JNI</span> </span>&#123;</span><br><span class=\"line\"> <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">     System.loadLibrary(<span class=\"string\">&quot;test_lib&quot;</span>);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     定义 Navive方法</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">native</span> String <span class=\"title\">sayHello</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<code>MainActivity .java</code><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.example.app;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">import</span> android.os.Bundle;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"meta\">@Override</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">     setContentView(R.layout.activity_main);</span><br><span class=\"line\">     JNI jni = <span class=\"keyword\">new</span> JNI();</span><br><span class=\"line\">     System.out.println(jni.sayHello());</span><br><span class=\"line\"></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>在 <code>main</code> 下创建JNI包，在 JNI包下创建 .c 文件，在 app模块根路径下创建 <code>CMakeLists.txt</code> 文件<img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627890043007-image.png\"><code>Hello.c</code><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* DO NOT EDIT THIS FILE - it is machine generated */</span></span><br><span class=\"line\"> <span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;jni.h&gt;</span></span></span><br><span class=\"line\"> <span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&quot;stdio.h&quot;</span></span></span><br><span class=\"line\"> <span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&quot;stdlib.h&quot;</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"function\">jstring <span class=\"title\">Java_com_example_app_JNI_sayHello</span><span class=\"params\">(JNIEnv* env,jobject jobj)</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">char</span> *text = <span class=\"string\">&quot;我会简单的 JNI&quot;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> (*env)-&gt;NewStringUTF(env, text);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<code>CMakeLists.txt</code> <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># CMake的编译脚本配置文件</span><br><span class=\"line\"></span><br><span class=\"line\"> # 1. 标注需要支持的CMake最小版本</span><br><span class=\"line\"> cmake_minimum_required(VERSION 3.4.1)</span><br><span class=\"line\"></span><br><span class=\"line\"> # 2. add_library 定义需要编译的代码库 名称, 类型, 包含的源码</span><br><span class=\"line\"> add_library(</span><br><span class=\"line\">             # Sets the name of the library.</span><br><span class=\"line\">             test_lib</span><br><span class=\"line\">             # Sets the library as a shared library.</span><br><span class=\"line\">             SHARED</span><br><span class=\"line\">         src/main/jni/Hello.c</span><br><span class=\"line\"> )</span><br><span class=\"line\"></span><br><span class=\"line\"> # 3. find_library 定义当前代码库需要依赖的系统或者第三方库文件(可以写多个)</span><br><span class=\"line\"> find_library(</span><br><span class=\"line\">         log_lib # 指定要查找的系统库, 给一个名字</span><br><span class=\"line\">         log     # 真正要查找的liblog.so或者liblog.a</span><br><span class=\"line\"> )</span><br><span class=\"line\"></span><br><span class=\"line\"> # 4. target_link_libraries设置最终编译的目标代码库</span><br><span class=\"line\"> target_link_libraries(</span><br><span class=\"line\">         test_lib  # add_library 生成的</span><br><span class=\"line\">      $&#123;log_lib&#125; # find_library 找到的系统库</span><br><span class=\"line\"> )</span><br></pre></td></tr></table></figure>\n\n\n\n<img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627890614340-image.png\" alt=\"配置\"><code>build.gradle</code> 【是app下的根路径，不是项目根路径】<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins &#123;</span><br><span class=\"line\"> id <span class=\"string\">&#x27;com.android.application&#x27;</span></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> android &#123;</span><br><span class=\"line\"> compileSdkVersion <span class=\"number\">30</span></span><br><span class=\"line\"> buildToolsVersion <span class=\"string\">&quot;30.0.3&quot;</span></span><br><span class=\"line\"> ndkVersion <span class=\"string\">&#x27;22.1.7171670&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> defaultConfig &#123;</span><br><span class=\"line\">     applicationId <span class=\"string\">&quot;com.example.app&quot;</span></span><br><span class=\"line\">     minSdkVersion <span class=\"number\">16</span></span><br><span class=\"line\">     targetSdkVersion <span class=\"number\">30</span></span><br><span class=\"line\">     versionCode <span class=\"number\">1</span></span><br><span class=\"line\">     versionName <span class=\"string\">&quot;1.0&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">     testInstrumentationRunner <span class=\"string\">&quot;androidx.test.runner.AndroidJUnitRunner&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">     ndk&#123;</span><br><span class=\"line\">         moduleName <span class=\"string\">&quot;Hello&quot;</span> <span class=\"comment\">// so文件  lin + moduleName + .so</span></span><br><span class=\"line\">         abiFilters <span class=\"string\">&#x27;armeabi-v7a&#x27;</span>, <span class=\"string\">&#x27;arm64-v8a&#x27;</span>, <span class=\"string\">&#x27;x86&#x27;</span>, <span class=\"string\">&#x27;x86_64&#x27;</span> <span class=\"comment\">// cpu架构</span></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> externalNativeBuild &#123;</span><br><span class=\"line\">     cmake &#123;</span><br><span class=\"line\">         path <span class=\"string\">&quot;CMakeLists.txt&quot;</span></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> buildTypes &#123;</span><br><span class=\"line\">     release &#123;</span><br><span class=\"line\">         minifyEnabled <span class=\"keyword\">false</span></span><br><span class=\"line\">         proguardFiles getDefaultProguardFile(<span class=\"string\">&#x27;proguard-android-optimize.txt&#x27;</span>), <span class=\"string\">&#x27;proguard-rules.pro&#x27;</span></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> compileOptions &#123;</span><br><span class=\"line\">     <span class=\"keyword\">sourceCompatibility</span> JavaVersion.VERSION_1_8</span><br><span class=\"line\">     <span class=\"keyword\">targetCompatibility</span> JavaVersion.VERSION_1_8</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"> implementation <span class=\"string\">&#x27;androidx.appcompat:appcompat:1.3.0&#x27;</span></span><br><span class=\"line\"> implementation <span class=\"string\">&#x27;com.google.android.material:material:1.4.0&#x27;</span></span><br><span class=\"line\"> implementation <span class=\"string\">&#x27;androidx.constraintlayout:constraintlayout:2.0.4&#x27;</span></span><br><span class=\"line\"> testImplementation <span class=\"string\">&#x27;junit:junit:4.+&#x27;</span></span><br><span class=\"line\"> androidTestImplementation <span class=\"string\">&#x27;androidx.test.ext:junit:1.1.3&#x27;</span></span><br><span class=\"line\"> androidTestImplementation <span class=\"string\">&#x27;androidx.test.espresso:espresso-core:3.4.0&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<code>local.properties</code><figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">sdk.dir</span>=<span class=\"string\">D\\:\\\\DevelopKitTools\\\\android_sdk</span></span><br><span class=\"line\"><span class=\"comment\"> #ndk.dir=D\\:\\\\DevelopKitTools\\\\android_sdk\\\\ndk-bundle</span></span><br><span class=\"line\"> <span class=\"meta\">ndk.dir</span>=<span class=\"string\">D\\:\\\\DevelopKitTools\\\\android_sdk\\\\ndk\\\\22.1.7171670</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<code>MainActivity.java</code><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.example.app;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class=\"line\"> <span class=\"keyword\">import</span> android.os.Bundle;</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"meta\">@Override</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">     setContentView(R.layout.activity_main);</span><br><span class=\"line\">     JNI jni = <span class=\"keyword\">new</span> JNI();</span><br><span class=\"line\">     System.out.println(jni.sayHello());</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627890980730-image.png\" alt=\"效果图\"></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"JNI【Java-Native-Interface】\"><a href=\"#JNI【Java-Native-Interface】\" class=\"headerlink\" title=\"JNI【Java Native Interface】\"></a>JNI【Java Native Interface】</h3><blockquote>\n<ol>\n<li>什么是JNI<br>java本地开发接口，相当于桥梁的作用，一种协议。通过JNI可以让 java 调用 C/C++，或者让C/C++ 来调用 java代码</li>\n</ol>\n</blockquote>\n<h4 id=\"JNI-环境配置\"><a href=\"#JNI-环境配置\" class=\"headerlink\" title=\"JNI 环境配置\"></a>JNI 环境配置</h4><ol>\n<li>配置 下载 NDK 并且配置其环境<img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627890447467-image.png\" alt=\"下载 NDK\">下载完成配置环境变量进 PATH 中<br><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627890299654-image.png\" alt=\"下载工具\"></li>\n</ol>\n<ol>\n<li>创建一个 Helloworld app项目</li>\n<li>在 <code>com.example.app</code> 包下创建 JNI类<br><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627889725728-image.png\"><code>JNI.java</code><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.example.app;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JNI</span> </span>&#123;</span><br><span class=\"line\"> <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">     System.loadLibrary(<span class=\"string\">&quot;test_lib&quot;</span>);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     定义 Navive方法</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">native</span> String <span class=\"title\">sayHello</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<code>MainActivity .java</code><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.example.app;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">import</span> android.os.Bundle;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"meta\">@Override</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">     setContentView(R.layout.activity_main);</span><br><span class=\"line\">     JNI jni = <span class=\"keyword\">new</span> JNI();</span><br><span class=\"line\">     System.out.println(jni.sayHello());</span><br><span class=\"line\"></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li>在 <code>main</code> 下创建JNI包，在 JNI包下创建 .c 文件，在 app模块根路径下创建 <code>CMakeLists.txt</code> 文件<img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627890043007-image.png\"><code>Hello.c</code><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* DO NOT EDIT THIS FILE - it is machine generated */</span></span><br><span class=\"line\"> <span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;jni.h&gt;</span></span></span><br><span class=\"line\"> <span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&quot;stdio.h&quot;</span></span></span><br><span class=\"line\"> <span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&quot;stdlib.h&quot;</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"function\">jstring <span class=\"title\">Java_com_example_app_JNI_sayHello</span><span class=\"params\">(JNIEnv* env,jobject jobj)</span> </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">char</span> *text = <span class=\"string\">&quot;我会简单的 JNI&quot;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> (*env)-&gt;NewStringUTF(env, text);</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<code>CMakeLists.txt</code> <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># CMake的编译脚本配置文件</span><br><span class=\"line\"></span><br><span class=\"line\"> # 1. 标注需要支持的CMake最小版本</span><br><span class=\"line\"> cmake_minimum_required(VERSION 3.4.1)</span><br><span class=\"line\"></span><br><span class=\"line\"> # 2. add_library 定义需要编译的代码库 名称, 类型, 包含的源码</span><br><span class=\"line\"> add_library(</span><br><span class=\"line\">             # Sets the name of the library.</span><br><span class=\"line\">             test_lib</span><br><span class=\"line\">             # Sets the library as a shared library.</span><br><span class=\"line\">             SHARED</span><br><span class=\"line\">         src/main/jni/Hello.c</span><br><span class=\"line\"> )</span><br><span class=\"line\"></span><br><span class=\"line\"> # 3. find_library 定义当前代码库需要依赖的系统或者第三方库文件(可以写多个)</span><br><span class=\"line\"> find_library(</span><br><span class=\"line\">         log_lib # 指定要查找的系统库, 给一个名字</span><br><span class=\"line\">         log     # 真正要查找的liblog.so或者liblog.a</span><br><span class=\"line\"> )</span><br><span class=\"line\"></span><br><span class=\"line\"> # 4. target_link_libraries设置最终编译的目标代码库</span><br><span class=\"line\"> target_link_libraries(</span><br><span class=\"line\">         test_lib  # add_library 生成的</span><br><span class=\"line\">      $&#123;log_lib&#125; # find_library 找到的系统库</span><br><span class=\"line\"> )</span><br></pre></td></tr></table></figure>\n\n\n\n<img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627890614340-image.png\" alt=\"配置\"><code>build.gradle</code> 【是app下的根路径，不是项目根路径】<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins &#123;</span><br><span class=\"line\"> id <span class=\"string\">&#x27;com.android.application&#x27;</span></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> android &#123;</span><br><span class=\"line\"> compileSdkVersion <span class=\"number\">30</span></span><br><span class=\"line\"> buildToolsVersion <span class=\"string\">&quot;30.0.3&quot;</span></span><br><span class=\"line\"> ndkVersion <span class=\"string\">&#x27;22.1.7171670&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> defaultConfig &#123;</span><br><span class=\"line\">     applicationId <span class=\"string\">&quot;com.example.app&quot;</span></span><br><span class=\"line\">     minSdkVersion <span class=\"number\">16</span></span><br><span class=\"line\">     targetSdkVersion <span class=\"number\">30</span></span><br><span class=\"line\">     versionCode <span class=\"number\">1</span></span><br><span class=\"line\">     versionName <span class=\"string\">&quot;1.0&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">     testInstrumentationRunner <span class=\"string\">&quot;androidx.test.runner.AndroidJUnitRunner&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">     ndk&#123;</span><br><span class=\"line\">         moduleName <span class=\"string\">&quot;Hello&quot;</span> <span class=\"comment\">// so文件  lin + moduleName + .so</span></span><br><span class=\"line\">         abiFilters <span class=\"string\">&#x27;armeabi-v7a&#x27;</span>, <span class=\"string\">&#x27;arm64-v8a&#x27;</span>, <span class=\"string\">&#x27;x86&#x27;</span>, <span class=\"string\">&#x27;x86_64&#x27;</span> <span class=\"comment\">// cpu架构</span></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> externalNativeBuild &#123;</span><br><span class=\"line\">     cmake &#123;</span><br><span class=\"line\">         path <span class=\"string\">&quot;CMakeLists.txt&quot;</span></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> buildTypes &#123;</span><br><span class=\"line\">     release &#123;</span><br><span class=\"line\">         minifyEnabled <span class=\"keyword\">false</span></span><br><span class=\"line\">         proguardFiles getDefaultProguardFile(<span class=\"string\">&#x27;proguard-android-optimize.txt&#x27;</span>), <span class=\"string\">&#x27;proguard-rules.pro&#x27;</span></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> compileOptions &#123;</span><br><span class=\"line\">     <span class=\"keyword\">sourceCompatibility</span> JavaVersion.VERSION_1_8</span><br><span class=\"line\">     <span class=\"keyword\">targetCompatibility</span> JavaVersion.VERSION_1_8</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"> implementation <span class=\"string\">&#x27;androidx.appcompat:appcompat:1.3.0&#x27;</span></span><br><span class=\"line\"> implementation <span class=\"string\">&#x27;com.google.android.material:material:1.4.0&#x27;</span></span><br><span class=\"line\"> implementation <span class=\"string\">&#x27;androidx.constraintlayout:constraintlayout:2.0.4&#x27;</span></span><br><span class=\"line\"> testImplementation <span class=\"string\">&#x27;junit:junit:4.+&#x27;</span></span><br><span class=\"line\"> androidTestImplementation <span class=\"string\">&#x27;androidx.test.ext:junit:1.1.3&#x27;</span></span><br><span class=\"line\"> androidTestImplementation <span class=\"string\">&#x27;androidx.test.espresso:espresso-core:3.4.0&#x27;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<code>local.properties</code><figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">sdk.dir</span>=<span class=\"string\">D\\:\\\\DevelopKitTools\\\\android_sdk</span></span><br><span class=\"line\"><span class=\"comment\"> #ndk.dir=D\\:\\\\DevelopKitTools\\\\android_sdk\\\\ndk-bundle</span></span><br><span class=\"line\"> <span class=\"meta\">ndk.dir</span>=<span class=\"string\">D\\:\\\\DevelopKitTools\\\\android_sdk\\\\ndk\\\\22.1.7171670</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<code>MainActivity.java</code><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.example.app;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class=\"line\"> <span class=\"keyword\">import</span> android.os.Bundle;</span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"meta\">@Override</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">     setContentView(R.layout.activity_main);</span><br><span class=\"line\">     JNI jni = <span class=\"keyword\">new</span> JNI();</span><br><span class=\"line\">     System.out.println(jni.sayHello());</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-2/1627890980730-image.png\" alt=\"效果图\"></li>\n</ol>\n"},{"title":"Linux使用MySQL5.7 过程出现的问题","date":"2021-02-16T08:23:36.000Z","from":"原创","url":null,"author":"p0ny","about":"一穷二白","avatar":null,"comments":1,"description":"Linux使用MySQL5.7 过程出现的问题","sticky":1,"_content":"# Linux使用MySQL5.7 过程出现的问题\n1. 执行修改密码命令  \n`alter user user() identified by 'root';`  \n或者  \n`set password for root@localhost = password('root');`   \n\n    出现错误信息  \n    `ERROR 1819 (HY000): Your password does not satisfy the current policy requirements\n    `\n    \n    信息上说明设置的密码是弱级别的，需要提高密码强度。\n\n    \n   **解决：**\n    -  将安全级别设置为 `LOW` ,如果向将密码设置为 `root` ,那么还需要更改密码长度\n    \n        【**默认密码长度为8**，可以设置为其它值，最小4位】  \n        设置安全级别：\n        `set global validate_password_policy=LOW;`  \n        \n        更改密码默认长度： \n        `set global validate_password_length=4;`\n        \n        执行以上两条命令之后就可以将密码设置为 **长度为4 的弱密码 比如 root**\n        \n\n\n2. 安装MySQL数据库之后使用命令 `mysql -uroot -p` 让你输入，但是不知道密码怎么办？  \n    - **方式 1.** 可直接跳过密码进行登陆   \n      1. 修改 `vi /etc/my.cnf` 文件\n      2. 在该文件下的 **[mysqld]模块** 添加以下代码  \n      `skip-grant-tables# 忽略mysql权限问题，直接登录`  \n      如图：\n      \n          ![绕过密码登陆](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621832433778-image.png)\n          \n          然后执行命令 `systemctl restart mysqld` 重启mysql服务\n      再次执行`mysql-uroot -p` 回车  \n      然后提示**输入密码的时候直接敲回车**即可\n      \n    - **方式 2.** 查看默认初始密码  \n    \n        **注意：**：【如果是第一次安装MySQL可以忽略】之前有安装过MySQL数据库并且再次安装MySQL的数据库的需要先将 `/var/log/mysqld.log` 这个文件删除  \n        **总之就是需要保证没有这个文件 `/var/log/mysqld.log`**\n    \n        然后启动MySQL服务`systemctl start mysqld` \n        此时就会生成此文件 `/var/log/mysqld.log`  \n        然后执行命令 `grep 'temporary password' /var/log/mysqld.log`  \n        就可以看到如图所示的内容：\n    \n        ![显示默认密码](https://imgkr2.cn-bj.ufileos.com/33c2adc2-ab99-409d-8e64-18c4f86393fa.png?UCloudPublicKey=TOKEN_8d8b72be-579a-4e83-bfd0-5f6ce1546f13&Signature=%252BA5dfGEoYYfEDezpdgfIpHqho5w%253D&Expires=1613549719)\n\n        `mZk=kau!p0Zq` 就是默认密码，使用命令`mysql -uroot -p`,提示输入登陆密码的时候再输入该默认密码，即可登陆成功\n","source":"_posts/Linux使用MySQL5-7-过程出现的问题.md","raw":"---\ntitle: Linux使用MySQL5.7 过程出现的问题\ndate: 2021-02-16 16:23:36\n# 文章出处名称 #\nfrom: 原创\n# 文章出处链接 #\nurl:\n# 文章作者名称 #\nauthor: p0ny\n# 文章作者签名 #\nabout: 一穷二白\n# 文章作者头像 #\navatar:\n# 是否开启评论 #\ncomments: true\n# 文章标签 #\ntags: MySQL\n# 文章分类 #\ncategories: 数据库\n# 文章摘要 #\ndescription: Linux使用MySQL5.7 过程出现的问题\n# 文章置顶 #\nsticky: 1\n---\n# Linux使用MySQL5.7 过程出现的问题\n1. 执行修改密码命令  \n`alter user user() identified by 'root';`  \n或者  \n`set password for root@localhost = password('root');`   \n\n    出现错误信息  \n    `ERROR 1819 (HY000): Your password does not satisfy the current policy requirements\n    `\n    \n    信息上说明设置的密码是弱级别的，需要提高密码强度。\n\n    \n   **解决：**\n    -  将安全级别设置为 `LOW` ,如果向将密码设置为 `root` ,那么还需要更改密码长度\n    \n        【**默认密码长度为8**，可以设置为其它值，最小4位】  \n        设置安全级别：\n        `set global validate_password_policy=LOW;`  \n        \n        更改密码默认长度： \n        `set global validate_password_length=4;`\n        \n        执行以上两条命令之后就可以将密码设置为 **长度为4 的弱密码 比如 root**\n        \n\n\n2. 安装MySQL数据库之后使用命令 `mysql -uroot -p` 让你输入，但是不知道密码怎么办？  \n    - **方式 1.** 可直接跳过密码进行登陆   \n      1. 修改 `vi /etc/my.cnf` 文件\n      2. 在该文件下的 **[mysqld]模块** 添加以下代码  \n      `skip-grant-tables# 忽略mysql权限问题，直接登录`  \n      如图：\n      \n          ![绕过密码登陆](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621832433778-image.png)\n          \n          然后执行命令 `systemctl restart mysqld` 重启mysql服务\n      再次执行`mysql-uroot -p` 回车  \n      然后提示**输入密码的时候直接敲回车**即可\n      \n    - **方式 2.** 查看默认初始密码  \n    \n        **注意：**：【如果是第一次安装MySQL可以忽略】之前有安装过MySQL数据库并且再次安装MySQL的数据库的需要先将 `/var/log/mysqld.log` 这个文件删除  \n        **总之就是需要保证没有这个文件 `/var/log/mysqld.log`**\n    \n        然后启动MySQL服务`systemctl start mysqld` \n        此时就会生成此文件 `/var/log/mysqld.log`  \n        然后执行命令 `grep 'temporary password' /var/log/mysqld.log`  \n        就可以看到如图所示的内容：\n    \n        ![显示默认密码](https://imgkr2.cn-bj.ufileos.com/33c2adc2-ab99-409d-8e64-18c4f86393fa.png?UCloudPublicKey=TOKEN_8d8b72be-579a-4e83-bfd0-5f6ce1546f13&Signature=%252BA5dfGEoYYfEDezpdgfIpHqho5w%253D&Expires=1613549719)\n\n        `mZk=kau!p0Zq` 就是默认密码，使用命令`mysql -uroot -p`,提示输入登陆密码的时候再输入该默认密码，即可登陆成功\n","slug":"Linux使用MySQL5-7-过程出现的问题","published":1,"updated":"2021-06-01T01:09:14.073Z","layout":"post","photos":[],"link":"","_id":"cks8acfkm000gycvma9ls8vxa","content":"<h1 id=\"Linux使用MySQL5-7-过程出现的问题\"><a href=\"#Linux使用MySQL5-7-过程出现的问题\" class=\"headerlink\" title=\"Linux使用MySQL5.7 过程出现的问题\"></a>Linux使用MySQL5.7 过程出现的问题</h1><ol>\n<li><p>执行修改密码命令<br><code>alter user user() identified by &#39;root&#39;;</code><br>或者<br><code>set password for root@localhost = password(&#39;root&#39;);</code>   </p>\n<p> 出现错误信息<br> <code>ERROR 1819 (HY000): Your password does not satisfy the current policy requirements  </code></p>\n<p> 信息上说明设置的密码是弱级别的，需要提高密码强度。</p>\n<p><strong>解决：</strong></p>\n<ul>\n<li>将安全级别设置为 <code>LOW</code> ,如果向将密码设置为 <code>root</code> ,那么还需要更改密码长度  【<strong>默认密码长度为8</strong>，可以设置为其它值，最小4位】<br>  设置安全级别：<br>  <code>set global validate_password_policy=LOW;</code>    更改密码默认长度：<br>  <code>set global validate_password_length=4;</code>  执行以上两条命令之后就可以将密码设置为 <strong>长度为4 的弱密码 比如 root</strong></li>\n</ul>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>安装MySQL数据库之后使用命令 <code>mysql -uroot -p</code> 让你输入，但是不知道密码怎么办？  </p>\n<ul>\n<li><p><strong>方式 1.</strong> 可直接跳过密码进行登陆   </p>\n<ol>\n<li><p>修改 <code>vi /etc/my.cnf</code> 文件</p>\n</li>\n<li><p>在该文件下的 <strong>[mysqld]模块</strong> 添加以下代码<br><code>skip-grant-tables# 忽略mysql权限问题，直接登录</code><br>如图：</p>\n<p> <img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621832433778-image.png\" alt=\"绕过密码登陆\"></p>\n<p> 然后执行命令 <code>systemctl restart mysqld</code> 重启mysql服务<br>再次执行<code>mysql-uroot -p</code> 回车<br>然后提示<strong>输入密码的时候直接敲回车</strong>即可</p>\n</li>\n</ol>\n</li>\n<li><p><strong>方式 2.</strong> 查看默认初始密码  </p>\n<p>  <strong>注意：</strong>：【如果是第一次安装MySQL可以忽略】之前有安装过MySQL数据库并且再次安装MySQL的数据库的需要先将 <code>/var/log/mysqld.log</code> 这个文件删除<br>  <strong>总之就是需要保证没有这个文件 <code>/var/log/mysqld.log</code></strong></p>\n<p>  然后启动MySQL服务<code>systemctl start mysqld</code><br>  此时就会生成此文件 <code>/var/log/mysqld.log</code><br>  然后执行命令 <code>grep &#39;temporary password&#39; /var/log/mysqld.log</code><br>  就可以看到如图所示的内容：</p>\n<p>  <img src=\"https://imgkr2.cn-bj.ufileos.com/33c2adc2-ab99-409d-8e64-18c4f86393fa.png?UCloudPublicKey=TOKEN_8d8b72be-579a-4e83-bfd0-5f6ce1546f13&Signature=%252BA5dfGEoYYfEDezpdgfIpHqho5w%253D&Expires=1613549719\" alt=\"显示默认密码\"></p>\n<p>  <code>mZk=kau!p0Zq</code> 就是默认密码，使用命令<code>mysql -uroot -p</code>,提示输入登陆密码的时候再输入该默认密码，即可登陆成功</p>\n</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Linux使用MySQL5-7-过程出现的问题\"><a href=\"#Linux使用MySQL5-7-过程出现的问题\" class=\"headerlink\" title=\"Linux使用MySQL5.7 过程出现的问题\"></a>Linux使用MySQL5.7 过程出现的问题</h1><ol>\n<li><p>执行修改密码命令<br><code>alter user user() identified by &#39;root&#39;;</code><br>或者<br><code>set password for root@localhost = password(&#39;root&#39;);</code>   </p>\n<p> 出现错误信息<br> <code>ERROR 1819 (HY000): Your password does not satisfy the current policy requirements  </code></p>\n<p> 信息上说明设置的密码是弱级别的，需要提高密码强度。</p>\n<p><strong>解决：</strong></p>\n<ul>\n<li>将安全级别设置为 <code>LOW</code> ,如果向将密码设置为 <code>root</code> ,那么还需要更改密码长度  【<strong>默认密码长度为8</strong>，可以设置为其它值，最小4位】<br>  设置安全级别：<br>  <code>set global validate_password_policy=LOW;</code>    更改密码默认长度：<br>  <code>set global validate_password_length=4;</code>  执行以上两条命令之后就可以将密码设置为 <strong>长度为4 的弱密码 比如 root</strong></li>\n</ul>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>安装MySQL数据库之后使用命令 <code>mysql -uroot -p</code> 让你输入，但是不知道密码怎么办？  </p>\n<ul>\n<li><p><strong>方式 1.</strong> 可直接跳过密码进行登陆   </p>\n<ol>\n<li><p>修改 <code>vi /etc/my.cnf</code> 文件</p>\n</li>\n<li><p>在该文件下的 <strong>[mysqld]模块</strong> 添加以下代码<br><code>skip-grant-tables# 忽略mysql权限问题，直接登录</code><br>如图：</p>\n<p> <img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-24/1621832433778-image.png\" alt=\"绕过密码登陆\"></p>\n<p> 然后执行命令 <code>systemctl restart mysqld</code> 重启mysql服务<br>再次执行<code>mysql-uroot -p</code> 回车<br>然后提示<strong>输入密码的时候直接敲回车</strong>即可</p>\n</li>\n</ol>\n</li>\n<li><p><strong>方式 2.</strong> 查看默认初始密码  </p>\n<p>  <strong>注意：</strong>：【如果是第一次安装MySQL可以忽略】之前有安装过MySQL数据库并且再次安装MySQL的数据库的需要先将 <code>/var/log/mysqld.log</code> 这个文件删除<br>  <strong>总之就是需要保证没有这个文件 <code>/var/log/mysqld.log</code></strong></p>\n<p>  然后启动MySQL服务<code>systemctl start mysqld</code><br>  此时就会生成此文件 <code>/var/log/mysqld.log</code><br>  然后执行命令 <code>grep &#39;temporary password&#39; /var/log/mysqld.log</code><br>  就可以看到如图所示的内容：</p>\n<p>  <img src=\"https://imgkr2.cn-bj.ufileos.com/33c2adc2-ab99-409d-8e64-18c4f86393fa.png?UCloudPublicKey=TOKEN_8d8b72be-579a-4e83-bfd0-5f6ce1546f13&Signature=%252BA5dfGEoYYfEDezpdgfIpHqho5w%253D&Expires=1613549719\" alt=\"显示默认密码\"></p>\n<p>  <code>mZk=kau!p0Zq</code> 就是默认密码，使用命令<code>mysql -uroot -p</code>,提示输入登陆密码的时候再输入该默认密码，即可登陆成功</p>\n</li>\n</ul>\n</li>\n</ol>\n"},{"title":"Python 解压缩文件【只能压缩文件夹】","date":"2021-05-29T09:28:19.000Z","from":"原创","url":null,"author":"p0ny","about":"一穷二白","avatar":null,"comments":1,"description":"Python_解压缩文件【只能压缩文件夹】","sticky":1,"_content":"### Python 压缩文件夹，解压文件\n```python\nimport shutil\n\n\"\"\"\nbase_name : 压缩后的压缩文件名\nformat : 压缩格式：如：`zip`, `tar`, `gztar`, `bztar`, or `xztar`\nroot_dir : 要压缩哪个文件夹就选哪个文件夹 【只能是文件夹，不可以是文件，否则会 抛出 NotADirectoryError】 \n\"\"\"\n\n# 压缩文件\nshutil.make_archive('2',format='zip',root_dir='./Analyse')\n# 第一个参数是 base_name\n# 第二个参数是 format\n# 第三个参数是 root_dir\n\nprint(\"压缩完成\")\n\n\n\n# 解压文件\n\"\"\"\nfilename：压缩包文件\n\nextract_dir：是目标目录的名称，其中包含存档文件，打开包装。如果未提供，则使用当前工作目录,\n \nformat：是压缩包格式，如果没有提供那么会根据文件扩展名进行解压\n\"\"\"\n\nshutil.unpack_archive('2.zip',extract_dir='2')\n# 会将压缩包的内容解压出来，然后放进一个名称为 2 的文件夹中，\n# 如果没有给extract_dir提供，那么会从压缩包中拿出放到当前目录下\n# 建议给 extract_dir 提供存放的目录\n\nprint(\"解压成功\")\n```\n\n\n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-29/1622280481947-image.png)\n","source":"_posts/Python 解压缩文件【只能压缩文件夹】.md","raw":"---\ntitle: Python 解压缩文件【只能压缩文件夹】\ndate: 2021-05-29 17:28:19\n# 文章出处名称 #\nfrom: 原创\n# 文章出处链接 #\nurl:\n# 文章作者名称 #\nauthor: p0ny\n# 文章作者签名 #\nabout: 一穷二白\n# 文章作者头像 #\navatar: \n# 是否开启评论 #\ncomments: true\n# 文章标签 #\ntags: Python\n# 文章分类 #\ncategories: Python\n# 文章摘要 #\ndescription: Python_解压缩文件【只能压缩文件夹】\n# 文章置顶 #\nsticky: 1\n---\n### Python 压缩文件夹，解压文件\n```python\nimport shutil\n\n\"\"\"\nbase_name : 压缩后的压缩文件名\nformat : 压缩格式：如：`zip`, `tar`, `gztar`, `bztar`, or `xztar`\nroot_dir : 要压缩哪个文件夹就选哪个文件夹 【只能是文件夹，不可以是文件，否则会 抛出 NotADirectoryError】 \n\"\"\"\n\n# 压缩文件\nshutil.make_archive('2',format='zip',root_dir='./Analyse')\n# 第一个参数是 base_name\n# 第二个参数是 format\n# 第三个参数是 root_dir\n\nprint(\"压缩完成\")\n\n\n\n# 解压文件\n\"\"\"\nfilename：压缩包文件\n\nextract_dir：是目标目录的名称，其中包含存档文件，打开包装。如果未提供，则使用当前工作目录,\n \nformat：是压缩包格式，如果没有提供那么会根据文件扩展名进行解压\n\"\"\"\n\nshutil.unpack_archive('2.zip',extract_dir='2')\n# 会将压缩包的内容解压出来，然后放进一个名称为 2 的文件夹中，\n# 如果没有给extract_dir提供，那么会从压缩包中拿出放到当前目录下\n# 建议给 extract_dir 提供存放的目录\n\nprint(\"解压成功\")\n```\n\n\n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-29/1622280481947-image.png)\n","slug":"Python 解压缩文件【只能压缩文件夹】","published":1,"updated":"2021-06-01T01:09:14.074Z","layout":"post","photos":[],"link":"","_id":"cks8acfko000hycvm94j5fscx","content":"<h3 id=\"Python-压缩文件夹，解压文件\"><a href=\"#Python-压缩文件夹，解压文件\" class=\"headerlink\" title=\"Python 压缩文件夹，解压文件\"></a>Python 压缩文件夹，解压文件</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> shutil</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">base_name : 压缩后的压缩文件名</span></span><br><span class=\"line\"><span class=\"string\">format : 压缩格式：如：`zip`, `tar`, `gztar`, `bztar`, or `xztar`</span></span><br><span class=\"line\"><span class=\"string\">root_dir : 要压缩哪个文件夹就选哪个文件夹 【只能是文件夹，不可以是文件，否则会 抛出 NotADirectoryError】 </span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 压缩文件</span></span><br><span class=\"line\">shutil.make_archive(<span class=\"string\">&#x27;2&#x27;</span>,<span class=\"built_in\">format</span>=<span class=\"string\">&#x27;zip&#x27;</span>,root_dir=<span class=\"string\">&#x27;./Analyse&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 第一个参数是 base_name</span></span><br><span class=\"line\"><span class=\"comment\"># 第二个参数是 format</span></span><br><span class=\"line\"><span class=\"comment\"># 第三个参数是 root_dir</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;压缩完成&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压文件</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">filename：压缩包文件</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">extract_dir：是目标目录的名称，其中包含存档文件，打开包装。如果未提供，则使用当前工作目录,</span></span><br><span class=\"line\"><span class=\"string\"> </span></span><br><span class=\"line\"><span class=\"string\">format：是压缩包格式，如果没有提供那么会根据文件扩展名进行解压</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">shutil.unpack_archive(<span class=\"string\">&#x27;2.zip&#x27;</span>,extract_dir=<span class=\"string\">&#x27;2&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 会将压缩包的内容解压出来，然后放进一个名称为 2 的文件夹中，</span></span><br><span class=\"line\"><span class=\"comment\"># 如果没有给extract_dir提供，那么会从压缩包中拿出放到当前目录下</span></span><br><span class=\"line\"><span class=\"comment\"># 建议给 extract_dir 提供存放的目录</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;解压成功&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-29/1622280481947-image.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"Python-压缩文件夹，解压文件\"><a href=\"#Python-压缩文件夹，解压文件\" class=\"headerlink\" title=\"Python 压缩文件夹，解压文件\"></a>Python 压缩文件夹，解压文件</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> shutil</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">base_name : 压缩后的压缩文件名</span></span><br><span class=\"line\"><span class=\"string\">format : 压缩格式：如：`zip`, `tar`, `gztar`, `bztar`, or `xztar`</span></span><br><span class=\"line\"><span class=\"string\">root_dir : 要压缩哪个文件夹就选哪个文件夹 【只能是文件夹，不可以是文件，否则会 抛出 NotADirectoryError】 </span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 压缩文件</span></span><br><span class=\"line\">shutil.make_archive(<span class=\"string\">&#x27;2&#x27;</span>,<span class=\"built_in\">format</span>=<span class=\"string\">&#x27;zip&#x27;</span>,root_dir=<span class=\"string\">&#x27;./Analyse&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 第一个参数是 base_name</span></span><br><span class=\"line\"><span class=\"comment\"># 第二个参数是 format</span></span><br><span class=\"line\"><span class=\"comment\"># 第三个参数是 root_dir</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;压缩完成&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压文件</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">filename：压缩包文件</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">extract_dir：是目标目录的名称，其中包含存档文件，打开包装。如果未提供，则使用当前工作目录,</span></span><br><span class=\"line\"><span class=\"string\"> </span></span><br><span class=\"line\"><span class=\"string\">format：是压缩包格式，如果没有提供那么会根据文件扩展名进行解压</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">shutil.unpack_archive(<span class=\"string\">&#x27;2.zip&#x27;</span>,extract_dir=<span class=\"string\">&#x27;2&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># 会将压缩包的内容解压出来，然后放进一个名称为 2 的文件夹中，</span></span><br><span class=\"line\"><span class=\"comment\"># 如果没有给extract_dir提供，那么会从压缩包中拿出放到当前目录下</span></span><br><span class=\"line\"><span class=\"comment\"># 建议给 extract_dir 提供存放的目录</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;解压成功&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-29/1622280481947-image.png\"></p>\n"},{"title":"Python操作Excel","date":"2021-05-29T08:03:09.000Z","from":"原创","url":null,"author":"p0ny","about":"一穷二白","avatar":null,"comments":1,"description":"Python操作Excel","sticky":1,"_content":"# Python 操作 Excel\n### 准备工作\n- 安装 `openpyxl` 库 `pip install openpyxl -i https://pypi.douban.com/simple --trusted pypi.douban.com`\n\n### 调用案例【需要从上到下按顺序操作】\n\n##### 1. 选中单元格并进行读写单元格内容【加载已有excel文档或者新建excel文档，操作sheet表，操作单元格】\n  ```python\n    # 读取json\n    import json\n    from openpyxl import load_workbook, workbook\n\n    # 打开现有的 Excel 文件  =============  操作已经存在的 excel文件\n    wb = load_workbook(\"1.xlsx\")\n    #  ===============================================================\n\n\n    # ===================================== 新建一个文件然后再操作\n    # 创建 Excel 且默认创建一个Sheet ==============\n    wb = workbook.Workbook()\n    # ===================\n\n\n    print(wb.sheetnames)  # ['android', 'IOS', 'Steam', '敏感的第三方组件']\n\n    #   =============================================\n    # 要操作 哪个sheet就选择哪个sheet\n\n    # 选择 名称为 android 的sheet  的方式一：\n    sheet = wb['android']  # 然后可以使用 sheet 变量操作sheet里面的单元格\n\n    # 基于索引位置来 选择某个sheet  的方式二：\n    sheet = wb.worksheets[0]  # 选择 名称为 android 的sheet\n    # 将第一个 Sheet对象赋给 变量 sheet\n    #   =======================================\n\n\n    #  ******************************************\n    #  ******************************************\n    #  ******************************************\n\n    # 选择某个单元格方式一：\n    cell = sheet.cell(6, 2)  # 这两个参数分别是 row, column 都是int 类型的数据，传进去的是单元格的行数和列数\n    \"\"\"\n    def cell(self, row, column, value=None):\n\n        Returns a cell object based on the given coordinates.\n\n        Usage: cell(row=15, column=1, value=5)\n\n        Calling `cell` creates cells in memory when they\n        are first accessed.\n\n        :param row: row index of the cell (e.g. 4)\n        :type row: int\n\n        :param column: column index of the cell (e.g. 3)\n        :type column: int\n        \"\"\"\n\n    # 选择某个单元格方式二：\n    cell = sheet['A1']  # cell = <Cell 'android'.A1>\n\n    # print(cell.value)  # 输出该单元格上的文本信息\n    # print(cell.style)  # 输出该单元格上的样式\n    # print(cell.font)  # 输出该单元格上的字体\n    # print(cell.alignment)  # 输出该单元格上的排列情况：水平居中还是其他等等\n    # 读取 名称为 android 的sheet，再读取该sheet中的 第6行第2列的单元格\n    #  ******************************************\n    #  ******************************************\n    #  ******************************************\n\n\n\n    # 获取部分单元格 比如：\n    cell_list = sheet[\"b7\":\"c9\"]\n    print(cell_list) \n    # 截图在下面\n    # ((<Cell 'android'.B7>, <Cell 'android'.C7>), (<Cell 'android'.B8>, <Cell 'android'.C8>), (<Cell 'android'.B9>, <Cell 'android'.C9>))\n\n\n\n\n\n    # 获取第 N 行的所有单元格 A1,B1,C1,D1.....   =================================\n    # for cell in sheet[5]:  # 获取第 5 行的所有单元格上的数据\n    #     print(cell.value, end=\"\\t\")\n    \"\"\"\n      序号\t说明\t权限字符\t作用\t备注\t敏感权限\tprotectionLevel\t\n    \"\"\"\n\n    # 获取所有行的数据 【也就在遍历时候使用索引获取第 N 列的数据】=================================\n    # for row in sheet.rows:\n    #     \"\"\"遍历sheet的每一行，加个索引就可以是 输出列的单元格上的数据\"\"\"\n    #     # row = (<Cell 'android'.A1>, <Cell 'android'.B1>,...  <Cell 'android'.F1>, <Cell 'android'.G1>)\n    #     # row = (<Cell 'android'.A2>, <Cell 'android'.B2>,.... <Cell 'android'.F2>, <Cell 'android'.G2>)\n    #     print(row)\n    # print(row[0].value) # 输出第一列的所有单元格上的数据\n\n\n    # 获取所有列的数据【基于此加个索引也可以获取 某一行的单元格】=================================\n    for col in sheet.columns:\n        # col = (<Cell 'android'.A1>, <Cell 'android'.A2>, <Cell 'android'.A3>,... <Cell 'android'.A214>)\n        # col = (<Cell 'android'.B1>, <Cell 'android'.B2>, <Cell 'android'.B3>,... <Cell 'android'.B214>)\n        print(col[0])  # 获取第一行的单元格\n\n\n    # 删除某个 Sheet\n    del wb[\"IOS\"]\n\n\n    # 保存修改的数据\n    wb.active = 0  # 指定默认打开的是哪个Sheet\n\n    sheet.title = \"android\"  # Sheet 的名称\n    wb.save(\"文件名.xlsx\")\n\n  ```\n\n\n![获取部分单元格](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-28/1622170794929-image.png)\n\n\n##### 2. 对齐方式\n- horizontal：水平方式对齐：`general`,`left`,`center`,`right`,`fill`,`justify`,`centerContinuous`,`distributed`\n\n- vertical: 垂直方式对齐：`top`, `center`, `bottom`, `justify`, `distributed`\n\n- text_rotation: 旋转角度\n\n- wrap_text：自动换行\n\n```python\nfrom openpyxl import load_workbook, workbook,styles\n\n\nwb = load_workbook(\"1.xlsx\")\nsheet = wb.worksheets[0]  # 将第一个 Sheet对象赋给 变量 sheet\n\n# 将 第6行第6列的单元格对象赋给 变量cell\ncell = sheet.cell(6,6)\ncell.alignment = styles.Alignment(horizontal='center',vertical='distributed', text_rotation=45, wrap_text=True)\n\nwb.save('1.xlsx')\n\n```\n\n\n\n##### 3. 边框\n- side的style有如下：\n   `dashDot`,`dashDotDot`, `dashed`,`dotted`,\n                            `double`,`hair`, `medium`, `mediumDashDot`, `mediumDashDotDot`,\n                            `mediumDashed`, `slantDashDot`, `thick`, `thin`\n\n```python\nfrom openpyxl import load_workbook, workbook,styles\n  \nwb = load_workbook(\"1.xlsx\")\nsheet = wb.worksheets[0]  # 将第一个 Sheet对象赋给 变量 sheet\n\n# 将 第6行第6列的单元格对象赋给 变量cell\ncell = sheet.cell(6,6)\ncell.border = cell.alignment = styles.Border(top=styles.Side(style='thin',color='ffb6c1'),\n                               bottom=styles.Side(style='dashed',color='9932CC'),\n                               left=styles.Side(style='dashed',color='9932CC'),\n                               right=styles.Side(style='dashed',color='9932CC'),\n                               diagonal=styles.Side(style='dashed',color='483d8b'), # 对角线\n                               diagonalUp=True # 左下 - 右上\n                               # diagonalDown=True # 左上 - 右下)\n\nwb.save('1.xlsx')\n\n```\n\n\n##### 4. 字体\n\n```python\nfrom openpyxl import load_workbook, workbook,styles\n  \nwb = load_workbook(\"1.xlsx\")\nsheet = wb.worksheets[0] # 将第一个 Sheet对象赋给 变量 sheet\n\n# 将 第6行第6列的单元格对象赋给 变量cell\ncell = sheet.cell(6,6)\ncell.font = styles.Font(name=\"微软雅黑\",size=16,color='ff0000',underline='single')\n\nwb.save('1.xlsx')\n\n```\n\n##### 5. 背景颜色\n\n```python\nfrom openpyxl import load_workbook, workbook,styles\n  \nwb = load_workbook(\"1.xlsx\")\nsheet = wb.worksheets[0] # 将第一个 Sheet对象赋给 变量 sheet\n\n# 将 第6行第6列的单元格对象赋给 变量cell\ncell = sheet.cell(6,6)\ncell.fill = styles.PatternFill('solid',fgColor='99ccff')\n\nwb.save('1.xlsx')\n```\n\n##### 6. 渐近背景颜色\n\n```python\nfrom openpyxl import load_workbook, workbook,styles\n  \nwb = load_workbook(\"1.xlsx\")\nsheet = wb.worksheets[0] # 将第一个 Sheet对象赋给 变量 sheet\n\n# 将 第6行第6列的单元格对象赋给 变量cell\ncell = sheet.cell(6,6)\ncell.fill = styles.GradientFill('linear',stop=('FFFFFF','99ccff','000000')) # stop中的元素分别是 左中右的颜色\n\nwb.save('1.xlsx')\n```\n\n##### 7. 设置行高列宽的值【索引从 1 开始】\n\n```python\nfrom openpyxl import load_workbook, workbook,styles\n  \nwb = load_workbook(\"1.xlsx\")\nsheet = wb.worksheets[0] # 将第一个 Sheet对象赋给 变量 sheet\n\nsheet.row_dimensions[2].height = 50  # 设置 第 2 行的 高度\nsheet.column_dimensions[\"E\"].width = 100  # 设置 第 E 列的 宽度\n\nwb.save('1.xlsx')\n```\n\n##### 8. 合并单元格\n\n```python\nfrom openpyxl import load_workbook, workbook,styles\n  \nwb = load_workbook(\"1.xlsx\")\nsheet = wb.worksheets[0] # 将第一个 Sheet对象赋给 变量 sheet\n\nsheet.merge_cells(\"b2:d8\")\nsheet.merge_cell(start_row=15, start_column=3, end_row=18, end_cloumn=8)\n\n\n# 解除合并\nsheet.unmerge_cells(\"b2:d8\")\n\nwb.save('1.xlsx')\n```\n\n\n##### 9. 插入公式\n\n```python\nfrom openpyxl import load_workbook, workbook,styles\n  \nwb = load_workbook(\"1.xlsx\")\nsheet = wb.worksheets[0] # 将第一个 Sheet对象赋给 变量 sheet\n\n# 插入公式的写法相当于是写入值到单元格中\nfrom openpyxl import workbook, load_workbook\n\nwb = load_workbook('2.xlsx')\nsheet = wb.worksheets[0]\n\n# 使用方式一选中单元格对象，然后使用该对象的 value 属性进行将公式写进去【必须带上value属性】\ncell = sheet.cell(1, 3)\ncell.value = \"=a1+b1\"\n\nwb.save(\"2.xlsx\")\nwb.close()\n\n```\n\n##### 10. 选取部分区域\n```python\nfrom openpyxl import load_workbook\n\nwb = load_workbook('2.xlsx')\nsheet = wb.worksheet[0]  # 操作 第一个 sheet\n\n\n# for i in sheet.iter_rows(min_col=1, min_row=5,max_col=7, max_row=10):\n    \"\"\"\n    参数说明：\n      1. min_col: 最小列数\n      2. min_row: 最小行数\n      \n      3. max_col: 最大列数\n      4. max_row: 最大行数\n    \"\"\"\n \n```\n\n###### 10.1 截取部分，使用案例一：\n```python\nfrom openpyxl import load_workbook\n\nwb = load_workbook('2.xlsx')\nsheet = wb.worksheets[0]\n\n# 截取部分区域\nfor cell in sheet.iter_cols(min_row=1, max_row=3, min_col=1, max_col=2):  # 从 第一行 到 第三行，从第一列 到 第二列\n    \"\"\"\n    迭代行数，cell = (<Cell 'Sheet1'.A1>, <Cell 'Sheet1'.A2>, <Cell 'Sheet1'.A3>)\n    \"\"\"\n    print(cell)\n\n\n\nfor cell in sheet['b2':'c6']:\n    print(cell)\n    \n\n```\n\n![ 截取部分，使用案例一](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-28/1622191208356-image.png)\n\n\n![截取部分，使用案例一](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-28/1622192257969-image.png)\n\n\n\n##### 11. 删除 `sheet.delete_rows(idx,amount)`、`sheet.delete_cols(idx,amount)`\n- 参数说明：\n   1. idx：要删除的索引位置\n   2. amount：从索引位置开始要删除的个数【 默认为1 】\n```python\nfrom openpyxl import load_workbook\n\nwb = load_workbook('2.xlsx')\nsheet = wb.worksheets[0]  # 将工作表对象 赋 给 变量 sheet\n\nsheet.delete_cols(idx=1,amount=1)\nsheet.delete_rows(idx=1,amount=1)\nwb.save('2.xlsx')\n```\n\n\n\n\n##### 12. 插入 `sheet.insert_rows(idx,amount)`、`sheet.insert_cols(idx,amount)`\n- 参数说明：\n   1. idx：要插入的索引位置\n   2. amount：从索引位置开始要插入的个数【 默认为1 】\n```python\nfrom openpyxl import load_workbook\n\nwb = load_workbook('2.xlsx')\nsheet = wb.worksheets[0]  # 将工作表对象 赋 给 变量 sheet\n\nsheet.insert_rows(idx=5,amount=10)\nsheet.insert_cols(idx=3,amount=2)\nwb.save('2.xlsx')\n```\n\n##### 13. 移动 `sheet.move_range(\"H2:J10\", rows=-1, cols=15)`\n- 参数说明：\n   1. 第一个字符串类型的参数：选中的Excel表格的区域 `\"H2:J10\"`\n   2. rows = -1 : 向上移动1个位置、rows = 1 ：向下移动 1 行\n   3. cols = 15 : 向右移动15个位置\n```python\nfrom openpyxl import load_workbook\nwb = load_workbook('2.xlsx')\nsheet = wb.worksheets[0]  # 将工作表对象 赋 给 变量 sheet\n\nsheet.move_range(\"H2:J10\", rows=-1, cols=15)\nwb.save('2.xlsx')\n```\n###### 13.1 移动的区域中的单元格显示的数据是 写入公式的出来的结果\n - 假如 ：c1 单元格的数据是 由 a1 * b1 相乘的来的也就是公式：`=a1*b1`\n\n   现在要将 a1 到 c1 的数据向右移动 n 列，那么若想公式随着位置的移动而改变，需要在 `move_range` 方法中添加个参数并且改为 `True` \n```python\nfrom openpyxl import load_workbook\nwb = load_workbook('2.xlsx')\nsheet = wb.worksheets[0]  # 将工作表对象 赋 给 变量 sheet\n\nsheet.move_range(\"a1:c3\", cols=15, translate=True)\n# True 相当于随着源数据单元格的变动而改变\n\nwb.save('2.xlsx')\n```\n\n\n\n\n\n\n\n\n","source":"_posts/Python操作Excel.md","raw":"---\ntitle: Python操作Excel\ndate: 2021-05-29 16:03:09\n# 文章出处名称 #\nfrom: 原创\n# 文章出处链接 #\nurl:\n# 文章作者名称 #\nauthor: p0ny\n# 文章作者签名 #\nabout: 一穷二白\n# 文章作者头像 #\navatar: \n# 是否开启评论 #\ncomments: true\n# 文章标签 #\ntags: Python\n# 文章分类 #\ncategories: Python\n# 文章摘要 #\ndescription: Python操作Excel\n# 文章置顶 #\nsticky: 1\n---\n# Python 操作 Excel\n### 准备工作\n- 安装 `openpyxl` 库 `pip install openpyxl -i https://pypi.douban.com/simple --trusted pypi.douban.com`\n\n### 调用案例【需要从上到下按顺序操作】\n\n##### 1. 选中单元格并进行读写单元格内容【加载已有excel文档或者新建excel文档，操作sheet表，操作单元格】\n  ```python\n    # 读取json\n    import json\n    from openpyxl import load_workbook, workbook\n\n    # 打开现有的 Excel 文件  =============  操作已经存在的 excel文件\n    wb = load_workbook(\"1.xlsx\")\n    #  ===============================================================\n\n\n    # ===================================== 新建一个文件然后再操作\n    # 创建 Excel 且默认创建一个Sheet ==============\n    wb = workbook.Workbook()\n    # ===================\n\n\n    print(wb.sheetnames)  # ['android', 'IOS', 'Steam', '敏感的第三方组件']\n\n    #   =============================================\n    # 要操作 哪个sheet就选择哪个sheet\n\n    # 选择 名称为 android 的sheet  的方式一：\n    sheet = wb['android']  # 然后可以使用 sheet 变量操作sheet里面的单元格\n\n    # 基于索引位置来 选择某个sheet  的方式二：\n    sheet = wb.worksheets[0]  # 选择 名称为 android 的sheet\n    # 将第一个 Sheet对象赋给 变量 sheet\n    #   =======================================\n\n\n    #  ******************************************\n    #  ******************************************\n    #  ******************************************\n\n    # 选择某个单元格方式一：\n    cell = sheet.cell(6, 2)  # 这两个参数分别是 row, column 都是int 类型的数据，传进去的是单元格的行数和列数\n    \"\"\"\n    def cell(self, row, column, value=None):\n\n        Returns a cell object based on the given coordinates.\n\n        Usage: cell(row=15, column=1, value=5)\n\n        Calling `cell` creates cells in memory when they\n        are first accessed.\n\n        :param row: row index of the cell (e.g. 4)\n        :type row: int\n\n        :param column: column index of the cell (e.g. 3)\n        :type column: int\n        \"\"\"\n\n    # 选择某个单元格方式二：\n    cell = sheet['A1']  # cell = <Cell 'android'.A1>\n\n    # print(cell.value)  # 输出该单元格上的文本信息\n    # print(cell.style)  # 输出该单元格上的样式\n    # print(cell.font)  # 输出该单元格上的字体\n    # print(cell.alignment)  # 输出该单元格上的排列情况：水平居中还是其他等等\n    # 读取 名称为 android 的sheet，再读取该sheet中的 第6行第2列的单元格\n    #  ******************************************\n    #  ******************************************\n    #  ******************************************\n\n\n\n    # 获取部分单元格 比如：\n    cell_list = sheet[\"b7\":\"c9\"]\n    print(cell_list) \n    # 截图在下面\n    # ((<Cell 'android'.B7>, <Cell 'android'.C7>), (<Cell 'android'.B8>, <Cell 'android'.C8>), (<Cell 'android'.B9>, <Cell 'android'.C9>))\n\n\n\n\n\n    # 获取第 N 行的所有单元格 A1,B1,C1,D1.....   =================================\n    # for cell in sheet[5]:  # 获取第 5 行的所有单元格上的数据\n    #     print(cell.value, end=\"\\t\")\n    \"\"\"\n      序号\t说明\t权限字符\t作用\t备注\t敏感权限\tprotectionLevel\t\n    \"\"\"\n\n    # 获取所有行的数据 【也就在遍历时候使用索引获取第 N 列的数据】=================================\n    # for row in sheet.rows:\n    #     \"\"\"遍历sheet的每一行，加个索引就可以是 输出列的单元格上的数据\"\"\"\n    #     # row = (<Cell 'android'.A1>, <Cell 'android'.B1>,...  <Cell 'android'.F1>, <Cell 'android'.G1>)\n    #     # row = (<Cell 'android'.A2>, <Cell 'android'.B2>,.... <Cell 'android'.F2>, <Cell 'android'.G2>)\n    #     print(row)\n    # print(row[0].value) # 输出第一列的所有单元格上的数据\n\n\n    # 获取所有列的数据【基于此加个索引也可以获取 某一行的单元格】=================================\n    for col in sheet.columns:\n        # col = (<Cell 'android'.A1>, <Cell 'android'.A2>, <Cell 'android'.A3>,... <Cell 'android'.A214>)\n        # col = (<Cell 'android'.B1>, <Cell 'android'.B2>, <Cell 'android'.B3>,... <Cell 'android'.B214>)\n        print(col[0])  # 获取第一行的单元格\n\n\n    # 删除某个 Sheet\n    del wb[\"IOS\"]\n\n\n    # 保存修改的数据\n    wb.active = 0  # 指定默认打开的是哪个Sheet\n\n    sheet.title = \"android\"  # Sheet 的名称\n    wb.save(\"文件名.xlsx\")\n\n  ```\n\n\n![获取部分单元格](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-28/1622170794929-image.png)\n\n\n##### 2. 对齐方式\n- horizontal：水平方式对齐：`general`,`left`,`center`,`right`,`fill`,`justify`,`centerContinuous`,`distributed`\n\n- vertical: 垂直方式对齐：`top`, `center`, `bottom`, `justify`, `distributed`\n\n- text_rotation: 旋转角度\n\n- wrap_text：自动换行\n\n```python\nfrom openpyxl import load_workbook, workbook,styles\n\n\nwb = load_workbook(\"1.xlsx\")\nsheet = wb.worksheets[0]  # 将第一个 Sheet对象赋给 变量 sheet\n\n# 将 第6行第6列的单元格对象赋给 变量cell\ncell = sheet.cell(6,6)\ncell.alignment = styles.Alignment(horizontal='center',vertical='distributed', text_rotation=45, wrap_text=True)\n\nwb.save('1.xlsx')\n\n```\n\n\n\n##### 3. 边框\n- side的style有如下：\n   `dashDot`,`dashDotDot`, `dashed`,`dotted`,\n                            `double`,`hair`, `medium`, `mediumDashDot`, `mediumDashDotDot`,\n                            `mediumDashed`, `slantDashDot`, `thick`, `thin`\n\n```python\nfrom openpyxl import load_workbook, workbook,styles\n  \nwb = load_workbook(\"1.xlsx\")\nsheet = wb.worksheets[0]  # 将第一个 Sheet对象赋给 变量 sheet\n\n# 将 第6行第6列的单元格对象赋给 变量cell\ncell = sheet.cell(6,6)\ncell.border = cell.alignment = styles.Border(top=styles.Side(style='thin',color='ffb6c1'),\n                               bottom=styles.Side(style='dashed',color='9932CC'),\n                               left=styles.Side(style='dashed',color='9932CC'),\n                               right=styles.Side(style='dashed',color='9932CC'),\n                               diagonal=styles.Side(style='dashed',color='483d8b'), # 对角线\n                               diagonalUp=True # 左下 - 右上\n                               # diagonalDown=True # 左上 - 右下)\n\nwb.save('1.xlsx')\n\n```\n\n\n##### 4. 字体\n\n```python\nfrom openpyxl import load_workbook, workbook,styles\n  \nwb = load_workbook(\"1.xlsx\")\nsheet = wb.worksheets[0] # 将第一个 Sheet对象赋给 变量 sheet\n\n# 将 第6行第6列的单元格对象赋给 变量cell\ncell = sheet.cell(6,6)\ncell.font = styles.Font(name=\"微软雅黑\",size=16,color='ff0000',underline='single')\n\nwb.save('1.xlsx')\n\n```\n\n##### 5. 背景颜色\n\n```python\nfrom openpyxl import load_workbook, workbook,styles\n  \nwb = load_workbook(\"1.xlsx\")\nsheet = wb.worksheets[0] # 将第一个 Sheet对象赋给 变量 sheet\n\n# 将 第6行第6列的单元格对象赋给 变量cell\ncell = sheet.cell(6,6)\ncell.fill = styles.PatternFill('solid',fgColor='99ccff')\n\nwb.save('1.xlsx')\n```\n\n##### 6. 渐近背景颜色\n\n```python\nfrom openpyxl import load_workbook, workbook,styles\n  \nwb = load_workbook(\"1.xlsx\")\nsheet = wb.worksheets[0] # 将第一个 Sheet对象赋给 变量 sheet\n\n# 将 第6行第6列的单元格对象赋给 变量cell\ncell = sheet.cell(6,6)\ncell.fill = styles.GradientFill('linear',stop=('FFFFFF','99ccff','000000')) # stop中的元素分别是 左中右的颜色\n\nwb.save('1.xlsx')\n```\n\n##### 7. 设置行高列宽的值【索引从 1 开始】\n\n```python\nfrom openpyxl import load_workbook, workbook,styles\n  \nwb = load_workbook(\"1.xlsx\")\nsheet = wb.worksheets[0] # 将第一个 Sheet对象赋给 变量 sheet\n\nsheet.row_dimensions[2].height = 50  # 设置 第 2 行的 高度\nsheet.column_dimensions[\"E\"].width = 100  # 设置 第 E 列的 宽度\n\nwb.save('1.xlsx')\n```\n\n##### 8. 合并单元格\n\n```python\nfrom openpyxl import load_workbook, workbook,styles\n  \nwb = load_workbook(\"1.xlsx\")\nsheet = wb.worksheets[0] # 将第一个 Sheet对象赋给 变量 sheet\n\nsheet.merge_cells(\"b2:d8\")\nsheet.merge_cell(start_row=15, start_column=3, end_row=18, end_cloumn=8)\n\n\n# 解除合并\nsheet.unmerge_cells(\"b2:d8\")\n\nwb.save('1.xlsx')\n```\n\n\n##### 9. 插入公式\n\n```python\nfrom openpyxl import load_workbook, workbook,styles\n  \nwb = load_workbook(\"1.xlsx\")\nsheet = wb.worksheets[0] # 将第一个 Sheet对象赋给 变量 sheet\n\n# 插入公式的写法相当于是写入值到单元格中\nfrom openpyxl import workbook, load_workbook\n\nwb = load_workbook('2.xlsx')\nsheet = wb.worksheets[0]\n\n# 使用方式一选中单元格对象，然后使用该对象的 value 属性进行将公式写进去【必须带上value属性】\ncell = sheet.cell(1, 3)\ncell.value = \"=a1+b1\"\n\nwb.save(\"2.xlsx\")\nwb.close()\n\n```\n\n##### 10. 选取部分区域\n```python\nfrom openpyxl import load_workbook\n\nwb = load_workbook('2.xlsx')\nsheet = wb.worksheet[0]  # 操作 第一个 sheet\n\n\n# for i in sheet.iter_rows(min_col=1, min_row=5,max_col=7, max_row=10):\n    \"\"\"\n    参数说明：\n      1. min_col: 最小列数\n      2. min_row: 最小行数\n      \n      3. max_col: 最大列数\n      4. max_row: 最大行数\n    \"\"\"\n \n```\n\n###### 10.1 截取部分，使用案例一：\n```python\nfrom openpyxl import load_workbook\n\nwb = load_workbook('2.xlsx')\nsheet = wb.worksheets[0]\n\n# 截取部分区域\nfor cell in sheet.iter_cols(min_row=1, max_row=3, min_col=1, max_col=2):  # 从 第一行 到 第三行，从第一列 到 第二列\n    \"\"\"\n    迭代行数，cell = (<Cell 'Sheet1'.A1>, <Cell 'Sheet1'.A2>, <Cell 'Sheet1'.A3>)\n    \"\"\"\n    print(cell)\n\n\n\nfor cell in sheet['b2':'c6']:\n    print(cell)\n    \n\n```\n\n![ 截取部分，使用案例一](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-28/1622191208356-image.png)\n\n\n![截取部分，使用案例一](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-28/1622192257969-image.png)\n\n\n\n##### 11. 删除 `sheet.delete_rows(idx,amount)`、`sheet.delete_cols(idx,amount)`\n- 参数说明：\n   1. idx：要删除的索引位置\n   2. amount：从索引位置开始要删除的个数【 默认为1 】\n```python\nfrom openpyxl import load_workbook\n\nwb = load_workbook('2.xlsx')\nsheet = wb.worksheets[0]  # 将工作表对象 赋 给 变量 sheet\n\nsheet.delete_cols(idx=1,amount=1)\nsheet.delete_rows(idx=1,amount=1)\nwb.save('2.xlsx')\n```\n\n\n\n\n##### 12. 插入 `sheet.insert_rows(idx,amount)`、`sheet.insert_cols(idx,amount)`\n- 参数说明：\n   1. idx：要插入的索引位置\n   2. amount：从索引位置开始要插入的个数【 默认为1 】\n```python\nfrom openpyxl import load_workbook\n\nwb = load_workbook('2.xlsx')\nsheet = wb.worksheets[0]  # 将工作表对象 赋 给 变量 sheet\n\nsheet.insert_rows(idx=5,amount=10)\nsheet.insert_cols(idx=3,amount=2)\nwb.save('2.xlsx')\n```\n\n##### 13. 移动 `sheet.move_range(\"H2:J10\", rows=-1, cols=15)`\n- 参数说明：\n   1. 第一个字符串类型的参数：选中的Excel表格的区域 `\"H2:J10\"`\n   2. rows = -1 : 向上移动1个位置、rows = 1 ：向下移动 1 行\n   3. cols = 15 : 向右移动15个位置\n```python\nfrom openpyxl import load_workbook\nwb = load_workbook('2.xlsx')\nsheet = wb.worksheets[0]  # 将工作表对象 赋 给 变量 sheet\n\nsheet.move_range(\"H2:J10\", rows=-1, cols=15)\nwb.save('2.xlsx')\n```\n###### 13.1 移动的区域中的单元格显示的数据是 写入公式的出来的结果\n - 假如 ：c1 单元格的数据是 由 a1 * b1 相乘的来的也就是公式：`=a1*b1`\n\n   现在要将 a1 到 c1 的数据向右移动 n 列，那么若想公式随着位置的移动而改变，需要在 `move_range` 方法中添加个参数并且改为 `True` \n```python\nfrom openpyxl import load_workbook\nwb = load_workbook('2.xlsx')\nsheet = wb.worksheets[0]  # 将工作表对象 赋 给 变量 sheet\n\nsheet.move_range(\"a1:c3\", cols=15, translate=True)\n# True 相当于随着源数据单元格的变动而改变\n\nwb.save('2.xlsx')\n```\n\n\n\n\n\n\n\n\n","slug":"Python操作Excel","published":1,"updated":"2021-06-01T01:09:14.074Z","layout":"post","photos":[],"link":"","_id":"cks8acfkq000lycvmgr6m0lcv","content":"<h1 id=\"Python-操作-Excel\"><a href=\"#Python-操作-Excel\" class=\"headerlink\" title=\"Python 操作 Excel\"></a>Python 操作 Excel</h1><h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><ul>\n<li>安装 <code>openpyxl</code> 库 <code>pip install openpyxl -i https://pypi.douban.com/simple --trusted pypi.douban.com</code></li>\n</ul>\n<h3 id=\"调用案例【需要从上到下按顺序操作】\"><a href=\"#调用案例【需要从上到下按顺序操作】\" class=\"headerlink\" title=\"调用案例【需要从上到下按顺序操作】\"></a>调用案例【需要从上到下按顺序操作】</h3><h5 id=\"1-选中单元格并进行读写单元格内容【加载已有excel文档或者新建excel文档，操作sheet表，操作单元格】\"><a href=\"#1-选中单元格并进行读写单元格内容【加载已有excel文档或者新建excel文档，操作sheet表，操作单元格】\" class=\"headerlink\" title=\"1. 选中单元格并进行读写单元格内容【加载已有excel文档或者新建excel文档，操作sheet表，操作单元格】\"></a>1. 选中单元格并进行读写单元格内容【加载已有excel文档或者新建excel文档，操作sheet表，操作单元格】</h5>  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 读取json</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook, workbook</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打开现有的 Excel 文件  =============  操作已经存在的 excel文件</span></span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&quot;1.xlsx&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#  ===============================================================</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ===================================== 新建一个文件然后再操作</span></span><br><span class=\"line\"><span class=\"comment\"># 创建 Excel 且默认创建一个Sheet ==============</span></span><br><span class=\"line\">wb = workbook.Workbook()</span><br><span class=\"line\"><span class=\"comment\"># ===================</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(wb.sheetnames)  <span class=\"comment\"># [&#x27;android&#x27;, &#x27;IOS&#x27;, &#x27;Steam&#x27;, &#x27;敏感的第三方组件&#x27;]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#   =============================================</span></span><br><span class=\"line\"><span class=\"comment\"># 要操作 哪个sheet就选择哪个sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 选择 名称为 android 的sheet  的方式一：</span></span><br><span class=\"line\">sheet = wb[<span class=\"string\">&#x27;android&#x27;</span>]  <span class=\"comment\"># 然后可以使用 sheet 变量操作sheet里面的单元格</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 基于索引位置来 选择某个sheet  的方式二：</span></span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>]  <span class=\"comment\"># 选择 名称为 android 的sheet</span></span><br><span class=\"line\"><span class=\"comment\"># 将第一个 Sheet对象赋给 变量 sheet</span></span><br><span class=\"line\"><span class=\"comment\">#   =======================================</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#  ******************************************</span></span><br><span class=\"line\"><span class=\"comment\">#  ******************************************</span></span><br><span class=\"line\"><span class=\"comment\">#  ******************************************</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 选择某个单元格方式一：</span></span><br><span class=\"line\">cell = sheet.cell(<span class=\"number\">6</span>, <span class=\"number\">2</span>)  <span class=\"comment\"># 这两个参数分别是 row, column 都是int 类型的数据，传进去的是单元格的行数和列数</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">def cell(self, row, column, value=None):</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Returns a cell object based on the given coordinates.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Usage: cell(row=15, column=1, value=5)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Calling `cell` creates cells in memory when they</span></span><br><span class=\"line\"><span class=\"string\">    are first accessed.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    :param row: row index of the cell (e.g. 4)</span></span><br><span class=\"line\"><span class=\"string\">    :type row: int</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    :param column: column index of the cell (e.g. 3)</span></span><br><span class=\"line\"><span class=\"string\">    :type column: int</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 选择某个单元格方式二：</span></span><br><span class=\"line\">cell = sheet[<span class=\"string\">&#x27;A1&#x27;</span>]  <span class=\"comment\"># cell = &lt;Cell &#x27;android&#x27;.A1&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(cell.value)  # 输出该单元格上的文本信息</span></span><br><span class=\"line\"><span class=\"comment\"># print(cell.style)  # 输出该单元格上的样式</span></span><br><span class=\"line\"><span class=\"comment\"># print(cell.font)  # 输出该单元格上的字体</span></span><br><span class=\"line\"><span class=\"comment\"># print(cell.alignment)  # 输出该单元格上的排列情况：水平居中还是其他等等</span></span><br><span class=\"line\"><span class=\"comment\"># 读取 名称为 android 的sheet，再读取该sheet中的 第6行第2列的单元格</span></span><br><span class=\"line\"><span class=\"comment\">#  ******************************************</span></span><br><span class=\"line\"><span class=\"comment\">#  ******************************************</span></span><br><span class=\"line\"><span class=\"comment\">#  ******************************************</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取部分单元格 比如：</span></span><br><span class=\"line\">cell_list = sheet[<span class=\"string\">&quot;b7&quot;</span>:<span class=\"string\">&quot;c9&quot;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(cell_list) </span><br><span class=\"line\"><span class=\"comment\"># 截图在下面</span></span><br><span class=\"line\"><span class=\"comment\"># ((&lt;Cell &#x27;android&#x27;.B7&gt;, &lt;Cell &#x27;android&#x27;.C7&gt;), (&lt;Cell &#x27;android&#x27;.B8&gt;, &lt;Cell &#x27;android&#x27;.C8&gt;), (&lt;Cell &#x27;android&#x27;.B9&gt;, &lt;Cell &#x27;android&#x27;.C9&gt;))</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取第 N 行的所有单元格 A1,B1,C1,D1.....   =================================</span></span><br><span class=\"line\"><span class=\"comment\"># for cell in sheet[5]:  # 获取第 5 行的所有单元格上的数据</span></span><br><span class=\"line\"><span class=\"comment\">#     print(cell.value, end=&quot;\\t&quot;)</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">  序号\t说明\t权限字符\t作用\t备注\t敏感权限\tprotectionLevel\t</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取所有行的数据 【也就在遍历时候使用索引获取第 N 列的数据】=================================</span></span><br><span class=\"line\"><span class=\"comment\"># for row in sheet.rows:</span></span><br><span class=\"line\"><span class=\"comment\">#     &quot;&quot;&quot;遍历sheet的每一行，加个索引就可以是 输出列的单元格上的数据&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#     # row = (&lt;Cell &#x27;android&#x27;.A1&gt;, &lt;Cell &#x27;android&#x27;.B1&gt;,...  &lt;Cell &#x27;android&#x27;.F1&gt;, &lt;Cell &#x27;android&#x27;.G1&gt;)</span></span><br><span class=\"line\"><span class=\"comment\">#     # row = (&lt;Cell &#x27;android&#x27;.A2&gt;, &lt;Cell &#x27;android&#x27;.B2&gt;,.... &lt;Cell &#x27;android&#x27;.F2&gt;, &lt;Cell &#x27;android&#x27;.G2&gt;)</span></span><br><span class=\"line\"><span class=\"comment\">#     print(row)</span></span><br><span class=\"line\"><span class=\"comment\"># print(row[0].value) # 输出第一列的所有单元格上的数据</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取所有列的数据【基于此加个索引也可以获取 某一行的单元格】=================================</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> col <span class=\"keyword\">in</span> sheet.columns:</span><br><span class=\"line\">    <span class=\"comment\"># col = (&lt;Cell &#x27;android&#x27;.A1&gt;, &lt;Cell &#x27;android&#x27;.A2&gt;, &lt;Cell &#x27;android&#x27;.A3&gt;,... &lt;Cell &#x27;android&#x27;.A214&gt;)</span></span><br><span class=\"line\">    <span class=\"comment\"># col = (&lt;Cell &#x27;android&#x27;.B1&gt;, &lt;Cell &#x27;android&#x27;.B2&gt;, &lt;Cell &#x27;android&#x27;.B3&gt;,... &lt;Cell &#x27;android&#x27;.B214&gt;)</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(col[<span class=\"number\">0</span>])  <span class=\"comment\"># 获取第一行的单元格</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除某个 Sheet</span></span><br><span class=\"line\"><span class=\"keyword\">del</span> wb[<span class=\"string\">&quot;IOS&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 保存修改的数据</span></span><br><span class=\"line\">wb.active = <span class=\"number\">0</span>  <span class=\"comment\"># 指定默认打开的是哪个Sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\">sheet.title = <span class=\"string\">&quot;android&quot;</span>  <span class=\"comment\"># Sheet 的名称</span></span><br><span class=\"line\">wb.save(<span class=\"string\">&quot;文件名.xlsx&quot;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-28/1622170794929-image.png\" alt=\"获取部分单元格\"></p>\n<h5 id=\"2-对齐方式\"><a href=\"#2-对齐方式\" class=\"headerlink\" title=\"2. 对齐方式\"></a>2. 对齐方式</h5><ul>\n<li><p>horizontal：水平方式对齐：<code>general</code>,<code>left</code>,<code>center</code>,<code>right</code>,<code>fill</code>,<code>justify</code>,<code>centerContinuous</code>,<code>distributed</code></p>\n</li>\n<li><p>vertical: 垂直方式对齐：<code>top</code>, <code>center</code>, <code>bottom</code>, <code>justify</code>, <code>distributed</code></p>\n</li>\n<li><p>text_rotation: 旋转角度</p>\n</li>\n<li><p>wrap_text：自动换行</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook, workbook,styles</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&quot;1.xlsx&quot;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>]  <span class=\"comment\"># 将第一个 Sheet对象赋给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 第6行第6列的单元格对象赋给 变量cell</span></span><br><span class=\"line\">cell = sheet.cell(<span class=\"number\">6</span>,<span class=\"number\">6</span>)</span><br><span class=\"line\">cell.alignment = styles.Alignment(horizontal=<span class=\"string\">&#x27;center&#x27;</span>,vertical=<span class=\"string\">&#x27;distributed&#x27;</span>, text_rotation=<span class=\"number\">45</span>, wrap_text=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">wb.save(<span class=\"string\">&#x27;1.xlsx&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"3-边框\"><a href=\"#3-边框\" class=\"headerlink\" title=\"3. 边框\"></a>3. 边框</h5><ul>\n<li>side的style有如下：<br> <code>dashDot</code>,<code>dashDotDot</code>, <code>dashed</code>,<code>dotted</code>,<pre><code>                      `double`,`hair`, `medium`, `mediumDashDot`, `mediumDashDotDot`,\n                      `mediumDashed`, `slantDashDot`, `thick`, `thin`\n</code></pre>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook, workbook,styles</span><br><span class=\"line\">  </span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&quot;1.xlsx&quot;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>]  <span class=\"comment\"># 将第一个 Sheet对象赋给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 第6行第6列的单元格对象赋给 变量cell</span></span><br><span class=\"line\">cell = sheet.cell(<span class=\"number\">6</span>,<span class=\"number\">6</span>)</span><br><span class=\"line\">cell.border = cell.alignment = styles.Border(top=styles.Side(style=<span class=\"string\">&#x27;thin&#x27;</span>,color=<span class=\"string\">&#x27;ffb6c1&#x27;</span>),</span><br><span class=\"line\">                               bottom=styles.Side(style=<span class=\"string\">&#x27;dashed&#x27;</span>,color=<span class=\"string\">&#x27;9932CC&#x27;</span>),</span><br><span class=\"line\">                               left=styles.Side(style=<span class=\"string\">&#x27;dashed&#x27;</span>,color=<span class=\"string\">&#x27;9932CC&#x27;</span>),</span><br><span class=\"line\">                               right=styles.Side(style=<span class=\"string\">&#x27;dashed&#x27;</span>,color=<span class=\"string\">&#x27;9932CC&#x27;</span>),</span><br><span class=\"line\">                               diagonal=styles.Side(style=<span class=\"string\">&#x27;dashed&#x27;</span>,color=<span class=\"string\">&#x27;483d8b&#x27;</span>), <span class=\"comment\"># 对角线</span></span><br><span class=\"line\">                               diagonalUp=<span class=\"literal\">True</span> <span class=\"comment\"># 左下 - 右上</span></span><br><span class=\"line\">                               <span class=\"comment\"># diagonalDown=True # 左上 - 右下)</span></span><br><span class=\"line\"></span><br><span class=\"line\">wb.save(<span class=\"string\">&#x27;1.xlsx&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h5 id=\"4-字体\"><a href=\"#4-字体\" class=\"headerlink\" title=\"4. 字体\"></a>4. 字体</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook, workbook,styles</span><br><span class=\"line\">  </span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&quot;1.xlsx&quot;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>] <span class=\"comment\"># 将第一个 Sheet对象赋给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 第6行第6列的单元格对象赋给 变量cell</span></span><br><span class=\"line\">cell = sheet.cell(<span class=\"number\">6</span>,<span class=\"number\">6</span>)</span><br><span class=\"line\">cell.font = styles.Font(name=<span class=\"string\">&quot;微软雅黑&quot;</span>,size=<span class=\"number\">16</span>,color=<span class=\"string\">&#x27;ff0000&#x27;</span>,underline=<span class=\"string\">&#x27;single&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">wb.save(<span class=\"string\">&#x27;1.xlsx&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"5-背景颜色\"><a href=\"#5-背景颜色\" class=\"headerlink\" title=\"5. 背景颜色\"></a>5. 背景颜色</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook, workbook,styles</span><br><span class=\"line\">  </span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&quot;1.xlsx&quot;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>] <span class=\"comment\"># 将第一个 Sheet对象赋给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 第6行第6列的单元格对象赋给 变量cell</span></span><br><span class=\"line\">cell = sheet.cell(<span class=\"number\">6</span>,<span class=\"number\">6</span>)</span><br><span class=\"line\">cell.fill = styles.PatternFill(<span class=\"string\">&#x27;solid&#x27;</span>,fgColor=<span class=\"string\">&#x27;99ccff&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">wb.save(<span class=\"string\">&#x27;1.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"6-渐近背景颜色\"><a href=\"#6-渐近背景颜色\" class=\"headerlink\" title=\"6. 渐近背景颜色\"></a>6. 渐近背景颜色</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook, workbook,styles</span><br><span class=\"line\">  </span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&quot;1.xlsx&quot;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>] <span class=\"comment\"># 将第一个 Sheet对象赋给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 第6行第6列的单元格对象赋给 变量cell</span></span><br><span class=\"line\">cell = sheet.cell(<span class=\"number\">6</span>,<span class=\"number\">6</span>)</span><br><span class=\"line\">cell.fill = styles.GradientFill(<span class=\"string\">&#x27;linear&#x27;</span>,stop=(<span class=\"string\">&#x27;FFFFFF&#x27;</span>,<span class=\"string\">&#x27;99ccff&#x27;</span>,<span class=\"string\">&#x27;000000&#x27;</span>)) <span class=\"comment\"># stop中的元素分别是 左中右的颜色</span></span><br><span class=\"line\"></span><br><span class=\"line\">wb.save(<span class=\"string\">&#x27;1.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"7-设置行高列宽的值【索引从-1-开始】\"><a href=\"#7-设置行高列宽的值【索引从-1-开始】\" class=\"headerlink\" title=\"7. 设置行高列宽的值【索引从 1 开始】\"></a>7. 设置行高列宽的值【索引从 1 开始】</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook, workbook,styles</span><br><span class=\"line\">  </span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&quot;1.xlsx&quot;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>] <span class=\"comment\"># 将第一个 Sheet对象赋给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\">sheet.row_dimensions[<span class=\"number\">2</span>].height = <span class=\"number\">50</span>  <span class=\"comment\"># 设置 第 2 行的 高度</span></span><br><span class=\"line\">sheet.column_dimensions[<span class=\"string\">&quot;E&quot;</span>].width = <span class=\"number\">100</span>  <span class=\"comment\"># 设置 第 E 列的 宽度</span></span><br><span class=\"line\"></span><br><span class=\"line\">wb.save(<span class=\"string\">&#x27;1.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"8-合并单元格\"><a href=\"#8-合并单元格\" class=\"headerlink\" title=\"8. 合并单元格\"></a>8. 合并单元格</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook, workbook,styles</span><br><span class=\"line\">  </span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&quot;1.xlsx&quot;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>] <span class=\"comment\"># 将第一个 Sheet对象赋给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\">sheet.merge_cells(<span class=\"string\">&quot;b2:d8&quot;</span>)</span><br><span class=\"line\">sheet.merge_cell(start_row=<span class=\"number\">15</span>, start_column=<span class=\"number\">3</span>, end_row=<span class=\"number\">18</span>, end_cloumn=<span class=\"number\">8</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解除合并</span></span><br><span class=\"line\">sheet.unmerge_cells(<span class=\"string\">&quot;b2:d8&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">wb.save(<span class=\"string\">&#x27;1.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n\n<h5 id=\"9-插入公式\"><a href=\"#9-插入公式\" class=\"headerlink\" title=\"9. 插入公式\"></a>9. 插入公式</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook, workbook,styles</span><br><span class=\"line\">  </span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&quot;1.xlsx&quot;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>] <span class=\"comment\"># 将第一个 Sheet对象赋给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 插入公式的写法相当于是写入值到单元格中</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> workbook, load_workbook</span><br><span class=\"line\"></span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&#x27;2.xlsx&#x27;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用方式一选中单元格对象，然后使用该对象的 value 属性进行将公式写进去【必须带上value属性】</span></span><br><span class=\"line\">cell = sheet.cell(<span class=\"number\">1</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\">cell.value = <span class=\"string\">&quot;=a1+b1&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">wb.save(<span class=\"string\">&quot;2.xlsx&quot;</span>)</span><br><span class=\"line\">wb.close()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"10-选取部分区域\"><a href=\"#10-选取部分区域\" class=\"headerlink\" title=\"10. 选取部分区域\"></a>10. 选取部分区域</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook</span><br><span class=\"line\"></span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&#x27;2.xlsx&#x27;</span>)</span><br><span class=\"line\">sheet = wb.worksheet[<span class=\"number\">0</span>]  <span class=\"comment\"># 操作 第一个 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for i in sheet.iter_rows(min_col=1, min_row=5,max_col=7, max_row=10):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    参数说明：</span></span><br><span class=\"line\"><span class=\"string\">      1. min_col: 最小列数</span></span><br><span class=\"line\"><span class=\"string\">      2. min_row: 最小行数</span></span><br><span class=\"line\"><span class=\"string\">      </span></span><br><span class=\"line\"><span class=\"string\">      3. max_col: 最大列数</span></span><br><span class=\"line\"><span class=\"string\">      4. max_row: 最大行数</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n\n<h6 id=\"10-1-截取部分，使用案例一：\"><a href=\"#10-1-截取部分，使用案例一：\" class=\"headerlink\" title=\"10.1 截取部分，使用案例一：\"></a>10.1 截取部分，使用案例一：</h6><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook</span><br><span class=\"line\"></span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&#x27;2.xlsx&#x27;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 截取部分区域</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> cell <span class=\"keyword\">in</span> sheet.iter_cols(min_row=<span class=\"number\">1</span>, max_row=<span class=\"number\">3</span>, min_col=<span class=\"number\">1</span>, max_col=<span class=\"number\">2</span>):  <span class=\"comment\"># 从 第一行 到 第三行，从第一列 到 第二列</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    迭代行数，cell = (&lt;Cell &#x27;Sheet1&#x27;.A1&gt;, &lt;Cell &#x27;Sheet1&#x27;.A2&gt;, &lt;Cell &#x27;Sheet1&#x27;.A3&gt;)</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(cell)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> cell <span class=\"keyword\">in</span> sheet[<span class=\"string\">&#x27;b2&#x27;</span>:<span class=\"string\">&#x27;c6&#x27;</span>]:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(cell)</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-28/1622191208356-image.png\" alt=\" 截取部分，使用案例一\"></p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-28/1622192257969-image.png\" alt=\"截取部分，使用案例一\"></p>\n<h5 id=\"11-删除-sheet-delete-rows-idx-amount-、sheet-delete-cols-idx-amount\"><a href=\"#11-删除-sheet-delete-rows-idx-amount-、sheet-delete-cols-idx-amount\" class=\"headerlink\" title=\"11. 删除 sheet.delete_rows(idx,amount)、sheet.delete_cols(idx,amount)\"></a>11. 删除 <code>sheet.delete_rows(idx,amount)</code>、<code>sheet.delete_cols(idx,amount)</code></h5><ul>\n<li>参数说明：<ol>\n<li>idx：要删除的索引位置</li>\n<li>amount：从索引位置开始要删除的个数【 默认为1 】<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook</span><br><span class=\"line\"></span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&#x27;2.xlsx&#x27;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>]  <span class=\"comment\"># 将工作表对象 赋 给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\">sheet.delete_cols(idx=<span class=\"number\">1</span>,amount=<span class=\"number\">1</span>)</span><br><span class=\"line\">sheet.delete_rows(idx=<span class=\"number\">1</span>,amount=<span class=\"number\">1</span>)</span><br><span class=\"line\">wb.save(<span class=\"string\">&#x27;2.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ul>\n<h5 id=\"12-插入-sheet-insert-rows-idx-amount-、sheet-insert-cols-idx-amount\"><a href=\"#12-插入-sheet-insert-rows-idx-amount-、sheet-insert-cols-idx-amount\" class=\"headerlink\" title=\"12. 插入 sheet.insert_rows(idx,amount)、sheet.insert_cols(idx,amount)\"></a>12. 插入 <code>sheet.insert_rows(idx,amount)</code>、<code>sheet.insert_cols(idx,amount)</code></h5><ul>\n<li>参数说明：<ol>\n<li>idx：要插入的索引位置</li>\n<li>amount：从索引位置开始要插入的个数【 默认为1 】<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook</span><br><span class=\"line\"></span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&#x27;2.xlsx&#x27;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>]  <span class=\"comment\"># 将工作表对象 赋 给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\">sheet.insert_rows(idx=<span class=\"number\">5</span>,amount=<span class=\"number\">10</span>)</span><br><span class=\"line\">sheet.insert_cols(idx=<span class=\"number\">3</span>,amount=<span class=\"number\">2</span>)</span><br><span class=\"line\">wb.save(<span class=\"string\">&#x27;2.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ul>\n<h5 id=\"13-移动-sheet-move-range-quot-H2-J10-quot-rows-1-cols-15\"><a href=\"#13-移动-sheet-move-range-quot-H2-J10-quot-rows-1-cols-15\" class=\"headerlink\" title=\"13. 移动 sheet.move_range(&quot;H2:J10&quot;, rows=-1, cols=15)\"></a>13. 移动 <code>sheet.move_range(&quot;H2:J10&quot;, rows=-1, cols=15)</code></h5><ul>\n<li><p>参数说明：</p>\n<ol>\n<li>第一个字符串类型的参数：选中的Excel表格的区域 <code>&quot;H2:J10&quot;</code></li>\n<li>rows = -1 : 向上移动1个位置、rows = 1 ：向下移动 1 行</li>\n<li>cols = 15 : 向右移动15个位置<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook</span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&#x27;2.xlsx&#x27;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>]  <span class=\"comment\"># 将工作表对象 赋 给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\">sheet.move_range(<span class=\"string\">&quot;H2:J10&quot;</span>, rows=-<span class=\"number\">1</span>, cols=<span class=\"number\">15</span>)</span><br><span class=\"line\">wb.save(<span class=\"string\">&#x27;2.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h6 id=\"13-1-移动的区域中的单元格显示的数据是-写入公式的出来的结果\"><a href=\"#13-1-移动的区域中的单元格显示的数据是-写入公式的出来的结果\" class=\"headerlink\" title=\"13.1 移动的区域中的单元格显示的数据是 写入公式的出来的结果\"></a>13.1 移动的区域中的单元格显示的数据是 写入公式的出来的结果</h6></li>\n</ol>\n</li>\n<li><p>假如 ：c1 单元格的数据是 由 a1 * b1 相乘的来的也就是公式：<code>=a1*b1</code></p>\n<p>现在要将 a1 到 c1 的数据向右移动 n 列，那么若想公式随着位置的移动而改变，需要在 <code>move_range</code> 方法中添加个参数并且改为 <code>True</code> </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook</span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&#x27;2.xlsx&#x27;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>]  <span class=\"comment\"># 将工作表对象 赋 给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\">sheet.move_range(<span class=\"string\">&quot;a1:c3&quot;</span>, cols=<span class=\"number\">15</span>, translate=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"comment\"># True 相当于随着源数据单元格的变动而改变</span></span><br><span class=\"line\"></span><br><span class=\"line\">wb.save(<span class=\"string\">&#x27;2.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Python-操作-Excel\"><a href=\"#Python-操作-Excel\" class=\"headerlink\" title=\"Python 操作 Excel\"></a>Python 操作 Excel</h1><h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><ul>\n<li>安装 <code>openpyxl</code> 库 <code>pip install openpyxl -i https://pypi.douban.com/simple --trusted pypi.douban.com</code></li>\n</ul>\n<h3 id=\"调用案例【需要从上到下按顺序操作】\"><a href=\"#调用案例【需要从上到下按顺序操作】\" class=\"headerlink\" title=\"调用案例【需要从上到下按顺序操作】\"></a>调用案例【需要从上到下按顺序操作】</h3><h5 id=\"1-选中单元格并进行读写单元格内容【加载已有excel文档或者新建excel文档，操作sheet表，操作单元格】\"><a href=\"#1-选中单元格并进行读写单元格内容【加载已有excel文档或者新建excel文档，操作sheet表，操作单元格】\" class=\"headerlink\" title=\"1. 选中单元格并进行读写单元格内容【加载已有excel文档或者新建excel文档，操作sheet表，操作单元格】\"></a>1. 选中单元格并进行读写单元格内容【加载已有excel文档或者新建excel文档，操作sheet表，操作单元格】</h5>  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 读取json</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook, workbook</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打开现有的 Excel 文件  =============  操作已经存在的 excel文件</span></span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&quot;1.xlsx&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#  ===============================================================</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ===================================== 新建一个文件然后再操作</span></span><br><span class=\"line\"><span class=\"comment\"># 创建 Excel 且默认创建一个Sheet ==============</span></span><br><span class=\"line\">wb = workbook.Workbook()</span><br><span class=\"line\"><span class=\"comment\"># ===================</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(wb.sheetnames)  <span class=\"comment\"># [&#x27;android&#x27;, &#x27;IOS&#x27;, &#x27;Steam&#x27;, &#x27;敏感的第三方组件&#x27;]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#   =============================================</span></span><br><span class=\"line\"><span class=\"comment\"># 要操作 哪个sheet就选择哪个sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 选择 名称为 android 的sheet  的方式一：</span></span><br><span class=\"line\">sheet = wb[<span class=\"string\">&#x27;android&#x27;</span>]  <span class=\"comment\"># 然后可以使用 sheet 变量操作sheet里面的单元格</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 基于索引位置来 选择某个sheet  的方式二：</span></span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>]  <span class=\"comment\"># 选择 名称为 android 的sheet</span></span><br><span class=\"line\"><span class=\"comment\"># 将第一个 Sheet对象赋给 变量 sheet</span></span><br><span class=\"line\"><span class=\"comment\">#   =======================================</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#  ******************************************</span></span><br><span class=\"line\"><span class=\"comment\">#  ******************************************</span></span><br><span class=\"line\"><span class=\"comment\">#  ******************************************</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 选择某个单元格方式一：</span></span><br><span class=\"line\">cell = sheet.cell(<span class=\"number\">6</span>, <span class=\"number\">2</span>)  <span class=\"comment\"># 这两个参数分别是 row, column 都是int 类型的数据，传进去的是单元格的行数和列数</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">def cell(self, row, column, value=None):</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Returns a cell object based on the given coordinates.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Usage: cell(row=15, column=1, value=5)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Calling `cell` creates cells in memory when they</span></span><br><span class=\"line\"><span class=\"string\">    are first accessed.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    :param row: row index of the cell (e.g. 4)</span></span><br><span class=\"line\"><span class=\"string\">    :type row: int</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    :param column: column index of the cell (e.g. 3)</span></span><br><span class=\"line\"><span class=\"string\">    :type column: int</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 选择某个单元格方式二：</span></span><br><span class=\"line\">cell = sheet[<span class=\"string\">&#x27;A1&#x27;</span>]  <span class=\"comment\"># cell = &lt;Cell &#x27;android&#x27;.A1&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(cell.value)  # 输出该单元格上的文本信息</span></span><br><span class=\"line\"><span class=\"comment\"># print(cell.style)  # 输出该单元格上的样式</span></span><br><span class=\"line\"><span class=\"comment\"># print(cell.font)  # 输出该单元格上的字体</span></span><br><span class=\"line\"><span class=\"comment\"># print(cell.alignment)  # 输出该单元格上的排列情况：水平居中还是其他等等</span></span><br><span class=\"line\"><span class=\"comment\"># 读取 名称为 android 的sheet，再读取该sheet中的 第6行第2列的单元格</span></span><br><span class=\"line\"><span class=\"comment\">#  ******************************************</span></span><br><span class=\"line\"><span class=\"comment\">#  ******************************************</span></span><br><span class=\"line\"><span class=\"comment\">#  ******************************************</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取部分单元格 比如：</span></span><br><span class=\"line\">cell_list = sheet[<span class=\"string\">&quot;b7&quot;</span>:<span class=\"string\">&quot;c9&quot;</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(cell_list) </span><br><span class=\"line\"><span class=\"comment\"># 截图在下面</span></span><br><span class=\"line\"><span class=\"comment\"># ((&lt;Cell &#x27;android&#x27;.B7&gt;, &lt;Cell &#x27;android&#x27;.C7&gt;), (&lt;Cell &#x27;android&#x27;.B8&gt;, &lt;Cell &#x27;android&#x27;.C8&gt;), (&lt;Cell &#x27;android&#x27;.B9&gt;, &lt;Cell &#x27;android&#x27;.C9&gt;))</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取第 N 行的所有单元格 A1,B1,C1,D1.....   =================================</span></span><br><span class=\"line\"><span class=\"comment\"># for cell in sheet[5]:  # 获取第 5 行的所有单元格上的数据</span></span><br><span class=\"line\"><span class=\"comment\">#     print(cell.value, end=&quot;\\t&quot;)</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">  序号\t说明\t权限字符\t作用\t备注\t敏感权限\tprotectionLevel\t</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取所有行的数据 【也就在遍历时候使用索引获取第 N 列的数据】=================================</span></span><br><span class=\"line\"><span class=\"comment\"># for row in sheet.rows:</span></span><br><span class=\"line\"><span class=\"comment\">#     &quot;&quot;&quot;遍历sheet的每一行，加个索引就可以是 输出列的单元格上的数据&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\">#     # row = (&lt;Cell &#x27;android&#x27;.A1&gt;, &lt;Cell &#x27;android&#x27;.B1&gt;,...  &lt;Cell &#x27;android&#x27;.F1&gt;, &lt;Cell &#x27;android&#x27;.G1&gt;)</span></span><br><span class=\"line\"><span class=\"comment\">#     # row = (&lt;Cell &#x27;android&#x27;.A2&gt;, &lt;Cell &#x27;android&#x27;.B2&gt;,.... &lt;Cell &#x27;android&#x27;.F2&gt;, &lt;Cell &#x27;android&#x27;.G2&gt;)</span></span><br><span class=\"line\"><span class=\"comment\">#     print(row)</span></span><br><span class=\"line\"><span class=\"comment\"># print(row[0].value) # 输出第一列的所有单元格上的数据</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取所有列的数据【基于此加个索引也可以获取 某一行的单元格】=================================</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> col <span class=\"keyword\">in</span> sheet.columns:</span><br><span class=\"line\">    <span class=\"comment\"># col = (&lt;Cell &#x27;android&#x27;.A1&gt;, &lt;Cell &#x27;android&#x27;.A2&gt;, &lt;Cell &#x27;android&#x27;.A3&gt;,... &lt;Cell &#x27;android&#x27;.A214&gt;)</span></span><br><span class=\"line\">    <span class=\"comment\"># col = (&lt;Cell &#x27;android&#x27;.B1&gt;, &lt;Cell &#x27;android&#x27;.B2&gt;, &lt;Cell &#x27;android&#x27;.B3&gt;,... &lt;Cell &#x27;android&#x27;.B214&gt;)</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(col[<span class=\"number\">0</span>])  <span class=\"comment\"># 获取第一行的单元格</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除某个 Sheet</span></span><br><span class=\"line\"><span class=\"keyword\">del</span> wb[<span class=\"string\">&quot;IOS&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 保存修改的数据</span></span><br><span class=\"line\">wb.active = <span class=\"number\">0</span>  <span class=\"comment\"># 指定默认打开的是哪个Sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\">sheet.title = <span class=\"string\">&quot;android&quot;</span>  <span class=\"comment\"># Sheet 的名称</span></span><br><span class=\"line\">wb.save(<span class=\"string\">&quot;文件名.xlsx&quot;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-28/1622170794929-image.png\" alt=\"获取部分单元格\"></p>\n<h5 id=\"2-对齐方式\"><a href=\"#2-对齐方式\" class=\"headerlink\" title=\"2. 对齐方式\"></a>2. 对齐方式</h5><ul>\n<li><p>horizontal：水平方式对齐：<code>general</code>,<code>left</code>,<code>center</code>,<code>right</code>,<code>fill</code>,<code>justify</code>,<code>centerContinuous</code>,<code>distributed</code></p>\n</li>\n<li><p>vertical: 垂直方式对齐：<code>top</code>, <code>center</code>, <code>bottom</code>, <code>justify</code>, <code>distributed</code></p>\n</li>\n<li><p>text_rotation: 旋转角度</p>\n</li>\n<li><p>wrap_text：自动换行</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook, workbook,styles</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&quot;1.xlsx&quot;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>]  <span class=\"comment\"># 将第一个 Sheet对象赋给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 第6行第6列的单元格对象赋给 变量cell</span></span><br><span class=\"line\">cell = sheet.cell(<span class=\"number\">6</span>,<span class=\"number\">6</span>)</span><br><span class=\"line\">cell.alignment = styles.Alignment(horizontal=<span class=\"string\">&#x27;center&#x27;</span>,vertical=<span class=\"string\">&#x27;distributed&#x27;</span>, text_rotation=<span class=\"number\">45</span>, wrap_text=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">wb.save(<span class=\"string\">&#x27;1.xlsx&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h5 id=\"3-边框\"><a href=\"#3-边框\" class=\"headerlink\" title=\"3. 边框\"></a>3. 边框</h5><ul>\n<li>side的style有如下：<br> <code>dashDot</code>,<code>dashDotDot</code>, <code>dashed</code>,<code>dotted</code>,<pre><code>                      `double`,`hair`, `medium`, `mediumDashDot`, `mediumDashDotDot`,\n                      `mediumDashed`, `slantDashDot`, `thick`, `thin`\n</code></pre>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook, workbook,styles</span><br><span class=\"line\">  </span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&quot;1.xlsx&quot;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>]  <span class=\"comment\"># 将第一个 Sheet对象赋给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 第6行第6列的单元格对象赋给 变量cell</span></span><br><span class=\"line\">cell = sheet.cell(<span class=\"number\">6</span>,<span class=\"number\">6</span>)</span><br><span class=\"line\">cell.border = cell.alignment = styles.Border(top=styles.Side(style=<span class=\"string\">&#x27;thin&#x27;</span>,color=<span class=\"string\">&#x27;ffb6c1&#x27;</span>),</span><br><span class=\"line\">                               bottom=styles.Side(style=<span class=\"string\">&#x27;dashed&#x27;</span>,color=<span class=\"string\">&#x27;9932CC&#x27;</span>),</span><br><span class=\"line\">                               left=styles.Side(style=<span class=\"string\">&#x27;dashed&#x27;</span>,color=<span class=\"string\">&#x27;9932CC&#x27;</span>),</span><br><span class=\"line\">                               right=styles.Side(style=<span class=\"string\">&#x27;dashed&#x27;</span>,color=<span class=\"string\">&#x27;9932CC&#x27;</span>),</span><br><span class=\"line\">                               diagonal=styles.Side(style=<span class=\"string\">&#x27;dashed&#x27;</span>,color=<span class=\"string\">&#x27;483d8b&#x27;</span>), <span class=\"comment\"># 对角线</span></span><br><span class=\"line\">                               diagonalUp=<span class=\"literal\">True</span> <span class=\"comment\"># 左下 - 右上</span></span><br><span class=\"line\">                               <span class=\"comment\"># diagonalDown=True # 左上 - 右下)</span></span><br><span class=\"line\"></span><br><span class=\"line\">wb.save(<span class=\"string\">&#x27;1.xlsx&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h5 id=\"4-字体\"><a href=\"#4-字体\" class=\"headerlink\" title=\"4. 字体\"></a>4. 字体</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook, workbook,styles</span><br><span class=\"line\">  </span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&quot;1.xlsx&quot;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>] <span class=\"comment\"># 将第一个 Sheet对象赋给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 第6行第6列的单元格对象赋给 变量cell</span></span><br><span class=\"line\">cell = sheet.cell(<span class=\"number\">6</span>,<span class=\"number\">6</span>)</span><br><span class=\"line\">cell.font = styles.Font(name=<span class=\"string\">&quot;微软雅黑&quot;</span>,size=<span class=\"number\">16</span>,color=<span class=\"string\">&#x27;ff0000&#x27;</span>,underline=<span class=\"string\">&#x27;single&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">wb.save(<span class=\"string\">&#x27;1.xlsx&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"5-背景颜色\"><a href=\"#5-背景颜色\" class=\"headerlink\" title=\"5. 背景颜色\"></a>5. 背景颜色</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook, workbook,styles</span><br><span class=\"line\">  </span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&quot;1.xlsx&quot;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>] <span class=\"comment\"># 将第一个 Sheet对象赋给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 第6行第6列的单元格对象赋给 变量cell</span></span><br><span class=\"line\">cell = sheet.cell(<span class=\"number\">6</span>,<span class=\"number\">6</span>)</span><br><span class=\"line\">cell.fill = styles.PatternFill(<span class=\"string\">&#x27;solid&#x27;</span>,fgColor=<span class=\"string\">&#x27;99ccff&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">wb.save(<span class=\"string\">&#x27;1.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"6-渐近背景颜色\"><a href=\"#6-渐近背景颜色\" class=\"headerlink\" title=\"6. 渐近背景颜色\"></a>6. 渐近背景颜色</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook, workbook,styles</span><br><span class=\"line\">  </span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&quot;1.xlsx&quot;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>] <span class=\"comment\"># 将第一个 Sheet对象赋给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 第6行第6列的单元格对象赋给 变量cell</span></span><br><span class=\"line\">cell = sheet.cell(<span class=\"number\">6</span>,<span class=\"number\">6</span>)</span><br><span class=\"line\">cell.fill = styles.GradientFill(<span class=\"string\">&#x27;linear&#x27;</span>,stop=(<span class=\"string\">&#x27;FFFFFF&#x27;</span>,<span class=\"string\">&#x27;99ccff&#x27;</span>,<span class=\"string\">&#x27;000000&#x27;</span>)) <span class=\"comment\"># stop中的元素分别是 左中右的颜色</span></span><br><span class=\"line\"></span><br><span class=\"line\">wb.save(<span class=\"string\">&#x27;1.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"7-设置行高列宽的值【索引从-1-开始】\"><a href=\"#7-设置行高列宽的值【索引从-1-开始】\" class=\"headerlink\" title=\"7. 设置行高列宽的值【索引从 1 开始】\"></a>7. 设置行高列宽的值【索引从 1 开始】</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook, workbook,styles</span><br><span class=\"line\">  </span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&quot;1.xlsx&quot;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>] <span class=\"comment\"># 将第一个 Sheet对象赋给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\">sheet.row_dimensions[<span class=\"number\">2</span>].height = <span class=\"number\">50</span>  <span class=\"comment\"># 设置 第 2 行的 高度</span></span><br><span class=\"line\">sheet.column_dimensions[<span class=\"string\">&quot;E&quot;</span>].width = <span class=\"number\">100</span>  <span class=\"comment\"># 设置 第 E 列的 宽度</span></span><br><span class=\"line\"></span><br><span class=\"line\">wb.save(<span class=\"string\">&#x27;1.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"8-合并单元格\"><a href=\"#8-合并单元格\" class=\"headerlink\" title=\"8. 合并单元格\"></a>8. 合并单元格</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook, workbook,styles</span><br><span class=\"line\">  </span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&quot;1.xlsx&quot;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>] <span class=\"comment\"># 将第一个 Sheet对象赋给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\">sheet.merge_cells(<span class=\"string\">&quot;b2:d8&quot;</span>)</span><br><span class=\"line\">sheet.merge_cell(start_row=<span class=\"number\">15</span>, start_column=<span class=\"number\">3</span>, end_row=<span class=\"number\">18</span>, end_cloumn=<span class=\"number\">8</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解除合并</span></span><br><span class=\"line\">sheet.unmerge_cells(<span class=\"string\">&quot;b2:d8&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">wb.save(<span class=\"string\">&#x27;1.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n\n<h5 id=\"9-插入公式\"><a href=\"#9-插入公式\" class=\"headerlink\" title=\"9. 插入公式\"></a>9. 插入公式</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook, workbook,styles</span><br><span class=\"line\">  </span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&quot;1.xlsx&quot;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>] <span class=\"comment\"># 将第一个 Sheet对象赋给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 插入公式的写法相当于是写入值到单元格中</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> workbook, load_workbook</span><br><span class=\"line\"></span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&#x27;2.xlsx&#x27;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用方式一选中单元格对象，然后使用该对象的 value 属性进行将公式写进去【必须带上value属性】</span></span><br><span class=\"line\">cell = sheet.cell(<span class=\"number\">1</span>, <span class=\"number\">3</span>)</span><br><span class=\"line\">cell.value = <span class=\"string\">&quot;=a1+b1&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">wb.save(<span class=\"string\">&quot;2.xlsx&quot;</span>)</span><br><span class=\"line\">wb.close()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"10-选取部分区域\"><a href=\"#10-选取部分区域\" class=\"headerlink\" title=\"10. 选取部分区域\"></a>10. 选取部分区域</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook</span><br><span class=\"line\"></span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&#x27;2.xlsx&#x27;</span>)</span><br><span class=\"line\">sheet = wb.worksheet[<span class=\"number\">0</span>]  <span class=\"comment\"># 操作 第一个 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># for i in sheet.iter_rows(min_col=1, min_row=5,max_col=7, max_row=10):</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    参数说明：</span></span><br><span class=\"line\"><span class=\"string\">      1. min_col: 最小列数</span></span><br><span class=\"line\"><span class=\"string\">      2. min_row: 最小行数</span></span><br><span class=\"line\"><span class=\"string\">      </span></span><br><span class=\"line\"><span class=\"string\">      3. max_col: 最大列数</span></span><br><span class=\"line\"><span class=\"string\">      4. max_row: 最大行数</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n\n<h6 id=\"10-1-截取部分，使用案例一：\"><a href=\"#10-1-截取部分，使用案例一：\" class=\"headerlink\" title=\"10.1 截取部分，使用案例一：\"></a>10.1 截取部分，使用案例一：</h6><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook</span><br><span class=\"line\"></span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&#x27;2.xlsx&#x27;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 截取部分区域</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> cell <span class=\"keyword\">in</span> sheet.iter_cols(min_row=<span class=\"number\">1</span>, max_row=<span class=\"number\">3</span>, min_col=<span class=\"number\">1</span>, max_col=<span class=\"number\">2</span>):  <span class=\"comment\"># 从 第一行 到 第三行，从第一列 到 第二列</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    迭代行数，cell = (&lt;Cell &#x27;Sheet1&#x27;.A1&gt;, &lt;Cell &#x27;Sheet1&#x27;.A2&gt;, &lt;Cell &#x27;Sheet1&#x27;.A3&gt;)</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(cell)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> cell <span class=\"keyword\">in</span> sheet[<span class=\"string\">&#x27;b2&#x27;</span>:<span class=\"string\">&#x27;c6&#x27;</span>]:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(cell)</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-28/1622191208356-image.png\" alt=\" 截取部分，使用案例一\"></p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-5-28/1622192257969-image.png\" alt=\"截取部分，使用案例一\"></p>\n<h5 id=\"11-删除-sheet-delete-rows-idx-amount-、sheet-delete-cols-idx-amount\"><a href=\"#11-删除-sheet-delete-rows-idx-amount-、sheet-delete-cols-idx-amount\" class=\"headerlink\" title=\"11. 删除 sheet.delete_rows(idx,amount)、sheet.delete_cols(idx,amount)\"></a>11. 删除 <code>sheet.delete_rows(idx,amount)</code>、<code>sheet.delete_cols(idx,amount)</code></h5><ul>\n<li>参数说明：<ol>\n<li>idx：要删除的索引位置</li>\n<li>amount：从索引位置开始要删除的个数【 默认为1 】<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook</span><br><span class=\"line\"></span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&#x27;2.xlsx&#x27;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>]  <span class=\"comment\"># 将工作表对象 赋 给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\">sheet.delete_cols(idx=<span class=\"number\">1</span>,amount=<span class=\"number\">1</span>)</span><br><span class=\"line\">sheet.delete_rows(idx=<span class=\"number\">1</span>,amount=<span class=\"number\">1</span>)</span><br><span class=\"line\">wb.save(<span class=\"string\">&#x27;2.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ul>\n<h5 id=\"12-插入-sheet-insert-rows-idx-amount-、sheet-insert-cols-idx-amount\"><a href=\"#12-插入-sheet-insert-rows-idx-amount-、sheet-insert-cols-idx-amount\" class=\"headerlink\" title=\"12. 插入 sheet.insert_rows(idx,amount)、sheet.insert_cols(idx,amount)\"></a>12. 插入 <code>sheet.insert_rows(idx,amount)</code>、<code>sheet.insert_cols(idx,amount)</code></h5><ul>\n<li>参数说明：<ol>\n<li>idx：要插入的索引位置</li>\n<li>amount：从索引位置开始要插入的个数【 默认为1 】<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook</span><br><span class=\"line\"></span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&#x27;2.xlsx&#x27;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>]  <span class=\"comment\"># 将工作表对象 赋 给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\">sheet.insert_rows(idx=<span class=\"number\">5</span>,amount=<span class=\"number\">10</span>)</span><br><span class=\"line\">sheet.insert_cols(idx=<span class=\"number\">3</span>,amount=<span class=\"number\">2</span>)</span><br><span class=\"line\">wb.save(<span class=\"string\">&#x27;2.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ul>\n<h5 id=\"13-移动-sheet-move-range-quot-H2-J10-quot-rows-1-cols-15\"><a href=\"#13-移动-sheet-move-range-quot-H2-J10-quot-rows-1-cols-15\" class=\"headerlink\" title=\"13. 移动 sheet.move_range(&quot;H2:J10&quot;, rows=-1, cols=15)\"></a>13. 移动 <code>sheet.move_range(&quot;H2:J10&quot;, rows=-1, cols=15)</code></h5><ul>\n<li><p>参数说明：</p>\n<ol>\n<li>第一个字符串类型的参数：选中的Excel表格的区域 <code>&quot;H2:J10&quot;</code></li>\n<li>rows = -1 : 向上移动1个位置、rows = 1 ：向下移动 1 行</li>\n<li>cols = 15 : 向右移动15个位置<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook</span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&#x27;2.xlsx&#x27;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>]  <span class=\"comment\"># 将工作表对象 赋 给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\">sheet.move_range(<span class=\"string\">&quot;H2:J10&quot;</span>, rows=-<span class=\"number\">1</span>, cols=<span class=\"number\">15</span>)</span><br><span class=\"line\">wb.save(<span class=\"string\">&#x27;2.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<h6 id=\"13-1-移动的区域中的单元格显示的数据是-写入公式的出来的结果\"><a href=\"#13-1-移动的区域中的单元格显示的数据是-写入公式的出来的结果\" class=\"headerlink\" title=\"13.1 移动的区域中的单元格显示的数据是 写入公式的出来的结果\"></a>13.1 移动的区域中的单元格显示的数据是 写入公式的出来的结果</h6></li>\n</ol>\n</li>\n<li><p>假如 ：c1 单元格的数据是 由 a1 * b1 相乘的来的也就是公式：<code>=a1*b1</code></p>\n<p>现在要将 a1 到 c1 的数据向右移动 n 列，那么若想公式随着位置的移动而改变，需要在 <code>move_range</code> 方法中添加个参数并且改为 <code>True</code> </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> openpyxl <span class=\"keyword\">import</span> load_workbook</span><br><span class=\"line\">wb = load_workbook(<span class=\"string\">&#x27;2.xlsx&#x27;</span>)</span><br><span class=\"line\">sheet = wb.worksheets[<span class=\"number\">0</span>]  <span class=\"comment\"># 将工作表对象 赋 给 变量 sheet</span></span><br><span class=\"line\"></span><br><span class=\"line\">sheet.move_range(<span class=\"string\">&quot;a1:c3&quot;</span>, cols=<span class=\"number\">15</span>, translate=<span class=\"literal\">True</span>)</span><br><span class=\"line\"><span class=\"comment\"># True 相当于随着源数据单元格的变动而改变</span></span><br><span class=\"line\"></span><br><span class=\"line\">wb.save(<span class=\"string\">&#x27;2.xlsx&#x27;</span>)</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"Windows常用技巧","date":"2021-05-29T11:14:20.000Z","from":"原创","url":null,"author":"p0ny","about":"一穷二白","avatar":null,"comments":1,"description":"Windows常用技巧","sticky":1,"_content":"\n#### 1. 手动驱动备份【需要管理员权限】\n\n> 参考：`http://www.baiyunxitong.com/jiaocheng/4786.html` \n\n使用 win+r  输入 cmd，跳出命令提示符窗口然后输入以下命令，来提升为 管理员权限\n\n`runas /user:administrator cmd` \n\n如果出现\n\n![image-20210301000731586](https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/cmd%E6%8F%90%E5%8D%87%E4%B8%BA%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E9%94%99%E8%AF%AF.png)\n\n* 很大可能是 Administrator账户的密码为空的。\n\n    解决方式：\n\n    1. win+r 输入 `compmgmt.msc` \n\n        ![image-20210301001027050](https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/%E6%8F%90%E5%8D%87%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8Fstep1.png)\n\n         \n\n    2.  点击 ”用户“\n\n         ![image-20210301001239472](https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/%E6%8F%90%E5%8D%87%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8Fstep2.png)\n\n         \n\n    3. 右键点击  “设置密码”\n\n        ![image-20210301001616934](https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/%E6%8F%90%E5%8D%87%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8Fstep3.png)\n\n         \n\n    4. 效果图\n\n        ![image-20210301001820364](https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/%E6%8F%90%E5%8D%87%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8F%E6%95%88%E6%9E%9C%E5%9B%BE.png)\n\n         \n\n最后使用命令 `dism /online /export-driver /destination:目标文件夹路径` \n\n![image-20210301002109435](https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/cmd%E6%89%8B%E5%8A%A8%E5%A4%87%E4%BB%BD%E9%A9%B1%E5%8A%A8.png)\n\n\n\n#### 2. 手动还原驱动命令【需要管理员权限】\n\n`dism /online /Add-Driver /Driver:目标文件夹路径 /Recurse` \n\n![image-20210301002630148](https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/%E8%BF%98%E5%8E%9F%E9%A9%B1%E5%8A%A8%E5%91%BD%E4%BB%A4.png)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/Windows常用技巧.md","raw":"---\ntitle: Windows常用技巧\ndate: 2021-05-29 19:14:20\n# 文章出处名称 #\nfrom: 原创\n# 文章出处链接 #\nurl:\n# 文章作者名称 #\nauthor: p0ny\n# 文章作者签名 #\nabout: 一穷二白\n# 文章作者头像 #\navatar: \n# 是否开启评论 #\ncomments: true\n# 文章标签 #\ntags: Windows\n# 文章分类 #\ncategories: Windows常用技巧\n# 文章摘要 #\ndescription: Windows常用技巧\n# 文章置顶 #\nsticky: 1\n---\n\n#### 1. 手动驱动备份【需要管理员权限】\n\n> 参考：`http://www.baiyunxitong.com/jiaocheng/4786.html` \n\n使用 win+r  输入 cmd，跳出命令提示符窗口然后输入以下命令，来提升为 管理员权限\n\n`runas /user:administrator cmd` \n\n如果出现\n\n![image-20210301000731586](https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/cmd%E6%8F%90%E5%8D%87%E4%B8%BA%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E9%94%99%E8%AF%AF.png)\n\n* 很大可能是 Administrator账户的密码为空的。\n\n    解决方式：\n\n    1. win+r 输入 `compmgmt.msc` \n\n        ![image-20210301001027050](https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/%E6%8F%90%E5%8D%87%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8Fstep1.png)\n\n         \n\n    2.  点击 ”用户“\n\n         ![image-20210301001239472](https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/%E6%8F%90%E5%8D%87%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8Fstep2.png)\n\n         \n\n    3. 右键点击  “设置密码”\n\n        ![image-20210301001616934](https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/%E6%8F%90%E5%8D%87%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8Fstep3.png)\n\n         \n\n    4. 效果图\n\n        ![image-20210301001820364](https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/%E6%8F%90%E5%8D%87%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8F%E6%95%88%E6%9E%9C%E5%9B%BE.png)\n\n         \n\n最后使用命令 `dism /online /export-driver /destination:目标文件夹路径` \n\n![image-20210301002109435](https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/cmd%E6%89%8B%E5%8A%A8%E5%A4%87%E4%BB%BD%E9%A9%B1%E5%8A%A8.png)\n\n\n\n#### 2. 手动还原驱动命令【需要管理员权限】\n\n`dism /online /Add-Driver /Driver:目标文件夹路径 /Recurse` \n\n![image-20210301002630148](https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/%E8%BF%98%E5%8E%9F%E9%A9%B1%E5%8A%A8%E5%91%BD%E4%BB%A4.png)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"Windows常用技巧","published":1,"updated":"2021-06-01T01:09:14.075Z","layout":"post","photos":[],"link":"","_id":"cks8acfks000nycvm5fgggnh1","content":"<h4 id=\"1-手动驱动备份【需要管理员权限】\"><a href=\"#1-手动驱动备份【需要管理员权限】\" class=\"headerlink\" title=\"1. 手动驱动备份【需要管理员权限】\"></a>1. 手动驱动备份【需要管理员权限】</h4><blockquote>\n<p>参考：<code>http://www.baiyunxitong.com/jiaocheng/4786.html</code> </p>\n</blockquote>\n<p>使用 win+r  输入 cmd，跳出命令提示符窗口然后输入以下命令，来提升为 管理员权限</p>\n<p><code>runas /user:administrator cmd</code> </p>\n<p>如果出现</p>\n<p><img src=\"https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/cmd%E6%8F%90%E5%8D%87%E4%B8%BA%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E9%94%99%E8%AF%AF.png\" alt=\"image-20210301000731586\"></p>\n<ul>\n<li><p>很大可能是 Administrator账户的密码为空的。</p>\n<p>  解决方式：</p>\n<ol>\n<li><p>win+r 输入 <code>compmgmt.msc</code> </p>\n<p> <img src=\"https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/%E6%8F%90%E5%8D%87%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8Fstep1.png\" alt=\"image-20210301001027050\"></p>\n</li>\n<li><p>点击 ”用户“</p>\n<p>  <img src=\"https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/%E6%8F%90%E5%8D%87%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8Fstep2.png\" alt=\"image-20210301001239472\"></p>\n</li>\n<li><p>右键点击  “设置密码”</p>\n<p> <img src=\"https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/%E6%8F%90%E5%8D%87%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8Fstep3.png\" alt=\"image-20210301001616934\"></p>\n</li>\n<li><p>效果图</p>\n<p> <img src=\"https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/%E6%8F%90%E5%8D%87%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8F%E6%95%88%E6%9E%9C%E5%9B%BE.png\" alt=\"image-20210301001820364\"></p>\n</li>\n</ol>\n</li>\n</ul>\n<p>最后使用命令 <code>dism /online /export-driver /destination:目标文件夹路径</code> </p>\n<p><img src=\"https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/cmd%E6%89%8B%E5%8A%A8%E5%A4%87%E4%BB%BD%E9%A9%B1%E5%8A%A8.png\" alt=\"image-20210301002109435\"></p>\n<h4 id=\"2-手动还原驱动命令【需要管理员权限】\"><a href=\"#2-手动还原驱动命令【需要管理员权限】\" class=\"headerlink\" title=\"2. 手动还原驱动命令【需要管理员权限】\"></a>2. 手动还原驱动命令【需要管理员权限】</h4><p><code>dism /online /Add-Driver /Driver:目标文件夹路径 /Recurse</code> </p>\n<p><img src=\"https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/%E8%BF%98%E5%8E%9F%E9%A9%B1%E5%8A%A8%E5%91%BD%E4%BB%A4.png\" alt=\"image-20210301002630148\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"1-手动驱动备份【需要管理员权限】\"><a href=\"#1-手动驱动备份【需要管理员权限】\" class=\"headerlink\" title=\"1. 手动驱动备份【需要管理员权限】\"></a>1. 手动驱动备份【需要管理员权限】</h4><blockquote>\n<p>参考：<code>http://www.baiyunxitong.com/jiaocheng/4786.html</code> </p>\n</blockquote>\n<p>使用 win+r  输入 cmd，跳出命令提示符窗口然后输入以下命令，来提升为 管理员权限</p>\n<p><code>runas /user:administrator cmd</code> </p>\n<p>如果出现</p>\n<p><img src=\"https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/cmd%E6%8F%90%E5%8D%87%E4%B8%BA%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E9%94%99%E8%AF%AF.png\" alt=\"image-20210301000731586\"></p>\n<ul>\n<li><p>很大可能是 Administrator账户的密码为空的。</p>\n<p>  解决方式：</p>\n<ol>\n<li><p>win+r 输入 <code>compmgmt.msc</code> </p>\n<p> <img src=\"https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/%E6%8F%90%E5%8D%87%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8Fstep1.png\" alt=\"image-20210301001027050\"></p>\n</li>\n<li><p>点击 ”用户“</p>\n<p>  <img src=\"https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/%E6%8F%90%E5%8D%87%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8Fstep2.png\" alt=\"image-20210301001239472\"></p>\n</li>\n<li><p>右键点击  “设置密码”</p>\n<p> <img src=\"https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/%E6%8F%90%E5%8D%87%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8Fstep3.png\" alt=\"image-20210301001616934\"></p>\n</li>\n<li><p>效果图</p>\n<p> <img src=\"https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/%E6%8F%90%E5%8D%87%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90%E8%A7%A3%E5%86%B3%E6%96%B9%E5%BC%8F%E6%95%88%E6%9E%9C%E5%9B%BE.png\" alt=\"image-20210301001820364\"></p>\n</li>\n</ol>\n</li>\n</ul>\n<p>最后使用命令 <code>dism /online /export-driver /destination:目标文件夹路径</code> </p>\n<p><img src=\"https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/cmd%E6%89%8B%E5%8A%A8%E5%A4%87%E4%BB%BD%E9%A9%B1%E5%8A%A8.png\" alt=\"image-20210301002109435\"></p>\n<h4 id=\"2-手动还原驱动命令【需要管理员权限】\"><a href=\"#2-手动还原驱动命令【需要管理员权限】\" class=\"headerlink\" title=\"2. 手动还原驱动命令【需要管理员权限】\"></a>2. 手动还原驱动命令【需要管理员权限】</h4><p><code>dism /online /Add-Driver /Driver:目标文件夹路径 /Recurse</code> </p>\n<p><img src=\"https://gitee.com/coder_p0ny/Typora_img/raw/master/Java/img/%E8%BF%98%E5%8E%9F%E9%A9%B1%E5%8A%A8%E5%91%BD%E4%BB%A4.png\" alt=\"image-20210301002630148\"></p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2021-08-11T14:56:44.626Z","updated":"2021-06-01T01:13:44.166Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cks8acfkv000rycvm60dmdb33","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"从Gitee仓库拉取原有的 blog","date":"2021-06-01T01:37:14.000Z","from":"原创","url":null,"author":"p0ny","about":"一穷二白","avatar":null,"comments":1,"description":"从Gitee仓库拉取原有的 blog","sticky":1,"_content":"## 从Gitee仓库拉取原有的 blog\n>1. `git clone https://gitee.com/coder_p0ny/blog.git` 拉取项目\n>2. 另外新建一个文件夹作为 blog 的根目录，然后该目录下是空白的，直接在该目录下 打开 git终端，然后输入命令 `hexo init` 初始化 hexo,生成 blog 模板，然后再将第一步拉取的blog中的所有文件复制到新建的文件夹中，替换所有相同的文件\n>3. 然后执行命令 `hexo s --debug`  开启服务\n>4. 浏览器访问 `http://localhost:4000` 即可","source":"_posts/从Gitee仓库拉取原有的 blog.md","raw":"---\ntitle: 从Gitee仓库拉取原有的 blog\ndate: 2021-06-01 9:37:14\n# 文章出处名称 #\nfrom: 原创\n# 文章出处链接 #\nurl:\n# 文章作者名称 #\nauthor: p0ny\n# 文章作者签名 #\nabout: 一穷二白\n# 文章作者头像 #\navatar: \n# 是否开启评论 #\ncomments: true\n# 文章标签 #\ntags: Git hexo\n# 文章分类 #\ncategories: Git\n# 文章摘要 #\ndescription: 从Gitee仓库拉取原有的 blog\n# 文章置顶 #\nsticky: 1\n---\n## 从Gitee仓库拉取原有的 blog\n>1. `git clone https://gitee.com/coder_p0ny/blog.git` 拉取项目\n>2. 另外新建一个文件夹作为 blog 的根目录，然后该目录下是空白的，直接在该目录下 打开 git终端，然后输入命令 `hexo init` 初始化 hexo,生成 blog 模板，然后再将第一步拉取的blog中的所有文件复制到新建的文件夹中，替换所有相同的文件\n>3. 然后执行命令 `hexo s --debug`  开启服务\n>4. 浏览器访问 `http://localhost:4000` 即可","slug":"从Gitee仓库拉取原有的 blog","published":1,"updated":"2021-06-01T01:37:58.055Z","layout":"post","photos":[],"link":"","_id":"cks8acfkx000tycvmhjaxe23o","content":"<h2 id=\"从Gitee仓库拉取原有的-blog\"><a href=\"#从Gitee仓库拉取原有的-blog\" class=\"headerlink\" title=\"从Gitee仓库拉取原有的 blog\"></a>从Gitee仓库拉取原有的 blog</h2><blockquote>\n<ol>\n<li><code>git clone https://gitee.com/coder_p0ny/blog.git</code> 拉取项目</li>\n<li>另外新建一个文件夹作为 blog 的根目录，然后该目录下是空白的，直接在该目录下 打开 git终端，然后输入命令 <code>hexo init</code> 初始化 hexo,生成 blog 模板，然后再将第一步拉取的blog中的所有文件复制到新建的文件夹中，替换所有相同的文件</li>\n<li>然后执行命令 <code>hexo s --debug</code>  开启服务</li>\n<li>浏览器访问 <code>http://localhost:4000</code> 即可</li>\n</ol>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"从Gitee仓库拉取原有的-blog\"><a href=\"#从Gitee仓库拉取原有的-blog\" class=\"headerlink\" title=\"从Gitee仓库拉取原有的 blog\"></a>从Gitee仓库拉取原有的 blog</h2><blockquote>\n<ol>\n<li><code>git clone https://gitee.com/coder_p0ny/blog.git</code> 拉取项目</li>\n<li>另外新建一个文件夹作为 blog 的根目录，然后该目录下是空白的，直接在该目录下 打开 git终端，然后输入命令 <code>hexo init</code> 初始化 hexo,生成 blog 模板，然后再将第一步拉取的blog中的所有文件复制到新建的文件夹中，替换所有相同的文件</li>\n<li>然后执行命令 <code>hexo s --debug</code>  开启服务</li>\n<li>浏览器访问 <code>http://localhost:4000</code> 即可</li>\n</ol>\n</blockquote>\n"},{"title":"清除BIOS界面密码","date":"2021-07-23T01:09:36.000Z","from":"吾爱","url":"https://www.52pojie.cn/forum.php?mod=viewthread&tid=1480545&extra=page%3D3%26filter%3Dspecialtype%26specialtype%3Dreward","author":"爱友","about":"一穷二白","avatar":null,"comments":1,"description":"BIOS","sticky":1,"_content":"## 笔记本电脑设置BIOS界面密码，但是密码忘记了\n\n>> bios密码可以通过下面的网站解决，\n把bios界面上显示的几位输入网站内，之后网站会给你一组，一定要**区分好大小写**，之后**输入到密码输入框当中按Ctrl+回车** 轻松解决\n\n`https://bios-pw.org/`","source":"_posts/清除BIOS界面密码.md","raw":"---\ntitle: 清除BIOS界面密码\ndate: 2021-07-23 09:09:36\n# 文章出处名称 #\nfrom: 吾爱\n# 文章出处链接 #\nurl: https://www.52pojie.cn/forum.php?mod=viewthread&tid=1480545&extra=page%3D3%26filter%3Dspecialtype%26specialtype%3Dreward\n# 文章作者名称 #\nauthor: 爱友\n# 文章作者签名 #\nabout: 一穷二白\n# 文章作者头像 #\navatar:\n# 是否开启评论 #\ncomments: true\n# 文章标签 #\ntags: Windows\n# 文章分类 #\ncategories: Windows常用技巧\n# 文章摘要 #\ndescription: BIOS\n# 文章置顶 #\nsticky: 1\n---\n## 笔记本电脑设置BIOS界面密码，但是密码忘记了\n\n>> bios密码可以通过下面的网站解决，\n把bios界面上显示的几位输入网站内，之后网站会给你一组，一定要**区分好大小写**，之后**输入到密码输入框当中按Ctrl+回车** 轻松解决\n\n`https://bios-pw.org/`","slug":"清除BIOS界面密码","published":1,"updated":"2021-07-23T01:18:04.726Z","layout":"post","photos":[],"link":"","_id":"cks8acfkz000xycvm2sps8f53","content":"<h2 id=\"笔记本电脑设置BIOS界面密码，但是密码忘记了\"><a href=\"#笔记本电脑设置BIOS界面密码，但是密码忘记了\" class=\"headerlink\" title=\"笔记本电脑设置BIOS界面密码，但是密码忘记了\"></a>笔记本电脑设置BIOS界面密码，但是密码忘记了</h2><blockquote>\n<blockquote>\n<p>bios密码可以通过下面的网站解决，<br>把bios界面上显示的几位输入网站内，之后网站会给你一组，一定要<strong>区分好大小写</strong>，之后<strong>输入到密码输入框当中按Ctrl+回车</strong> 轻松解决</p>\n</blockquote>\n</blockquote>\n<p><code>https://bios-pw.org/</code></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"笔记本电脑设置BIOS界面密码，但是密码忘记了\"><a href=\"#笔记本电脑设置BIOS界面密码，但是密码忘记了\" class=\"headerlink\" title=\"笔记本电脑设置BIOS界面密码，但是密码忘记了\"></a>笔记本电脑设置BIOS界面密码，但是密码忘记了</h2><blockquote>\n<blockquote>\n<p>bios密码可以通过下面的网站解决，<br>把bios界面上显示的几位输入网站内，之后网站会给你一组，一定要<strong>区分好大小写</strong>，之后<strong>输入到密码输入框当中按Ctrl+回车</strong> 轻松解决</p>\n</blockquote>\n</blockquote>\n<p><code>https://bios-pw.org/</code></p>\n"},{"title":"【Android】控件的基本属性","date":"2021-06-02T12:58:01.000Z","from":"原创","url":null,"author":"p0ny","about":"一穷二白","avatar":null,"comments":1,"description":"Empty Application","sticky":1,"_content":"\n# Android First Empty Application\n#### 控件的基本属性\n|属性名|作用|\n|--|--|\n|android:layout_width|控件的宽度【match_parent、123dp】|\n|android:layout_height|控件的高度【match_parent、123dp】|\n|android:text|控件文本内容|\n|android:textColor|字体颜色【#00000000】|\n|android:textSize|字体大小 【40sp】|\n|android:textStyle|字体样式【粗体(blod)、italic(斜体)】|\n|android:gravity|该控件对象的内容对齐方式【center_vertical(垂直居中)】|\n\n![展示下拉框选项](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-2/1622616032232-image.png)\n\n\n![下拉框各个选项](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-2/1622616086067-image.png)\n\n\n\n\n\n### 创建一个 Empty Application 项目\n\n将 路径 `...\\项目名\\app\\src\\main\\java\\com\\example\\myfirstapp`下的 `MainActivity.java`文件的内容，替换以下内容\n\n`MainActivity.java`\n\n```java\npackage com.example.myfirstapp;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.annotation.SuppressLint;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.TextView;\n\npublic class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        TextView tv_one = findViewById(R.id.tv_one);\n        tv_one.setText(\"Hello World\");\n        // 使用 Java代码获取控件对象，然后给该对象设置文本内容，\n        // 若在xml文件中设置了该控件的文本，运行java代码后会覆盖xml 中的内容\n    }\n}\n```\n\n<br>\n<br>\n\n\n\n将路径 `...\\项目名\\app\\src\\main\\res\\layout\\` 下的 `activity_main.xml` 文件的内容  替换成  以下内容\n\n`activity_main.xml`\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?><!--<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"-->\n<!--    xmlns:app=\"http://schemas.android.com/apk/res-auto\"-->\n<!--    xmlns:tools=\"http://schemas.android.com/tools\"-->\n<!--    android:layout_width=\"match_parent\"-->\n<!--    android:layout_height=\"match_parent\"-->\n<!--    tools:context=\".MainActivity\">-->\n\n<!--    <TextView-->\n<!--        android:layout_width=\"wrap_content\"-->\n<!--        android:layout_height=\"wrap_content\"-->\n<!--        android:text=\"Hello World!\"-->\n<!--        app:layout_constraintBottom_toBottomOf=\"parent\"-->\n<!--        app:layout_constraintLeft_toLeftOf=\"parent\"-->\n<!--        app:layout_constraintRight_toRightOf=\"parent\"-->\n<!--        app:layout_constraintTop_toTopOf=\"parent\" />-->\n\n<!--</androidx.constraintlayout.widget.ConstraintLayout>-->\n<!--此 XML 文件定义了 activity 界面 (UI) 的布局。它包含一个 TextView 元素，其中具有“Hello, World!”文本-->\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n\n    <TextView\n        android:gravity=\"center_vertical\"\n        android:id=\"@+id/tv_one\"\n        android:layout_width=\"843dp\"\n        android:layout_height=\"400dp\"\n        android:text=\"看不到我\"\n        android:textColor=\"#FF000000\"\n        android:textSize=\"90sp\"\n        android:textStyle=\"bold\">\n        <!--\n        android:layout_width=\"match_parent\"\n            TextView 控件 的宽度 由 LineLayout容器决定，LineLayout容器多宽，TextView控件就有多宽\n\n        android:layout_width=\"wrap_content\"\n            TextView 控件 的宽度 由 TextView控件的内容决定。\n        同理 高度也是一样的\n\n        android:id=\"@+id/tv_one\"\n                该属性的作用是，让 java 代码可以根据 id 属性值 获取 控件对象\n\n\n        android:layout_width=\"200dp\"\n            该属性值可以使用数字来 赋值\n\n                参数 的值 按住 ctrl 不放 鼠标左键点击\n                可以看到有三个参数值，其中一个【fill_parent】已经被弃用的\n\n                剩余两个参数值分别是：\n                    1. wrap_content : 根据 TextView里面控件的内容 分配\n                    2. match_parent ： 大小根据取决于 LinearLaout 容器\n                    3. fill_parent ： 已经过时\n\n\n        android:textColor=\"#00000000\"\n            设置字体颜色\n            前面两个 零含义：颜色的透明度 ，00 为纯透明 FF为 不透明\n            依次往后两个 零：代表 R(00)G(00)B(00) 红绿蓝\n\n        android:textStyle=\"bold\"\n            设置字体\n            normal ：无效果\n            bold ：  粗体\n            italic ：斜体\n\n        android:gravity=\"center_vertical\"\n            该控件对象的内容的对齐方式\n        -->\n\n    </TextView>\n\n</LinearLayout>\n```\n\n\n","source":"_posts/【Android 控件的基本属性】.md","raw":"---\ntitle: 【Android】控件的基本属性\ndate: 2021-06-02 20:58:01\n# 文章出处名称 #\nfrom: 原创\n# 文章出处链接 #\nurl:\n# 文章作者名称 #\nauthor: p0ny\n# 文章作者签名 #\nabout: 一穷二白\n# 文章作者头像 #\navatar: \n# 是否开启评论 #\ncomments: true\n# 文章标签 #\ntags: Android Studio\n# 文章分类 #\ncategories: Android\n# 文章摘要 #\ndescription: Empty Application\n# 文章置顶 #\nsticky: 1\n---\n\n# Android First Empty Application\n#### 控件的基本属性\n|属性名|作用|\n|--|--|\n|android:layout_width|控件的宽度【match_parent、123dp】|\n|android:layout_height|控件的高度【match_parent、123dp】|\n|android:text|控件文本内容|\n|android:textColor|字体颜色【#00000000】|\n|android:textSize|字体大小 【40sp】|\n|android:textStyle|字体样式【粗体(blod)、italic(斜体)】|\n|android:gravity|该控件对象的内容对齐方式【center_vertical(垂直居中)】|\n\n![展示下拉框选项](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-2/1622616032232-image.png)\n\n\n![下拉框各个选项](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-2/1622616086067-image.png)\n\n\n\n\n\n### 创建一个 Empty Application 项目\n\n将 路径 `...\\项目名\\app\\src\\main\\java\\com\\example\\myfirstapp`下的 `MainActivity.java`文件的内容，替换以下内容\n\n`MainActivity.java`\n\n```java\npackage com.example.myfirstapp;\n\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport android.annotation.SuppressLint;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.TextView;\n\npublic class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        TextView tv_one = findViewById(R.id.tv_one);\n        tv_one.setText(\"Hello World\");\n        // 使用 Java代码获取控件对象，然后给该对象设置文本内容，\n        // 若在xml文件中设置了该控件的文本，运行java代码后会覆盖xml 中的内容\n    }\n}\n```\n\n<br>\n<br>\n\n\n\n将路径 `...\\项目名\\app\\src\\main\\res\\layout\\` 下的 `activity_main.xml` 文件的内容  替换成  以下内容\n\n`activity_main.xml`\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?><!--<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"-->\n<!--    xmlns:app=\"http://schemas.android.com/apk/res-auto\"-->\n<!--    xmlns:tools=\"http://schemas.android.com/tools\"-->\n<!--    android:layout_width=\"match_parent\"-->\n<!--    android:layout_height=\"match_parent\"-->\n<!--    tools:context=\".MainActivity\">-->\n\n<!--    <TextView-->\n<!--        android:layout_width=\"wrap_content\"-->\n<!--        android:layout_height=\"wrap_content\"-->\n<!--        android:text=\"Hello World!\"-->\n<!--        app:layout_constraintBottom_toBottomOf=\"parent\"-->\n<!--        app:layout_constraintLeft_toLeftOf=\"parent\"-->\n<!--        app:layout_constraintRight_toRightOf=\"parent\"-->\n<!--        app:layout_constraintTop_toTopOf=\"parent\" />-->\n\n<!--</androidx.constraintlayout.widget.ConstraintLayout>-->\n<!--此 XML 文件定义了 activity 界面 (UI) 的布局。它包含一个 TextView 元素，其中具有“Hello, World!”文本-->\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n\n    <TextView\n        android:gravity=\"center_vertical\"\n        android:id=\"@+id/tv_one\"\n        android:layout_width=\"843dp\"\n        android:layout_height=\"400dp\"\n        android:text=\"看不到我\"\n        android:textColor=\"#FF000000\"\n        android:textSize=\"90sp\"\n        android:textStyle=\"bold\">\n        <!--\n        android:layout_width=\"match_parent\"\n            TextView 控件 的宽度 由 LineLayout容器决定，LineLayout容器多宽，TextView控件就有多宽\n\n        android:layout_width=\"wrap_content\"\n            TextView 控件 的宽度 由 TextView控件的内容决定。\n        同理 高度也是一样的\n\n        android:id=\"@+id/tv_one\"\n                该属性的作用是，让 java 代码可以根据 id 属性值 获取 控件对象\n\n\n        android:layout_width=\"200dp\"\n            该属性值可以使用数字来 赋值\n\n                参数 的值 按住 ctrl 不放 鼠标左键点击\n                可以看到有三个参数值，其中一个【fill_parent】已经被弃用的\n\n                剩余两个参数值分别是：\n                    1. wrap_content : 根据 TextView里面控件的内容 分配\n                    2. match_parent ： 大小根据取决于 LinearLaout 容器\n                    3. fill_parent ： 已经过时\n\n\n        android:textColor=\"#00000000\"\n            设置字体颜色\n            前面两个 零含义：颜色的透明度 ，00 为纯透明 FF为 不透明\n            依次往后两个 零：代表 R(00)G(00)B(00) 红绿蓝\n\n        android:textStyle=\"bold\"\n            设置字体\n            normal ：无效果\n            bold ：  粗体\n            italic ：斜体\n\n        android:gravity=\"center_vertical\"\n            该控件对象的内容的对齐方式\n        -->\n\n    </TextView>\n\n</LinearLayout>\n```\n\n\n","slug":"【Android 控件的基本属性】","published":1,"updated":"2021-06-03T01:21:20.428Z","layout":"post","photos":[],"link":"","_id":"cks8acfli001pycvmfv1udsb5","content":"<h1 id=\"Android-First-Empty-Application\"><a href=\"#Android-First-Empty-Application\" class=\"headerlink\" title=\"Android First Empty Application\"></a>Android First Empty Application</h1><h4 id=\"控件的基本属性\"><a href=\"#控件的基本属性\" class=\"headerlink\" title=\"控件的基本属性\"></a>控件的基本属性</h4><table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>android:layout_width</td>\n<td>控件的宽度【match_parent、123dp】</td>\n</tr>\n<tr>\n<td>android:layout_height</td>\n<td>控件的高度【match_parent、123dp】</td>\n</tr>\n<tr>\n<td>android:text</td>\n<td>控件文本内容</td>\n</tr>\n<tr>\n<td>android:textColor</td>\n<td>字体颜色【#00000000】</td>\n</tr>\n<tr>\n<td>android:textSize</td>\n<td>字体大小 【40sp】</td>\n</tr>\n<tr>\n<td>android:textStyle</td>\n<td>字体样式【粗体(blod)、italic(斜体)】</td>\n</tr>\n<tr>\n<td>android:gravity</td>\n<td>该控件对象的内容对齐方式【center_vertical(垂直居中)】</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-2/1622616032232-image.png\" alt=\"展示下拉框选项\"></p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-2/1622616086067-image.png\" alt=\"下拉框各个选项\"></p>\n<h3 id=\"创建一个-Empty-Application-项目\"><a href=\"#创建一个-Empty-Application-项目\" class=\"headerlink\" title=\"创建一个 Empty Application 项目\"></a>创建一个 Empty Application 项目</h3><p>将 路径 <code>...\\项目名\\app\\src\\main\\java\\com\\example\\myfirstapp</code>下的 <code>MainActivity.java</code>文件的内容，替换以下内容</p>\n<p><code>MainActivity.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.example.myfirstapp;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.annotation.SuppressLint;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.os.Bundle;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.view.View;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.widget.TextView;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\"></span><br><span class=\"line\">        TextView tv_one = findViewById(R.id.tv_one);</span><br><span class=\"line\">        tv_one.setText(<span class=\"string\">&quot;Hello World&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 使用 Java代码获取控件对象，然后给该对象设置文本内容，</span></span><br><span class=\"line\">        <span class=\"comment\">// 若在xml文件中设置了该控件的文本，运行java代码后会覆盖xml 中的内容</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<br>\n<br>\n\n\n\n<p>将路径 <code>...\\项目名\\app\\src\\main\\res\\layout\\</code> 下的 <code>activity_main.xml</code> 文件的内容  替换成  以下内容</p>\n<p><code>activity_main.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><span class=\"comment\">&lt;!--&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    xmlns:tools=&quot;http://schemas.android.com/tools&quot;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    android:layout_width=&quot;match_parent&quot;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    android:layout_height=&quot;match_parent&quot;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    tools:context=&quot;.MainActivity&quot;&gt;--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    &lt;TextView--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        android:layout_width=&quot;wrap_content&quot;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        android:layout_height=&quot;wrap_content&quot;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        android:text=&quot;Hello World!&quot;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        app:layout_constraintLeft_toLeftOf=&quot;parent&quot;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        app:layout_constraintRight_toRightOf=&quot;parent&quot;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--此 XML 文件定义了 activity 界面 (UI) 的布局。它包含一个 TextView 元素，其中具有“Hello, World!”文本--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">&quot;match_parent&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">&quot;match_parent&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:orientation</span>=<span class=\"string\">&quot;vertical&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:gravity</span>=<span class=\"string\">&quot;center_vertical&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">&quot;@+id/tv_one&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">&quot;843dp&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">&quot;400dp&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:text</span>=<span class=\"string\">&quot;看不到我&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:textColor</span>=<span class=\"string\">&quot;#FF000000&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:textSize</span>=<span class=\"string\">&quot;90sp&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:textStyle</span>=<span class=\"string\">&quot;bold&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">        android:layout_width=&quot;match_parent&quot;</span></span><br><span class=\"line\"><span class=\"comment\">            TextView 控件 的宽度 由 LineLayout容器决定，LineLayout容器多宽，TextView控件就有多宽</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        android:layout_width=&quot;wrap_content&quot;</span></span><br><span class=\"line\"><span class=\"comment\">            TextView 控件 的宽度 由 TextView控件的内容决定。</span></span><br><span class=\"line\"><span class=\"comment\">        同理 高度也是一样的</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        android:id=&quot;@+id/tv_one&quot;</span></span><br><span class=\"line\"><span class=\"comment\">                该属性的作用是，让 java 代码可以根据 id 属性值 获取 控件对象</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        android:layout_width=&quot;200dp&quot;</span></span><br><span class=\"line\"><span class=\"comment\">            该属性值可以使用数字来 赋值</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">                参数 的值 按住 ctrl 不放 鼠标左键点击</span></span><br><span class=\"line\"><span class=\"comment\">                可以看到有三个参数值，其中一个【fill_parent】已经被弃用的</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">                剩余两个参数值分别是：</span></span><br><span class=\"line\"><span class=\"comment\">                    1. wrap_content : 根据 TextView里面控件的内容 分配</span></span><br><span class=\"line\"><span class=\"comment\">                    2. match_parent ： 大小根据取决于 LinearLaout 容器</span></span><br><span class=\"line\"><span class=\"comment\">                    3. fill_parent ： 已经过时</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        android:textColor=&quot;#00000000&quot;</span></span><br><span class=\"line\"><span class=\"comment\">            设置字体颜色</span></span><br><span class=\"line\"><span class=\"comment\">            前面两个 零含义：颜色的透明度 ，00 为纯透明 FF为 不透明</span></span><br><span class=\"line\"><span class=\"comment\">            依次往后两个 零：代表 R(00)G(00)B(00) 红绿蓝</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        android:textStyle=&quot;bold&quot;</span></span><br><span class=\"line\"><span class=\"comment\">            设置字体</span></span><br><span class=\"line\"><span class=\"comment\">            normal ：无效果</span></span><br><span class=\"line\"><span class=\"comment\">            bold ：  粗体</span></span><br><span class=\"line\"><span class=\"comment\">            italic ：斜体</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        android:gravity=&quot;center_vertical&quot;</span></span><br><span class=\"line\"><span class=\"comment\">            该控件对象的内容的对齐方式</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">TextView</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Android-First-Empty-Application\"><a href=\"#Android-First-Empty-Application\" class=\"headerlink\" title=\"Android First Empty Application\"></a>Android First Empty Application</h1><h4 id=\"控件的基本属性\"><a href=\"#控件的基本属性\" class=\"headerlink\" title=\"控件的基本属性\"></a>控件的基本属性</h4><table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>android:layout_width</td>\n<td>控件的宽度【match_parent、123dp】</td>\n</tr>\n<tr>\n<td>android:layout_height</td>\n<td>控件的高度【match_parent、123dp】</td>\n</tr>\n<tr>\n<td>android:text</td>\n<td>控件文本内容</td>\n</tr>\n<tr>\n<td>android:textColor</td>\n<td>字体颜色【#00000000】</td>\n</tr>\n<tr>\n<td>android:textSize</td>\n<td>字体大小 【40sp】</td>\n</tr>\n<tr>\n<td>android:textStyle</td>\n<td>字体样式【粗体(blod)、italic(斜体)】</td>\n</tr>\n<tr>\n<td>android:gravity</td>\n<td>该控件对象的内容对齐方式【center_vertical(垂直居中)】</td>\n</tr>\n</tbody></table>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-2/1622616032232-image.png\" alt=\"展示下拉框选项\"></p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-6-2/1622616086067-image.png\" alt=\"下拉框各个选项\"></p>\n<h3 id=\"创建一个-Empty-Application-项目\"><a href=\"#创建一个-Empty-Application-项目\" class=\"headerlink\" title=\"创建一个 Empty Application 项目\"></a>创建一个 Empty Application 项目</h3><p>将 路径 <code>...\\项目名\\app\\src\\main\\java\\com\\example\\myfirstapp</code>下的 <code>MainActivity.java</code>文件的内容，替换以下内容</p>\n<p><code>MainActivity.java</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.example.myfirstapp;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.annotation.SuppressLint;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.os.Bundle;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.view.View;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.widget.TextView;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\"></span><br><span class=\"line\">        TextView tv_one = findViewById(R.id.tv_one);</span><br><span class=\"line\">        tv_one.setText(<span class=\"string\">&quot;Hello World&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 使用 Java代码获取控件对象，然后给该对象设置文本内容，</span></span><br><span class=\"line\">        <span class=\"comment\">// 若在xml文件中设置了该控件的文本，运行java代码后会覆盖xml 中的内容</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<br>\n<br>\n\n\n\n<p>将路径 <code>...\\项目名\\app\\src\\main\\res\\layout\\</code> 下的 <code>activity_main.xml</code> 文件的内容  替换成  以下内容</p>\n<p><code>activity_main.xml</code></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><span class=\"comment\">&lt;!--&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    xmlns:tools=&quot;http://schemas.android.com/tools&quot;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    android:layout_width=&quot;match_parent&quot;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    android:layout_height=&quot;match_parent&quot;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    tools:context=&quot;.MainActivity&quot;&gt;--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    &lt;TextView--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        android:layout_width=&quot;wrap_content&quot;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        android:layout_height=&quot;wrap_content&quot;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        android:text=&quot;Hello World!&quot;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        app:layout_constraintLeft_toLeftOf=&quot;parent&quot;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        app:layout_constraintRight_toRightOf=&quot;parent&quot;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--此 XML 文件定义了 activity 界面 (UI) 的布局。它包含一个 TextView 元素，其中具有“Hello, World!”文本--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">&quot;match_parent&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">&quot;match_parent&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:orientation</span>=<span class=\"string\">&quot;vertical&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:gravity</span>=<span class=\"string\">&quot;center_vertical&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">&quot;@+id/tv_one&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">&quot;843dp&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">&quot;400dp&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:text</span>=<span class=\"string\">&quot;看不到我&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:textColor</span>=<span class=\"string\">&quot;#FF000000&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:textSize</span>=<span class=\"string\">&quot;90sp&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:textStyle</span>=<span class=\"string\">&quot;bold&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">        android:layout_width=&quot;match_parent&quot;</span></span><br><span class=\"line\"><span class=\"comment\">            TextView 控件 的宽度 由 LineLayout容器决定，LineLayout容器多宽，TextView控件就有多宽</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        android:layout_width=&quot;wrap_content&quot;</span></span><br><span class=\"line\"><span class=\"comment\">            TextView 控件 的宽度 由 TextView控件的内容决定。</span></span><br><span class=\"line\"><span class=\"comment\">        同理 高度也是一样的</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        android:id=&quot;@+id/tv_one&quot;</span></span><br><span class=\"line\"><span class=\"comment\">                该属性的作用是，让 java 代码可以根据 id 属性值 获取 控件对象</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        android:layout_width=&quot;200dp&quot;</span></span><br><span class=\"line\"><span class=\"comment\">            该属性值可以使用数字来 赋值</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">                参数 的值 按住 ctrl 不放 鼠标左键点击</span></span><br><span class=\"line\"><span class=\"comment\">                可以看到有三个参数值，其中一个【fill_parent】已经被弃用的</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">                剩余两个参数值分别是：</span></span><br><span class=\"line\"><span class=\"comment\">                    1. wrap_content : 根据 TextView里面控件的内容 分配</span></span><br><span class=\"line\"><span class=\"comment\">                    2. match_parent ： 大小根据取决于 LinearLaout 容器</span></span><br><span class=\"line\"><span class=\"comment\">                    3. fill_parent ： 已经过时</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        android:textColor=&quot;#00000000&quot;</span></span><br><span class=\"line\"><span class=\"comment\">            设置字体颜色</span></span><br><span class=\"line\"><span class=\"comment\">            前面两个 零含义：颜色的透明度 ，00 为纯透明 FF为 不透明</span></span><br><span class=\"line\"><span class=\"comment\">            依次往后两个 零：代表 R(00)G(00)B(00) 红绿蓝</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        android:textStyle=&quot;bold&quot;</span></span><br><span class=\"line\"><span class=\"comment\">            设置字体</span></span><br><span class=\"line\"><span class=\"comment\">            normal ：无效果</span></span><br><span class=\"line\"><span class=\"comment\">            bold ：  粗体</span></span><br><span class=\"line\"><span class=\"comment\">            italic ：斜体</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        android:gravity=&quot;center_vertical&quot;</span></span><br><span class=\"line\"><span class=\"comment\">            该控件对象的内容的对齐方式</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">TextView</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n"},{"title":"Android Studio 配置问题 > The specified Gradle distribution","date":"2021-08-12T12:08:19.000Z","from":"原创","url":null,"author":"p0ny","about":"一穷二白","avatar":null,"comments":1,"description":"The specified Gradle distribution","sticky":1,"_content":"\n# Android Studio 配置问题 > The specified Gradle distribution\n#### 问题如下\n>一般这种情况是由于 **拉取别人的项目** 然后 **在自己的电脑中导入** 发生的\n>\n> ```\n> The specified Gradle distribution 'file:///E:/DevelopKitTools/Android_Studio/gradle/wrapper/dists/gradle-6.5-all/2oz4ud9k3tuxjg84bbf55q0tn/gradle-5.4-all.zip' does not exist.\n> ```\n> 导入项目之前的配置文件内容如下：\n>    ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628759295229-image.png)\n>\n>\n> **注意其中的classpath字段的值：`com.android.tools.build:gradle:3.4.0`**，表明：**Android Gradle Plugin Version 的版本号：3.4.0**   \n>\n>会自动下载，但是这里需要断掉它，因为本机没有 `gradle-5.1.1-bin.zip` 文件,这里的思路是把 配置文件 修改成 本机上有的`gradle-5.4.1-all.zip` \n\n>所有这里只需要分别修改两个文件\n> 1. `F:\\TempCode\\项目名\\build.gradle`  \n    > 我这里的路径是：`F:\\TempCode\\MyApplicationqqLogin\\build.gradle`\n> 2. `F:\\TempCode\\项目名\\gradle\\wrapper\\gradle-wrapper.properties`  \n    > 我这里的路径是：`F:\\TempCode\\MyApplicationqqLogin\\gradle\\wrapper\\gradle-wrapper.properties`\n    \n>\n>\n> gradle 对应版本`https://developer.android.com/studio/releases/gradle-plugin?hl=zh-cn`   \n>\n> 从上面的网址可以知道 `gradle-5.4.1-all.zip` 对应的 gradle插件版本：`3.5.0 - 3.5.4`   \n>\n>`build.gradle` 文件内容如下：\n>```gradle\n>// Top-level build file where you can add configuration options common to all sub-projects/modules.\n>\n>buildscript {\n>    repositories {\n>        google()\n>        jcenter()\n>        \n>    }\n>    dependencies {\n>        classpath 'com.android.tools.build:gradle:3.4.0'\n>        \n>        // NOTE: Do not place your application dependencies here; they belong\n>        // in the individual module build.gradle files\n>    }\n>}\n>\n>allprojects {\n>    repositories {\n>        google()\n>        jcenter()\n>        \n>    }\n>}\n>\n>task clean(type: Delete) {\n>    delete rootProject.buildDir\n>}\n>\n>```\n### 修改 build.gradle 文件后的内容如下：\n>```gradle\n>// Top-level build file where you can add configuration options common to all sub-projects/modules.\n>\n>buildscript {\n>    repositories {\n>        google()\n>        jcenter()\n>        \n>    }\n>    dependencies {\n>        classpath 'com.android.tools.build:gradle:3.5.4'\n>        \n>        // NOTE: Do not place your application dependencies here; they belong\n>        // in the individual module build.gradle files\n>    }\n>}\n>\n>allprojects {\n>    repositories {\n>        google()\n>        jcenter()\n>        \n>    }\n>}\n>\n>task clean(type: Delete) {\n>    delete rootProject.buildDir\n>}\n>\n>```\n>\n\n\n>`gradle-wrapper.properties` 文件内容如下：\n>```yaml\n>#Sun Jun 20 14:54:20 CST 2021\n>distributionBase=GRADLE_USER_HOME\n>distributionPath=wrapper/dists\n>zipStoreBase=GRADLE_USER_HOME\n>zipStorePath=wrapper/dists\n>distributionUrl=https\\://services.gradle.org/distributions/gradle-5.1.1-all.zip\n>```\n>\n### 修改 gradle-wrapper.properties 文件后的内容如下：\n>`gradle-wrapper.properties` 文件内容如下：\n>```yaml\n>#Sun Jun 20 14:54:20 CST 2021\n>distributionBase=GRADLE_USER_HOME\n>distributionPath=wrapper/dists\n>zipStoreBase=GRADLE_USER_HOME\n>zipStorePath=wrapper/dists\n>distributionUrl=file:///E:/DevelopKitTools/Android_Studio/gradle/wrapper/dists/gradle-5.4.1-all/3221gyojl5jsh0helicew7rwx/gradle-5.4.1-all.zip\n>```\n\n\n\n![gradle插件对应的版本](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628760070992-image.png)\n\n\n![The specified Gradle distribution](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628757287484-image.png)\n\n### 删除 `.gradle` 这个文件 【重点】\n1. 右键 `.gradle` 文件夹，然后  点击删除\n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628769357516-image.png)\n\n2. 点击 `file` > `Invalidate Claches / Restart`\n\n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628769498403-image.png)\n\n\n3. 最后 点击 弹框的 `Invalidate and Restart`\n\n\n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628769519191-image.png)\n\n4. 等待。。。就好了\n\n注意整个项目的路径是需要放到 **没有中文的路径的**否则报错如图：\n\n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628769770869-image.png)\n\n解决方式就是：把项目安排到没有中文路径的即可\n\n\n\n    \n\n\n\n","source":"_posts/Android Studio 配置问题 _The_specified_Gradle_distribution.md","raw":"---\ntitle: Android Studio 配置问题 > The specified Gradle distribution\ndate: 2021-08-12 20:08:19\n# 文章出处名称 #\nfrom: 原创\n# 文章出处链接 #\nurl:\n# 文章作者名称 #\nauthor: p0ny\n# 文章作者签名 #\nabout: 一穷二白\n# 文章作者头像 #\navatar: \n# 是否开启评论 #\ncomments: true\n# 文章标签 #\ntags: Git\n# 文章分类 #\ncategories: AS\n# 文章摘要 #\ndescription: The specified Gradle distribution\n# 文章置顶 #\nsticky: 1\n---\n\n# Android Studio 配置问题 > The specified Gradle distribution\n#### 问题如下\n>一般这种情况是由于 **拉取别人的项目** 然后 **在自己的电脑中导入** 发生的\n>\n> ```\n> The specified Gradle distribution 'file:///E:/DevelopKitTools/Android_Studio/gradle/wrapper/dists/gradle-6.5-all/2oz4ud9k3tuxjg84bbf55q0tn/gradle-5.4-all.zip' does not exist.\n> ```\n> 导入项目之前的配置文件内容如下：\n>    ![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628759295229-image.png)\n>\n>\n> **注意其中的classpath字段的值：`com.android.tools.build:gradle:3.4.0`**，表明：**Android Gradle Plugin Version 的版本号：3.4.0**   \n>\n>会自动下载，但是这里需要断掉它，因为本机没有 `gradle-5.1.1-bin.zip` 文件,这里的思路是把 配置文件 修改成 本机上有的`gradle-5.4.1-all.zip` \n\n>所有这里只需要分别修改两个文件\n> 1. `F:\\TempCode\\项目名\\build.gradle`  \n    > 我这里的路径是：`F:\\TempCode\\MyApplicationqqLogin\\build.gradle`\n> 2. `F:\\TempCode\\项目名\\gradle\\wrapper\\gradle-wrapper.properties`  \n    > 我这里的路径是：`F:\\TempCode\\MyApplicationqqLogin\\gradle\\wrapper\\gradle-wrapper.properties`\n    \n>\n>\n> gradle 对应版本`https://developer.android.com/studio/releases/gradle-plugin?hl=zh-cn`   \n>\n> 从上面的网址可以知道 `gradle-5.4.1-all.zip` 对应的 gradle插件版本：`3.5.0 - 3.5.4`   \n>\n>`build.gradle` 文件内容如下：\n>```gradle\n>// Top-level build file where you can add configuration options common to all sub-projects/modules.\n>\n>buildscript {\n>    repositories {\n>        google()\n>        jcenter()\n>        \n>    }\n>    dependencies {\n>        classpath 'com.android.tools.build:gradle:3.4.0'\n>        \n>        // NOTE: Do not place your application dependencies here; they belong\n>        // in the individual module build.gradle files\n>    }\n>}\n>\n>allprojects {\n>    repositories {\n>        google()\n>        jcenter()\n>        \n>    }\n>}\n>\n>task clean(type: Delete) {\n>    delete rootProject.buildDir\n>}\n>\n>```\n### 修改 build.gradle 文件后的内容如下：\n>```gradle\n>// Top-level build file where you can add configuration options common to all sub-projects/modules.\n>\n>buildscript {\n>    repositories {\n>        google()\n>        jcenter()\n>        \n>    }\n>    dependencies {\n>        classpath 'com.android.tools.build:gradle:3.5.4'\n>        \n>        // NOTE: Do not place your application dependencies here; they belong\n>        // in the individual module build.gradle files\n>    }\n>}\n>\n>allprojects {\n>    repositories {\n>        google()\n>        jcenter()\n>        \n>    }\n>}\n>\n>task clean(type: Delete) {\n>    delete rootProject.buildDir\n>}\n>\n>```\n>\n\n\n>`gradle-wrapper.properties` 文件内容如下：\n>```yaml\n>#Sun Jun 20 14:54:20 CST 2021\n>distributionBase=GRADLE_USER_HOME\n>distributionPath=wrapper/dists\n>zipStoreBase=GRADLE_USER_HOME\n>zipStorePath=wrapper/dists\n>distributionUrl=https\\://services.gradle.org/distributions/gradle-5.1.1-all.zip\n>```\n>\n### 修改 gradle-wrapper.properties 文件后的内容如下：\n>`gradle-wrapper.properties` 文件内容如下：\n>```yaml\n>#Sun Jun 20 14:54:20 CST 2021\n>distributionBase=GRADLE_USER_HOME\n>distributionPath=wrapper/dists\n>zipStoreBase=GRADLE_USER_HOME\n>zipStorePath=wrapper/dists\n>distributionUrl=file:///E:/DevelopKitTools/Android_Studio/gradle/wrapper/dists/gradle-5.4.1-all/3221gyojl5jsh0helicew7rwx/gradle-5.4.1-all.zip\n>```\n\n\n\n![gradle插件对应的版本](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628760070992-image.png)\n\n\n![The specified Gradle distribution](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628757287484-image.png)\n\n### 删除 `.gradle` 这个文件 【重点】\n1. 右键 `.gradle` 文件夹，然后  点击删除\n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628769357516-image.png)\n\n2. 点击 `file` > `Invalidate Claches / Restart`\n\n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628769498403-image.png)\n\n\n3. 最后 点击 弹框的 `Invalidate and Restart`\n\n\n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628769519191-image.png)\n\n4. 等待。。。就好了\n\n注意整个项目的路径是需要放到 **没有中文的路径的**否则报错如图：\n\n![](https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628769770869-image.png)\n\n解决方式就是：把项目安排到没有中文路径的即可\n\n\n\n    \n\n\n\n","slug":"Android Studio 配置问题 _The_specified_Gradle_distribution","published":1,"updated":"2021-08-12T12:06:24.327Z","layout":"post","photos":[],"link":"","_id":"cks8vyy050000o0vm0j7z56sp","content":"<h1 id=\"Android-Studio-配置问题-gt-The-specified-Gradle-distribution\"><a href=\"#Android-Studio-配置问题-gt-The-specified-Gradle-distribution\" class=\"headerlink\" title=\"Android Studio 配置问题 &gt; The specified Gradle distribution\"></a>Android Studio 配置问题 &gt; The specified Gradle distribution</h1><h4 id=\"问题如下\"><a href=\"#问题如下\" class=\"headerlink\" title=\"问题如下\"></a>问题如下</h4><blockquote>\n<p>一般这种情况是由于 <strong>拉取别人的项目</strong> 然后 <strong>在自己的电脑中导入</strong> 发生的</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The specified Gradle distribution &#x27;file:///E:/DevelopKitTools/Android_Studio/gradle/wrapper/dists/gradle-6.5-all/2oz4ud9k3tuxjg84bbf55q0tn/gradle-5.4-all.zip&#x27; does not exist.</span><br></pre></td></tr></table></figure>\n<p>导入项目之前的配置文件内容如下：<br>   <img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628759295229-image.png\"></p>\n<p><strong>注意其中的classpath字段的值：<code>com.android.tools.build:gradle:3.4.0</code><strong>，表明：</strong>Android Gradle Plugin Version 的版本号：3.4.0</strong>   </p>\n<p>会自动下载，但是这里需要断掉它，因为本机没有 <code>gradle-5.1.1-bin.zip</code> 文件,这里的思路是把 配置文件 修改成 本机上有的<code>gradle-5.4.1-all.zip</code> </p>\n</blockquote>\n<blockquote>\n<p>所有这里只需要分别修改两个文件</p>\n<ol>\n<li><code>F:\\TempCode\\项目名\\build.gradle</code><br>我这里的路径是：<code>F:\\TempCode\\MyApplicationqqLogin\\build.gradle</code></li>\n<li><code>F:\\TempCode\\项目名\\gradle\\wrapper\\gradle-wrapper.properties</code><br>我这里的路径是：<code>F:\\TempCode\\MyApplicationqqLogin\\gradle\\wrapper\\gradle-wrapper.properties</code></li>\n</ol>\n</blockquote>\n<blockquote>\n<p>gradle 对应版本<code>https://developer.android.com/studio/releases/gradle-plugin?hl=zh-cn</code>   </p>\n<p>从上面的网址可以知道 <code>gradle-5.4.1-all.zip</code> 对应的 gradle插件版本：<code>3.5.0 - 3.5.4</code>   </p>\n<p><code>build.gradle</code> 文件内容如下：</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;<span class=\"comment\">// Top-level build file where you can add configuration options common to all sub-projects/modules.</span></span><br><span class=\"line\"></span><br><span class=\"line\">&gt;<span class=\"keyword\">buildscript</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">       google()</span><br><span class=\"line\">       jcenter()</span><br><span class=\"line\">       </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">       <span class=\"keyword\">classpath</span> <span class=\"string\">&#x27;com.android.tools.build:gradle:3.4.0&#x27;</span></span><br><span class=\"line\">       </span><br><span class=\"line\">       <span class=\"comment\">// <span class=\"doctag\">NOTE:</span> Do not place your application dependencies here; they belong</span></span><br><span class=\"line\">       <span class=\"comment\">// in the individual module build.gradle files</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&gt;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;<span class=\"keyword\">allprojects</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">       google()</span><br><span class=\"line\">       jcenter()</span><br><span class=\"line\">       </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&gt;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;<span class=\"keyword\">task</span> clean(type: <span class=\"keyword\">Delete</span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">delete</span> rootProject.buildDir</span><br><span class=\"line\">&gt;&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</blockquote>\n<h3 id=\"修改-build-gradle-文件后的内容如下：\"><a href=\"#修改-build-gradle-文件后的内容如下：\" class=\"headerlink\" title=\"修改 build.gradle 文件后的内容如下：\"></a>修改 build.gradle 文件后的内容如下：</h3><blockquote>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;<span class=\"comment\">// Top-level build file where you can add configuration options common to all sub-projects/modules.</span></span><br><span class=\"line\"></span><br><span class=\"line\">&gt;<span class=\"keyword\">buildscript</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">       google()</span><br><span class=\"line\">       jcenter()</span><br><span class=\"line\">       </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">       <span class=\"keyword\">classpath</span> <span class=\"string\">&#x27;com.android.tools.build:gradle:3.5.4&#x27;</span></span><br><span class=\"line\">       </span><br><span class=\"line\">       <span class=\"comment\">// <span class=\"doctag\">NOTE:</span> Do not place your application dependencies here; they belong</span></span><br><span class=\"line\">       <span class=\"comment\">// in the individual module build.gradle files</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&gt;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;<span class=\"keyword\">allprojects</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">       google()</span><br><span class=\"line\">       jcenter()</span><br><span class=\"line\">       </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&gt;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;<span class=\"keyword\">task</span> clean(type: <span class=\"keyword\">Delete</span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">delete</span> rootProject.buildDir</span><br><span class=\"line\">&gt;&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n</blockquote>\n<blockquote>\n<p><code>gradle-wrapper.properties</code> 文件内容如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&gt;#Sun</span> <span class=\"string\">Jun</span> <span class=\"number\">20</span> <span class=\"number\">14</span><span class=\"string\">:54:20</span> <span class=\"string\">CST</span> <span class=\"number\">2021</span></span><br><span class=\"line\"><span class=\"string\">&gt;distributionBase=GRADLE_USER_HOME</span></span><br><span class=\"line\"><span class=\"string\">&gt;distributionPath=wrapper/dists</span></span><br><span class=\"line\"><span class=\"string\">&gt;zipStoreBase=GRADLE_USER_HOME</span></span><br><span class=\"line\"><span class=\"string\">&gt;zipStorePath=wrapper/dists</span></span><br><span class=\"line\"><span class=\"string\">&gt;distributionUrl=https\\://services.gradle.org/distributions/gradle-5.1.1-all.zip</span></span><br></pre></td></tr></table></figure>\n\n</blockquote>\n<h3 id=\"修改-gradle-wrapper-properties-文件后的内容如下：\"><a href=\"#修改-gradle-wrapper-properties-文件后的内容如下：\" class=\"headerlink\" title=\"修改 gradle-wrapper.properties 文件后的内容如下：\"></a>修改 gradle-wrapper.properties 文件后的内容如下：</h3><blockquote>\n<p><code>gradle-wrapper.properties</code> 文件内容如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&gt;#Sun</span> <span class=\"string\">Jun</span> <span class=\"number\">20</span> <span class=\"number\">14</span><span class=\"string\">:54:20</span> <span class=\"string\">CST</span> <span class=\"number\">2021</span></span><br><span class=\"line\"><span class=\"string\">&gt;distributionBase=GRADLE_USER_HOME</span></span><br><span class=\"line\"><span class=\"string\">&gt;distributionPath=wrapper/dists</span></span><br><span class=\"line\"><span class=\"string\">&gt;zipStoreBase=GRADLE_USER_HOME</span></span><br><span class=\"line\"><span class=\"string\">&gt;zipStorePath=wrapper/dists</span></span><br><span class=\"line\"><span class=\"string\">&gt;distributionUrl=file:///E:/DevelopKitTools/Android_Studio/gradle/wrapper/dists/gradle-5.4.1-all/3221gyojl5jsh0helicew7rwx/gradle-5.4.1-all.zip</span></span><br></pre></td></tr></table></figure>\n</blockquote>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628760070992-image.png\" alt=\"gradle插件对应的版本\"></p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628757287484-image.png\" alt=\"The specified Gradle distribution\"></p>\n<h3 id=\"删除-gradle-这个文件-【重点】\"><a href=\"#删除-gradle-这个文件-【重点】\" class=\"headerlink\" title=\"删除 .gradle 这个文件 【重点】\"></a>删除 <code>.gradle</code> 这个文件 【重点】</h3><ol>\n<li><p>右键 <code>.gradle</code> 文件夹，然后  点击删除<br><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628769357516-image.png\"></p>\n</li>\n<li><p>点击 <code>file</code> &gt; <code>Invalidate Claches / Restart</code></p>\n</li>\n</ol>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628769498403-image.png\"></p>\n<ol start=\"3\">\n<li>最后 点击 弹框的 <code>Invalidate and Restart</code></li>\n</ol>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628769519191-image.png\"></p>\n<ol start=\"4\">\n<li>等待。。。就好了</li>\n</ol>\n<p>注意整个项目的路径是需要放到 <strong>没有中文的路径的</strong>否则报错如图：</p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628769770869-image.png\"></p>\n<p>解决方式就是：把项目安排到没有中文路径的即可</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Android-Studio-配置问题-gt-The-specified-Gradle-distribution\"><a href=\"#Android-Studio-配置问题-gt-The-specified-Gradle-distribution\" class=\"headerlink\" title=\"Android Studio 配置问题 &gt; The specified Gradle distribution\"></a>Android Studio 配置问题 &gt; The specified Gradle distribution</h1><h4 id=\"问题如下\"><a href=\"#问题如下\" class=\"headerlink\" title=\"问题如下\"></a>问题如下</h4><blockquote>\n<p>一般这种情况是由于 <strong>拉取别人的项目</strong> 然后 <strong>在自己的电脑中导入</strong> 发生的</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The specified Gradle distribution &#x27;file:///E:/DevelopKitTools/Android_Studio/gradle/wrapper/dists/gradle-6.5-all/2oz4ud9k3tuxjg84bbf55q0tn/gradle-5.4-all.zip&#x27; does not exist.</span><br></pre></td></tr></table></figure>\n<p>导入项目之前的配置文件内容如下：<br>   <img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628759295229-image.png\"></p>\n<p><strong>注意其中的classpath字段的值：<code>com.android.tools.build:gradle:3.4.0</code><strong>，表明：</strong>Android Gradle Plugin Version 的版本号：3.4.0</strong>   </p>\n<p>会自动下载，但是这里需要断掉它，因为本机没有 <code>gradle-5.1.1-bin.zip</code> 文件,这里的思路是把 配置文件 修改成 本机上有的<code>gradle-5.4.1-all.zip</code> </p>\n</blockquote>\n<blockquote>\n<p>所有这里只需要分别修改两个文件</p>\n<ol>\n<li><code>F:\\TempCode\\项目名\\build.gradle</code><br>我这里的路径是：<code>F:\\TempCode\\MyApplicationqqLogin\\build.gradle</code></li>\n<li><code>F:\\TempCode\\项目名\\gradle\\wrapper\\gradle-wrapper.properties</code><br>我这里的路径是：<code>F:\\TempCode\\MyApplicationqqLogin\\gradle\\wrapper\\gradle-wrapper.properties</code></li>\n</ol>\n</blockquote>\n<blockquote>\n<p>gradle 对应版本<code>https://developer.android.com/studio/releases/gradle-plugin?hl=zh-cn</code>   </p>\n<p>从上面的网址可以知道 <code>gradle-5.4.1-all.zip</code> 对应的 gradle插件版本：<code>3.5.0 - 3.5.4</code>   </p>\n<p><code>build.gradle</code> 文件内容如下：</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;<span class=\"comment\">// Top-level build file where you can add configuration options common to all sub-projects/modules.</span></span><br><span class=\"line\"></span><br><span class=\"line\">&gt;<span class=\"keyword\">buildscript</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">       google()</span><br><span class=\"line\">       jcenter()</span><br><span class=\"line\">       </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">       <span class=\"keyword\">classpath</span> <span class=\"string\">&#x27;com.android.tools.build:gradle:3.4.0&#x27;</span></span><br><span class=\"line\">       </span><br><span class=\"line\">       <span class=\"comment\">// <span class=\"doctag\">NOTE:</span> Do not place your application dependencies here; they belong</span></span><br><span class=\"line\">       <span class=\"comment\">// in the individual module build.gradle files</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&gt;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;<span class=\"keyword\">allprojects</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">       google()</span><br><span class=\"line\">       jcenter()</span><br><span class=\"line\">       </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&gt;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;<span class=\"keyword\">task</span> clean(type: <span class=\"keyword\">Delete</span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">delete</span> rootProject.buildDir</span><br><span class=\"line\">&gt;&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</blockquote>\n<h3 id=\"修改-build-gradle-文件后的内容如下：\"><a href=\"#修改-build-gradle-文件后的内容如下：\" class=\"headerlink\" title=\"修改 build.gradle 文件后的内容如下：\"></a>修改 build.gradle 文件后的内容如下：</h3><blockquote>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;<span class=\"comment\">// Top-level build file where you can add configuration options common to all sub-projects/modules.</span></span><br><span class=\"line\"></span><br><span class=\"line\">&gt;<span class=\"keyword\">buildscript</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">       google()</span><br><span class=\"line\">       jcenter()</span><br><span class=\"line\">       </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">       <span class=\"keyword\">classpath</span> <span class=\"string\">&#x27;com.android.tools.build:gradle:3.5.4&#x27;</span></span><br><span class=\"line\">       </span><br><span class=\"line\">       <span class=\"comment\">// <span class=\"doctag\">NOTE:</span> Do not place your application dependencies here; they belong</span></span><br><span class=\"line\">       <span class=\"comment\">// in the individual module build.gradle files</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&gt;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;<span class=\"keyword\">allprojects</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">       google()</span><br><span class=\"line\">       jcenter()</span><br><span class=\"line\">       </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&gt;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;<span class=\"keyword\">task</span> clean(type: <span class=\"keyword\">Delete</span>) &#123;</span><br><span class=\"line\">   <span class=\"keyword\">delete</span> rootProject.buildDir</span><br><span class=\"line\">&gt;&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n</blockquote>\n<blockquote>\n<p><code>gradle-wrapper.properties</code> 文件内容如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&gt;#Sun</span> <span class=\"string\">Jun</span> <span class=\"number\">20</span> <span class=\"number\">14</span><span class=\"string\">:54:20</span> <span class=\"string\">CST</span> <span class=\"number\">2021</span></span><br><span class=\"line\"><span class=\"string\">&gt;distributionBase=GRADLE_USER_HOME</span></span><br><span class=\"line\"><span class=\"string\">&gt;distributionPath=wrapper/dists</span></span><br><span class=\"line\"><span class=\"string\">&gt;zipStoreBase=GRADLE_USER_HOME</span></span><br><span class=\"line\"><span class=\"string\">&gt;zipStorePath=wrapper/dists</span></span><br><span class=\"line\"><span class=\"string\">&gt;distributionUrl=https\\://services.gradle.org/distributions/gradle-5.1.1-all.zip</span></span><br></pre></td></tr></table></figure>\n\n</blockquote>\n<h3 id=\"修改-gradle-wrapper-properties-文件后的内容如下：\"><a href=\"#修改-gradle-wrapper-properties-文件后的内容如下：\" class=\"headerlink\" title=\"修改 gradle-wrapper.properties 文件后的内容如下：\"></a>修改 gradle-wrapper.properties 文件后的内容如下：</h3><blockquote>\n<p><code>gradle-wrapper.properties</code> 文件内容如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&gt;#Sun</span> <span class=\"string\">Jun</span> <span class=\"number\">20</span> <span class=\"number\">14</span><span class=\"string\">:54:20</span> <span class=\"string\">CST</span> <span class=\"number\">2021</span></span><br><span class=\"line\"><span class=\"string\">&gt;distributionBase=GRADLE_USER_HOME</span></span><br><span class=\"line\"><span class=\"string\">&gt;distributionPath=wrapper/dists</span></span><br><span class=\"line\"><span class=\"string\">&gt;zipStoreBase=GRADLE_USER_HOME</span></span><br><span class=\"line\"><span class=\"string\">&gt;zipStorePath=wrapper/dists</span></span><br><span class=\"line\"><span class=\"string\">&gt;distributionUrl=file:///E:/DevelopKitTools/Android_Studio/gradle/wrapper/dists/gradle-5.4.1-all/3221gyojl5jsh0helicew7rwx/gradle-5.4.1-all.zip</span></span><br></pre></td></tr></table></figure>\n</blockquote>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628760070992-image.png\" alt=\"gradle插件对应的版本\"></p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628757287484-image.png\" alt=\"The specified Gradle distribution\"></p>\n<h3 id=\"删除-gradle-这个文件-【重点】\"><a href=\"#删除-gradle-这个文件-【重点】\" class=\"headerlink\" title=\"删除 .gradle 这个文件 【重点】\"></a>删除 <code>.gradle</code> 这个文件 【重点】</h3><ol>\n<li><p>右键 <code>.gradle</code> 文件夹，然后  点击删除<br><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628769357516-image.png\"></p>\n</li>\n<li><p>点击 <code>file</code> &gt; <code>Invalidate Claches / Restart</code></p>\n</li>\n</ol>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628769498403-image.png\"></p>\n<ol start=\"3\">\n<li>最后 点击 弹框的 <code>Invalidate and Restart</code></li>\n</ol>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628769519191-image.png\"></p>\n<ol start=\"4\">\n<li>等待。。。就好了</li>\n</ol>\n<p>注意整个项目的路径是需要放到 <strong>没有中文的路径的</strong>否则报错如图：</p>\n<p><img src=\"https://gitee.com/coder_p0ny/md-nice-markdown_pic/raw/master/2021-8-12/1628769770869-image.png\"></p>\n<p>解决方式就是：把项目安排到没有中文路径的即可</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cks8acfk50001ycvm5lp44pan","category_id":"cks8acfkc0004ycvm1v3hf3kl","_id":"cks8acfkp000iycvmdyepc6mh"},{"post_id":"cks8acfk90003ycvm28n59wdt","category_id":"cks8acfkj000cycvm4fei9h28","_id":"cks8acfkt000oycvm0gy01c6t"},{"post_id":"cks8acfkf0007ycvmf6znc9gu","category_id":"cks8acfkp000jycvm36qtgsm2","_id":"cks8acfky000uycvm22fa7zzq"},{"post_id":"cks8acfkh0009ycvmh2e5fovo","category_id":"cks8acfkt000pycvm7op01mbc","_id":"cks8acfl0000zycvm2cvr7e60"},{"post_id":"cks8acfkx000tycvmhjaxe23o","category_id":"cks8acfkt000pycvm7op01mbc","_id":"cks8acfl10013ycvm04gm0lf3"},{"post_id":"cks8acfkj000bycvm5bgph6u5","category_id":"cks8acfky000wycvmdniq6hrs","_id":"cks8acfl20014ycvm66t17f0p"},{"post_id":"cks8acfkm000gycvma9ls8vxa","category_id":"cks8acfl10011ycvm446mabyz","_id":"cks8acfl60018ycvmhhgk5d52"},{"post_id":"cks8acfko000hycvm94j5fscx","category_id":"cks8acfl50016ycvma7zpa7i3","_id":"cks8acfl8001eycvmaplf6h5j"},{"post_id":"cks8acfkq000lycvmgr6m0lcv","category_id":"cks8acfl50016ycvma7zpa7i3","_id":"cks8acfl9001gycvm3bu4h5pi"},{"post_id":"cks8acfks000nycvm5fgggnh1","category_id":"cks8acfl8001dycvmg8ghgnkm","_id":"cks8acfla001kycvmbqo162cf"},{"post_id":"cks8acfkz000xycvm2sps8f53","category_id":"cks8acfl8001dycvmg8ghgnkm","_id":"cks8acflb001nycvmer8jgefs"},{"post_id":"cks8acfli001pycvmfv1udsb5","category_id":"cks8acflk001qycvm6z5533q6","_id":"cks8acfll001tycvmf9m8381c"},{"post_id":"cks8vyy050000o0vm0j7z56sp","category_id":"cks8vyy0d0001o0vm0ezra7yw","_id":"cks8vyy0l0003o0vme2c17f0d"}],"PostTag":[{"post_id":"cks8acfk50001ycvm5lp44pan","tag_id":"cks8acfkd0005ycvm5jwu5u9l","_id":"cks8acfkl000eycvmdcckcrt5"},{"post_id":"cks8acfk90003ycvm28n59wdt","tag_id":"cks8acfkk000dycvmeh8x2bxq","_id":"cks8acfkr000mycvm3k5mgtax"},{"post_id":"cks8acfkf0007ycvmf6znc9gu","tag_id":"cks8acfkq000kycvmbten66ct","_id":"cks8acfkx000sycvm1o414w01"},{"post_id":"cks8acfkh0009ycvmh2e5fovo","tag_id":"cks8acfkq000kycvmbten66ct","_id":"cks8acfl0000yycvmc3fx2szp"},{"post_id":"cks8acfkj000bycvm5bgph6u5","tag_id":"cks8acfky000vycvm18eo9f5d","_id":"cks8acfl10012ycvm55eb255z"},{"post_id":"cks8acfkm000gycvma9ls8vxa","tag_id":"cks8acfl10010ycvmezic18a0","_id":"cks8acfl60017ycvm5rd70o3o"},{"post_id":"cks8acfko000hycvm94j5fscx","tag_id":"cks8acfl20015ycvm2am24nvj","_id":"cks8acfl7001bycvmh4g6dwya"},{"post_id":"cks8acfkq000lycvmgr6m0lcv","tag_id":"cks8acfl20015ycvm2am24nvj","_id":"cks8acfl9001fycvm9aabd0c0"},{"post_id":"cks8acfks000nycvm5fgggnh1","tag_id":"cks8acfl8001cycvm39rrb1n7","_id":"cks8acfla001jycvmairycpda"},{"post_id":"cks8acfkx000tycvmhjaxe23o","tag_id":"cks8acfl9001hycvmhc3918w0","_id":"cks8acflb001mycvm1mzk5nqb"},{"post_id":"cks8acfkz000xycvm2sps8f53","tag_id":"cks8acfl8001cycvm39rrb1n7","_id":"cks8acflc001oycvmbx2o8qyj"},{"post_id":"cks8acfli001pycvmfv1udsb5","tag_id":"cks8acflk001rycvm5gmx72md","_id":"cks8acfll001sycvm785kehcc"},{"post_id":"cks8vyy050000o0vm0j7z56sp","tag_id":"cks8acfkq000kycvmbten66ct","_id":"cks8vyy0k0002o0vm3j26avnl"}],"Tag":[{"name":"CMD","_id":"cks8acfkd0005ycvm5jwu5u9l"},{"name":"android","_id":"cks8acfkk000dycvmeh8x2bxq"},{"name":"Git","_id":"cks8acfkq000kycvmbten66ct"},{"name":"java JNI","_id":"cks8acfky000vycvm18eo9f5d"},{"name":"MySQL","_id":"cks8acfl10010ycvmezic18a0"},{"name":"Python","_id":"cks8acfl20015ycvm2am24nvj"},{"name":"Windows","_id":"cks8acfl8001cycvm39rrb1n7"},{"name":"Git hexo","_id":"cks8acfl9001hycvmhc3918w0"},{"name":"Android Studio","_id":"cks8acflk001rycvm5gmx72md"}]}}